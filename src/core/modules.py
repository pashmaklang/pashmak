#
# modules.py
#
# The Pashmak Project
# Copyright 2020-2021 parsa shahmaleki <parsampsh@gmail.com>
#
# This file is part of Pashmak.
#
# Pashmak is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Pashmak is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Pashmak.  If not, see <https://www.gnu.org/licenses/>.
#########################################################################

""" Internal modules """

# This file is auto generated by `make module`.
# Do Not change this file
# The modules in `src/` folder with `.pashm` extension will be mixed here
# to be accessible in the python code for interpreter cores

modules = {}
""" The builtin modules as dictionary """

modules["compiler"] = [{'str': '@doc "The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'command': '@doc', 'args_str': '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"', 'args': ['"The', 'Mixer', 'class', 'gets', 'a', 'file', 'path', 'and', 'crawls', 'in', 'that,', 'finds', 'imports', 'and', 'mixes', 'them\\nExample:', '$mixer', '=', "Mixer('/path/to/file.pashm')", '#', 'then,', 'finally', 'generated', 'code', 'is', 'accessible:', 'println($mixer->total_content)"'], 'file_path': '@compiler', 'line_number': 22, 'strings': [[False, '@doc '], [True, '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"']], 'args_eval': [['s', '"The Mixer class gets a file path and crawls in that, finds imports and mixes them\\nExample:    $mixer = Mixer(\'/path/to/file.pashm\')    # then, finally generated code is accessible:    println($mixer->total_content)"']]}, {'str': 'class Mixer', 'command': 'class', 'args_str': 'Mixer', 'args': ['Mixer'], 'file_path': '@compiler', 'line_number': 23, 'strings': [[False, 'class Mixer']], 'eval': [['o', 'class'], ['o', 'Mixer']], 'args_eval': [['o', 'Mixer']]}, {'str': 'func __init__(string $path)', 'command': 'func', 'args_str': '__init__(string $path)', 'args': ['__init__(string', '$path)'], 'file_path': '@compiler', 'line_number': 24, 'strings': [[False, 'func __init__(string $path)']], 'eval': [['o', 'func'], ['o', '__init__'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', '__init__'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': "$this->total_content = ''", 'command': '$this->total_content', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@compiler', 'line_number': 25, 'strings': [[False, '$this->total_content = '], [True, "''"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['s', "''"]], 'args_eval': [['l', '='], ['s', "''"]]}, {'str': '$this->imported_files = []', 'command': '$this->imported_files', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@compiler', 'line_number': 26, 'strings': [[False, '$this->imported_files = []']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', '='], ['l', '['], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['l', ']']]}, {'str': "$this->last_is_main = 'True'", 'command': '$this->last_is_main', 'args_str': "= 'True'", 'args': ['=', "'True'"], 'file_path': '@compiler', 'line_number': 27, 'strings': [[False, '$this->last_is_main = '], [True, "'True'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'last_is_main'], ['l', '='], ['s', "'True'"]], 'args_eval': [['l', '='], ['s', "'True'"]]}, {'str': '$this->crawl ($path)', 'command': '$this->crawl', 'args_str': '($path)', 'args': ['($path)'], 'file_path': '@compiler', 'line_number': 28, 'strings': [[False, '$this->crawl ($path)']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'crawl'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': '$parsed_code = parser.parse($this->total_content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($this->total_content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($this->total_content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 29, 'strings': [[False, '$parsed_code = parser.parse($this->total_content, filepath=$path, only_parse=True)']], 'eval': [['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '='], ['o', 'parser.parse'], ['l', '('], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', ','], ['o', 'filepath'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'only_parse'], ['l', '='], ['o', 'True'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'parser.parse'], ['l', '('], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', ','], ['o', 'filepath'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'only_parse'], ['l', '='], ['o', 'True'], ['l', ')']]}, {'str': "$new_content = '#!/usr/bin/env pashmak\\n'", 'command': '$new_content', 'args_str': "= '#!/usr/bin/env pashmak\\n'", 'args': ['=', "'#!/usr/bin/env", "pashmak\\n'"], 'file_path': '@compiler', 'line_number': 30, 'strings': [[False, '$new_content = '], [True, "'#!/usr/bin/env pashmak\\n'"], [False, '']], 'eval': [['v', 'new_content', 'self.get_var("new_content")'], ['l', '='], ['s', "'#!/usr/bin/env pashmak\\n'"]], 'args_eval': [['l', '='], ['s', "'#!/usr/bin/env pashmak\\n'"]]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 31, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 32, 'strings': [[False, 'while $i < len($parsed_code)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', ')']]}, {'str': "$new_content = $new_content + $parsed_code[$i]['str'] + ';'", 'command': '$new_content', 'args_str': "= $new_content + $parsed_code[$i]['str'] + ';'", 'args': ['=', '$new_content', '+', "$parsed_code[$i]['str']", '+', "';'"], 'file_path': '@compiler', 'line_number': 33, 'strings': [[False, '$new_content = $new_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "';'"], [False, '']], 'eval': [['v', 'new_content', 'self.get_var("new_content")'], ['l', '='], ['v', 'new_content', 'self.get_var("new_content")'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "';'"]], 'args_eval': [['l', '='], ['v', 'new_content', 'self.get_var("new_content")'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "';'"]]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 34, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 35, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$this->total_content = $new_content->strip()', 'command': '$this->total_content', 'args_str': '= $new_content->strip()', 'args': ['=', '$new_content->strip()'], 'file_path': '@compiler', 'line_number': 36, 'strings': [[False, '$this->total_content = $new_content->strip()']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['v', 'new_content', 'self.get_var("new_content")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'new_content', 'self.get_var("new_content")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'command': '@doc', 'args_str': '"    Crawls in a path and finds imports    \\n    This method is called recursively    "', 'args': ['"', 'Crawls', 'in', 'a', 'path', 'and', 'finds', 'imports', '\\n', 'This', 'method', 'is', 'called', 'recursively', '"'], 'file_path': '@compiler', 'line_number': 38, 'strings': [[False, '@doc '], [True, '"    Crawls in a path and finds imports    \\n    This method is called recursively    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"    Crawls in a path and finds imports    \\n    This method is called recursively    "']], 'args_eval': [['s', '"    Crawls in a path and finds imports    \\n    This method is called recursively    "']]}, {'str': 'func crawl(string $path)', 'command': 'func', 'args_str': 'crawl(string $path)', 'args': ['crawl(string', '$path)'], 'file_path': '@compiler', 'line_number': 39, 'strings': [[False, 'func crawl(string $path)']], 'eval': [['o', 'func'], ['o', 'crawl'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'crawl'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': '$path = os.path.abspath($path)', 'command': '$path', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@compiler', 'line_number': 40, 'strings': [[False, '$path = os.path.abspath($path)']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'if os.path.isdir($path)', 'command': 'if', 'args_str': 'os.path.isdir($path)', 'args': ['os.path.isdir($path)'], 'file_path': '@compiler', 'line_number': 41, 'strings': [[False, 'if os.path.isdir($path)']], 'eval': [['o', 'if'], ['o', 'os.path.isdir'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'os.path.isdir'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'mem not (os.path.isdir($path))', 'command': 'mem', 'args_str': 'not (os.path.isdir($path))', 'args': ['not', '(os.path.isdir($path))'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'mem not (os.path.isdir($path))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'os.path.isdir'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'os.path.isdir'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif0_2', 'command': 'gotoif', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'gotoif tmplabelif0_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif0_2']], 'args_eval': [['o', 'tmplabelif0_2']]}, {'str': "$path = $path + '/__init__.pashm'", 'command': '$path', 'args_str': "= $path + '/__init__.pashm'", 'args': ['=', '$path', '+', "'/__init__.pashm'"], 'file_path': '@compiler', 'line_number': 42, 'strings': [[False, '$path = $path + '], [True, "'/__init__.pashm'"], [False, '']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/__init__.pashm'"]], 'args_eval': [['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/__init__.pashm'"]]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 43, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif0_2', 'command': 'label', 'args_str': 'tmplabelif0_2', 'args': ['tmplabelif0_2'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif0_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif0_2']], 'args_eval': [['o', 'tmplabelif0_2']]}, {'str': 'label tmplabelif0_end', 'command': 'label', 'args_str': 'tmplabelif0_end', 'args': ['tmplabelif0_end'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif0_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif0_end']], 'args_eval': [['o', 'tmplabelif0_end']]}, {'str': "$f = open($path, 'r')", 'command': '$f', 'args_str': "= open($path, 'r')", 'args': ['=', 'open($path,', "'r')"], 'file_path': '@compiler', 'line_number': 44, 'strings': [[False, '$f = open($path, '], [True, "'r'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'r'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'r'"], ['l', ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@compiler', 'line_number': 45, 'strings': [[False, '$content = $f->read()']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 46, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': '$parsed_code = parser.parse($content, filepath=$path, only_parse=True)', 'command': '$parsed_code', 'args_str': '= parser.parse($content, filepath=$path, only_parse=True)', 'args': ['=', 'parser.parse($content,', 'filepath=$path,', 'only_parse=True)'], 'file_path': '@compiler', 'line_number': 47, 'strings': [[False, '$parsed_code = parser.parse($content, filepath=$path, only_parse=True)']], 'eval': [['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '='], ['o', 'parser.parse'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['o', 'filepath'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'only_parse'], ['l', '='], ['o', 'True'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'parser.parse'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['o', 'filepath'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'only_parse'], ['l', '='], ['o', 'True'], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 49, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($parsed_code)', 'command': 'while', 'args_str': '$i < len($parsed_code)', 'args': ['$i', '<', 'len($parsed_code)'], 'file_path': '@compiler', 'line_number': 50, 'strings': [[False, 'while $i < len($parsed_code)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', ')']]}, {'str': "if $parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'command': 'if', 'args_str': "$parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once'", 'args': ["$parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once'"], 'file_path': '@compiler', 'line_number': 51, 'strings': [[False, 'if $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, '']], 'eval': [['o', 'if'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import'"], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import_once'"]], 'args_eval': [['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import'"], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import_once'"]]}, {'str': "mem not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'command': 'mem', 'args_str': "not ($parsed_code[$i]['command'] == 'import' or $parsed_code[$i]['command'] == 'import_once')", 'args': ['not', "($parsed_code[$i]['command']", '==', "'import'", 'or', "$parsed_code[$i]['command']", '==', "'import_once')"], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'mem not ($parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import'"], [False, ' or $parsed_code[$i]['], [True, "'command'"], [False, '] == '], [True, "'import_once'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import'"], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import_once'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import'"], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'import_once'"], ['l', ')']]}, {'str': 'gotoif tmplabelif1_2', 'command': 'gotoif', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'gotoif tmplabelif1_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif1_2']], 'args_eval': [['o', 'tmplabelif1_2']]}, {'str': '$import_cmd_arg = False', 'command': '$import_cmd_arg', 'args_str': '= False', 'args': ['=', 'False'], 'file_path': '@compiler', 'line_number': 52, 'strings': [[False, '$import_cmd_arg = False']], 'eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '='], ['o', 'False']], 'args_eval': [['l', '='], ['o', 'False']]}, {'str': 'try error', 'command': 'try', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 53, 'strings': [[False, 'try error']], 'eval': [['o', 'try'], ['o', 'error']], 'args_eval': [['o', 'error']]}, {'str': '$__old_dir__ = $__dir__', 'command': '$__old_dir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@compiler', 'line_number': 54, 'strings': [[False, '$__old_dir__ = $__dir__']], 'eval': [['v', '__old_dir__', 'self.get_var("__old_dir__")'], ['l', '='], ['v', '__dir__', 'self.get_var("__dir__")']], 'args_eval': [['l', '='], ['v', '__dir__', 'self.get_var("__dir__")']]}, {'str': '$__old_file__ = $__file__', 'command': '$__old_file__', 'args_str': '= $__file__', 'args': ['=', '$__file__'], 'file_path': '@compiler', 'line_number': 55, 'strings': [[False, '$__old_file__ = $__file__']], 'eval': [['v', '__old_file__', 'self.get_var("__old_file__")'], ['l', '='], ['v', '__file__', 'self.get_var("__file__")']], 'args_eval': [['l', '='], ['v', '__file__', 'self.get_var("__file__")']]}, {'str': '$__dir__ = os.path.dirname($path)', 'command': '$__dir__', 'args_str': '= os.path.dirname($path)', 'args': ['=', 'os.path.dirname($path)'], 'file_path': '@compiler', 'line_number': 56, 'strings': [[False, '$__dir__ = os.path.dirname($path)']], 'eval': [['v', '__dir__', 'self.get_var("__dir__")'], ['l', '='], ['o', 'os.path.dirname'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.dirname'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': '$__file__ = $path', 'command': '$__file__', 'args_str': '= $path', 'args': ['=', '$path'], 'file_path': '@compiler', 'line_number': 57, 'strings': [[False, '$__file__ = $path']], 'eval': [['v', '__file__', 'self.get_var("__file__")'], ['l', '='], ['v', 'path', 'self.get_var("path")']], 'args_eval': [['l', '='], ['v', 'path', 'self.get_var("path")']]}, {'str': "$import_cmd_arg = python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'command': '$import_cmd_arg', 'args_str': "= python('self.mem = self.eval(' + repr($parsed_code[$i]['args_str']) + ')')", 'args': ['=', "python('self.mem", '=', "self.eval('", '+', "repr($parsed_code[$i]['args_str'])", '+', "')')"], 'file_path': '@compiler', 'line_number': 58, 'strings': [[False, '$import_cmd_arg = python('], [True, "'self.mem = self.eval('"], [False, ' + repr($parsed_code[$i]['], [True, "'args_str'"], [False, ']) + '], [True, "')'"], [False, ')']], 'eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '='], ['o', 'python'], ['l', '('], ['s', "'self.mem = self.eval('"], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'args_str'"], ['l', ']'], ['l', ')'], ['l', '+'], ['s', "')'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'python'], ['l', '('], ['s', "'self.mem = self.eval('"], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'args_str'"], ['l', ']'], ['l', ')'], ['l', '+'], ['s', "')'"], ['l', ')']]}, {'str': '$__dir__ = $__old_dir__', 'command': '$__dir__', 'args_str': '= $__old_dir__', 'args': ['=', '$__old_dir__'], 'file_path': '@compiler', 'line_number': 59, 'strings': [[False, '$__dir__ = $__old_dir__']], 'eval': [['v', '__dir__', 'self.get_var("__dir__")'], ['l', '='], ['v', '__old_dir__', 'self.get_var("__old_dir__")']], 'args_eval': [['l', '='], ['v', '__old_dir__', 'self.get_var("__old_dir__")']]}, {'str': '$__file__ = $__old_file__', 'command': '$__file__', 'args_str': '= $__old_file__', 'args': ['=', '$__old_file__'], 'file_path': '@compiler', 'line_number': 60, 'strings': [[False, '$__file__ = $__old_file__']], 'eval': [['v', '__file__', 'self.get_var("__file__")'], ['l', '='], ['v', '__old_file__', 'self.get_var("__old_file__")']], 'args_eval': [['l', '='], ['v', '__old_file__', 'self.get_var("__old_file__")']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 61, 'strings': [[False, 'endtry']], 'eval': [['o', 'endtry']], 'args_eval': []}, {'str': 'goto after_error', 'command': 'goto', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 61, 'strings': [[False, 'goto after_error']], 'eval': [['o', 'goto'], ['o', 'after_error']], 'args_eval': [['o', 'after_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label error', 'command': 'label', 'args_str': 'error', 'args': ['error'], 'file_path': '@compiler', 'line_number': 61, 'strings': [[False, 'label error']], 'eval': [['o', 'label'], ['o', 'error']], 'args_eval': [['o', 'error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label after_error', 'command': 'label', 'args_str': 'after_error', 'args': ['after_error'], 'file_path': '@compiler', 'line_number': 62, 'strings': [[False, 'label after_error']], 'eval': [['o', 'label'], ['o', 'after_error']], 'args_eval': [['o', 'after_error']]}, {'str': 'if $import_cmd_arg != False', 'command': 'if', 'args_str': '$import_cmd_arg != False', 'args': ['$import_cmd_arg', '!=', 'False'], 'file_path': '@compiler', 'line_number': 63, 'strings': [[False, 'if $import_cmd_arg != False']], 'eval': [['o', 'if'], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '!'], ['l', '='], ['o', 'False']], 'args_eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '!'], ['l', '='], ['o', 'False']]}, {'str': 'mem not ($import_cmd_arg != False)', 'command': 'mem', 'args_str': 'not ($import_cmd_arg != False)', 'args': ['not', '($import_cmd_arg', '!=', 'False)'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not ($import_cmd_arg != False)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '!'], ['l', '='], ['o', 'False'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '!'], ['l', '='], ['o', 'False'], ['l', ')']]}, {'str': 'gotoif tmplabelif2_2', 'command': 'gotoif', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif2_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif2_2']], 'args_eval': [['o', 'tmplabelif2_2']]}, {'str': 'if typeof($import_cmd_arg) != tuple', 'command': 'if', 'args_str': 'typeof($import_cmd_arg) != tuple', 'args': ['typeof($import_cmd_arg)', '!=', 'tuple'], 'file_path': '@compiler', 'line_number': 64, 'strings': [[False, 'if typeof($import_cmd_arg) != tuple']], 'eval': [['o', 'if'], ['o', 'typeof'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'tuple']], 'args_eval': [['o', 'typeof'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'tuple']]}, {'str': 'mem not (typeof($import_cmd_arg) != tuple)', 'command': 'mem', 'args_str': 'not (typeof($import_cmd_arg) != tuple)', 'args': ['not', '(typeof($import_cmd_arg)', '!=', 'tuple)'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'mem not (typeof($import_cmd_arg) != tuple)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'typeof'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'tuple'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'typeof'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'tuple'], ['l', ')']]}, {'str': 'gotoif tmplabelif3_2', 'command': 'gotoif', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'gotoif tmplabelif3_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif3_2']], 'args_eval': [['o', 'tmplabelif3_2']]}, {'str': '$import_cmd_arg = $import_cmd_arg,', 'command': '$import_cmd_arg', 'args_str': '= $import_cmd_arg,', 'args': ['=', '$import_cmd_arg,'], 'file_path': '@compiler', 'line_number': 65, 'strings': [[False, '$import_cmd_arg = $import_cmd_arg,']], 'eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '='], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ',']], 'args_eval': [['l', '='], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ',']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 66, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif3_2', 'command': 'label', 'args_str': 'tmplabelif3_2', 'args': ['tmplabelif3_2'], 'file_path': '<system>', 'line_number': 57, 'strings': [[False, 'label tmplabelif3_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif3_2']], 'args_eval': [['o', 'tmplabelif3_2']]}, {'str': 'label tmplabelif3_end', 'command': 'label', 'args_str': 'tmplabelif3_end', 'args': ['tmplabelif3_end'], 'file_path': '<system>', 'line_number': 57, 'strings': [[False, 'label tmplabelif3_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif3_end']], 'args_eval': [['o', 'tmplabelif3_end']]}, {'str': '$import_cmd_arg = list($import_cmd_arg)', 'command': '$import_cmd_arg', 'args_str': '= list($import_cmd_arg)', 'args': ['=', 'list($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 67, 'strings': [[False, '$import_cmd_arg = list($import_cmd_arg)']], 'eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '='], ['o', 'list'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'list'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')']]}, {'str': '$x = 0', 'command': '$x', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@compiler', 'line_number': 68, 'strings': [[False, '$x = 0']], 'eval': [['v', 'x', 'self.get_var("x")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $x < len($import_cmd_arg)', 'command': 'while', 'args_str': '$x < len($import_cmd_arg)', 'args': ['$x', '<', 'len($import_cmd_arg)'], 'file_path': '@compiler', 'line_number': 69, 'strings': [[False, 'while $x < len($import_cmd_arg)']], 'eval': [['o', 'while'], ['v', 'x', 'self.get_var("x")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')']], 'args_eval': [['v', 'x', 'self.get_var("x")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', ')']]}, {'str': 'if $import_cmd_arg[$x]', 'command': 'if', 'args_str': '$import_cmd_arg[$x]', 'args': ['$import_cmd_arg[$x]'], 'file_path': '@compiler', 'line_number': 70, 'strings': [[False, 'if $import_cmd_arg[$x]']], 'eval': [['o', 'if'], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']']], 'args_eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']']]}, {'str': 'mem not ($import_cmd_arg[$x])', 'command': 'mem', 'args_str': 'not ($import_cmd_arg[$x])', 'args': ['not', '($import_cmd_arg[$x])'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not ($import_cmd_arg[$x])']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']]}, {'str': 'gotoif tmplabelif4_2', 'command': 'gotoif', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif4_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif4_2']], 'args_eval': [['o', 'tmplabelif4_2']]}, {'str': "if $import_cmd_arg[$x][0] == '@'", 'command': 'if', 'args_str': "$import_cmd_arg[$x][0] == '@'", 'args': ['$import_cmd_arg[$x][0]', '==', "'@'"], 'file_path': '@compiler', 'line_number': 71, 'strings': [[False, 'if $import_cmd_arg[$x][0] == '], [True, "'@'"], [False, '']], 'eval': [['o', 'if'], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'@'"]], 'args_eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'@'"]]}, {'str': "mem not ($import_cmd_arg[$x][0] == '@')", 'command': 'mem', 'args_str': "not ($import_cmd_arg[$x][0] == '@')", 'args': ['not', '($import_cmd_arg[$x][0]', '==', "'@')"], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'mem not ($import_cmd_arg[$x][0] == '], [True, "'@'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'@'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'@'"], ['l', ')']]}, {'str': 'gotoif tmplabelif5_2', 'command': 'gotoif', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'gotoif tmplabelif5_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif5_2']], 'args_eval': [['o', 'tmplabelif5_2']]}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 72, 'strings': [[False, '$this->total_content = $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "'\\n'"]], 'args_eval': [['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "'\\n'"]]}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 73, 'strings': [[False, '$x = $x + 1']], 'eval': [['v', 'x', 'self.get_var("x")'], ['l', '='], ['v', 'x', 'self.get_var("x")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'x', 'self.get_var("x")'], ['l', '+'], ['o', '1']]}, {'str': 'continue ', 'command': 'continue', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 74, 'strings': [[False, 'continue']], 'eval': [['o', 'continue']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 75, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif5_2', 'command': 'label', 'args_str': 'tmplabelif5_2', 'args': ['tmplabelif5_2'], 'file_path': '<system>', 'line_number': 72, 'strings': [[False, 'label tmplabelif5_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif5_2']], 'args_eval': [['o', 'tmplabelif5_2']]}, {'str': 'label tmplabelif5_end', 'command': 'label', 'args_str': 'tmplabelif5_end', 'args': ['tmplabelif5_end'], 'file_path': '<system>', 'line_number': 72, 'strings': [[False, 'label tmplabelif5_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif5_end']], 'args_eval': [['o', 'tmplabelif5_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 76, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif4_2', 'command': 'label', 'args_str': 'tmplabelif4_2', 'args': ['tmplabelif4_2'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif4_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif4_2']], 'args_eval': [['o', 'tmplabelif4_2']]}, {'str': 'label tmplabelif4_end', 'command': 'label', 'args_str': 'tmplabelif4_end', 'args': ['tmplabelif4_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif4_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif4_end']], 'args_eval': [['o', 'tmplabelif4_end']]}, {'str': '$import_cmd_arg[$x] = os.path.abspath($import_cmd_arg[$x])', 'command': '$import_cmd_arg[$x]', 'args_str': '= os.path.abspath($import_cmd_arg[$x])', 'args': ['=', 'os.path.abspath($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 77, 'strings': [[False, '$import_cmd_arg[$x] = os.path.abspath($import_cmd_arg[$x])']], 'eval': [['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']]}, {'str': "if ($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'command': 'if', 'args_str': "($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once'", 'args': ['($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once'"], 'file_path': '@compiler', 'line_number': 78, 'strings': [[False, 'if ($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, '']], 'eval': [['o', 'if'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', ')'], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '!'], ['l', '='], ['s', "'import_once'"]], 'args_eval': [['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', ')'], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '!'], ['l', '='], ['s', "'import_once'"]]}, {'str': "mem not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'command': 'mem', 'args_str': "not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['command'] != 'import_once')", 'args': ['not', '(($import_cmd_arg[$x]', 'not', 'in', '$this->imported_files)', 'or', "$parsed_code[$i]['command']", '!=', "'import_once')"], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'mem not (($import_cmd_arg[$x] not in $this->imported_files) or $parsed_code[$i]['], [True, "'command'"], [False, '] != '], [True, "'import_once'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', ')'], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '!'], ['l', '='], ['s', "'import_once'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', ')'], ['o', 'or'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'command'"], ['l', ']'], ['l', '!'], ['l', '='], ['s', "'import_once'"], ['l', ')']]}, {'str': 'gotoif tmplabelif6_2', 'command': 'gotoif', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'gotoif tmplabelif6_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif6_2']], 'args_eval': [['o', 'tmplabelif6_2']]}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = False\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = False\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "False\\n'"], 'file_path': '@compiler', 'line_number': 79, 'strings': [[False, '$this->total_content = $this->total_content + '], [True, "'$__ismain__ = False\\n'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['s', "'$__ismain__ = False\\n'"]], 'args_eval': [['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['s', "'$__ismain__ = False\\n'"]]}, {'str': '$tmp_last_is_main = $this->last_is_main', 'command': '$tmp_last_is_main', 'args_str': '= $this->last_is_main', 'args': ['=', '$this->last_is_main'], 'file_path': '@compiler', 'line_number': 80, 'strings': [[False, '$tmp_last_is_main = $this->last_is_main']], 'eval': [['v', 'tmp_last_is_main', 'self.get_var("tmp_last_is_main")'], ['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'last_is_main']], 'args_eval': [['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'last_is_main']]}, {'str': "$this->last_is_main = 'False'", 'command': '$this->last_is_main', 'args_str': "= 'False'", 'args': ['=', "'False'"], 'file_path': '@compiler', 'line_number': 81, 'strings': [[False, '$this->last_is_main = '], [True, "'False'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'last_is_main'], ['l', '='], ['s', "'False'"]], 'args_eval': [['l', '='], ['s', "'False'"]]}, {'str': '$this->crawl ($import_cmd_arg[$x])', 'command': '$this->crawl', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 82, 'strings': [[False, '$this->crawl ($import_cmd_arg[$x])']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'crawl'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']]}, {'str': '$this->imported_files->append ($import_cmd_arg[$x])', 'command': '$this->imported_files->append', 'args_str': '($import_cmd_arg[$x])', 'args': ['($import_cmd_arg[$x])'], 'file_path': '@compiler', 'line_number': 83, 'strings': [[False, '$this->imported_files->append ($import_cmd_arg[$x])']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'imported_files'], ['l', '.'], ['n', 'append'], ['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'import_cmd_arg', 'self.get_var("import_cmd_arg")'], ['l', '['], ['v', 'x', 'self.get_var("x")'], ['l', ']'], ['l', ')']]}, {'str': "$this->total_content = $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + '$__ismain__ = ' + $tmp_last_is_main + '\\n'", 'args': ['=', '$this->total_content', '+', "'$__ismain__", '=', "'", '+', '$tmp_last_is_main', '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 84, 'strings': [[False, '$this->total_content = $this->total_content + '], [True, "'$__ismain__ = '"], [False, ' + $tmp_last_is_main + '], [True, "'\\n'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['s', "'$__ismain__ = '"], ['l', '+'], ['v', 'tmp_last_is_main', 'self.get_var("tmp_last_is_main")'], ['l', '+'], ['s', "'\\n'"]], 'args_eval': [['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['s', "'$__ismain__ = '"], ['l', '+'], ['v', 'tmp_last_is_main', 'self.get_var("tmp_last_is_main")'], ['l', '+'], ['s', "'\\n'"]]}, {'str': '$this->last_is_main = $tmp_last_is_main', 'command': '$this->last_is_main', 'args_str': '= $tmp_last_is_main', 'args': ['=', '$tmp_last_is_main'], 'file_path': '@compiler', 'line_number': 85, 'strings': [[False, '$this->last_is_main = $tmp_last_is_main']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'last_is_main'], ['l', '='], ['v', 'tmp_last_is_main', 'self.get_var("tmp_last_is_main")']], 'args_eval': [['l', '='], ['v', 'tmp_last_is_main', 'self.get_var("tmp_last_is_main")']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 86, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif6_2', 'command': 'label', 'args_str': 'tmplabelif6_2', 'args': ['tmplabelif6_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif6_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif6_2']], 'args_eval': [['o', 'tmplabelif6_2']]}, {'str': 'label tmplabelif6_end', 'command': 'label', 'args_str': 'tmplabelif6_end', 'args': ['tmplabelif6_end'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif6_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif6_end']], 'args_eval': [['o', 'tmplabelif6_end']]}, {'str': '$x = $x + 1', 'command': '$x', 'args_str': '= $x + 1', 'args': ['=', '$x', '+', '1'], 'file_path': '@compiler', 'line_number': 87, 'strings': [[False, '$x = $x + 1']], 'eval': [['v', 'x', 'self.get_var("x")'], ['l', '='], ['v', 'x', 'self.get_var("x")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'x', 'self.get_var("x")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 88, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 89, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif2_2', 'command': 'label', 'args_str': 'tmplabelif2_2', 'args': ['tmplabelif2_2'], 'file_path': '<system>', 'line_number': 94, 'strings': [[False, 'label tmplabelif2_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif2_2']], 'args_eval': [['o', 'tmplabelif2_2']]}, {'str': 'label tmplabelif2_end', 'command': 'label', 'args_str': 'tmplabelif2_end', 'args': ['tmplabelif2_end'], 'file_path': '<system>', 'line_number': 94, 'strings': [[False, 'label tmplabelif2_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif2_end']], 'args_eval': [['o', 'tmplabelif2_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 90, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif1_end', 'command': 'goto', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'goto tmplabelif1_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif1_end']], 'args_eval': [['o', 'tmplabelif1_end']]}, {'str': 'label tmplabelif1_2', 'command': 'label', 'args_str': 'tmplabelif1_2', 'args': ['tmplabelif1_2'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'label tmplabelif1_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif1_2']], 'args_eval': [['o', 'tmplabelif1_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif1_3', 'command': 'gotoif', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 97, 'strings': [[False, 'gotoif tmplabelif1_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif1_3']], 'args_eval': [['o', 'tmplabelif1_3']]}, {'str': "$this->total_content = $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'command': '$this->total_content', 'args_str': "= $this->total_content + $parsed_code[$i]['str'] + '\\n'", 'args': ['=', '$this->total_content', '+', "$parsed_code[$i]['str']", '+', "'\\n'"], 'file_path': '@compiler', 'line_number': 91, 'strings': [[False, '$this->total_content = $this->total_content + $parsed_code[$i]['], [True, "'str'"], [False, '] + '], [True, "'\\n'"], [False, '']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "'\\n'"]], 'args_eval': [['l', '='], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'total_content'], ['l', '+'], ['v', 'parsed_code', 'self.get_var("parsed_code")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['s', "'str'"], ['l', ']'], ['l', '+'], ['s', "'\\n'"]]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 92, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif1_3', 'command': 'label', 'args_str': 'tmplabelif1_3', 'args': ['tmplabelif1_3'], 'file_path': '<system>', 'line_number': 103, 'strings': [[False, 'label tmplabelif1_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif1_3']], 'args_eval': [['o', 'tmplabelif1_3']]}, {'str': 'label tmplabelif1_end', 'command': 'label', 'args_str': 'tmplabelif1_end', 'args': ['tmplabelif1_end'], 'file_path': '<system>', 'line_number': 103, 'strings': [[False, 'label tmplabelif1_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif1_end']], 'args_eval': [['o', 'tmplabelif1_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@compiler', 'line_number': 93, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 94, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 95, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 96, 'strings': [[False, 'endclass']], 'eval': [['o', 'endclass']], 'args_eval': []}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@compiler', 'line_number': 97, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 110, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif7_2', 'command': 'gotoif', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 110, 'strings': [[False, 'gotoif tmplabelif7_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif7_2']], 'args_eval': [['o', 'tmplabelif7_2']]}, {'str': 'if len($argv) <= 1', 'command': 'if', 'args_str': 'len($argv) <= 1', 'args': ['len($argv)', '<=', '1'], 'file_path': '@compiler', 'line_number': 98, 'strings': [[False, 'if len($argv) <= 1']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '1']]}, {'str': 'mem not (len($argv) <= 1)', 'command': 'mem', 'args_str': 'not (len($argv) <= 1)', 'args': ['not', '(len($argv)', '<=', '1)'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'mem not (len($argv) <= 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif8_2', 'command': 'gotoif', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'gotoif tmplabelif8_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif8_2']], 'args_eval': [['o', 'tmplabelif8_2']]}, {'str': "println ('ERROR: script filename is required')", 'command': 'println', 'args_str': "('ERROR: script filename is required')", 'args': ["('ERROR:", 'script', 'filename', 'is', "required')"], 'file_path': '@compiler', 'line_number': 99, 'strings': [[False, 'println ('], [True, "'ERROR: script filename is required'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'ERROR: script filename is required'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'ERROR: script filename is required'"], ['l', ')']]}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@compiler', 'line_number': 100, 'strings': [[False, 'exit (1)']], 'eval': [['o', 'exit'], ['l', '('], ['o', '1'], ['l', ')']], 'args_eval': [['l', '('], ['o', '1'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 101, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif8_2', 'command': 'label', 'args_str': 'tmplabelif8_2', 'args': ['tmplabelif8_2'], 'file_path': '<system>', 'line_number': 118, 'strings': [[False, 'label tmplabelif8_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif8_2']], 'args_eval': [['o', 'tmplabelif8_2']]}, {'str': 'label tmplabelif8_end', 'command': 'label', 'args_str': 'tmplabelif8_end', 'args': ['tmplabelif8_end'], 'file_path': '<system>', 'line_number': 118, 'strings': [[False, 'label tmplabelif8_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif8_end']], 'args_eval': [['o', 'tmplabelif8_end']]}, {'str': '$mix = Mixer($argv[1])', 'command': '$mix', 'args_str': '= Mixer($argv[1])', 'args': ['=', 'Mixer($argv[1])'], 'file_path': '@compiler', 'line_number': 102, 'strings': [[False, '$mix = Mixer($argv[1])']], 'eval': [['v', 'mix', 'self.get_var("mix")'], ['l', '='], ['o', 'Mixer'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'Mixer'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': 'if len($argv) <= 2', 'command': 'if', 'args_str': 'len($argv) <= 2', 'args': ['len($argv)', '<=', '2'], 'file_path': '@compiler', 'line_number': 103, 'strings': [[False, 'if len($argv) <= 2']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '2']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '2']]}, {'str': 'mem not (len($argv) <= 2)', 'command': 'mem', 'args_str': 'not (len($argv) <= 2)', 'args': ['not', '(len($argv)', '<=', '2)'], 'file_path': '<system>', 'line_number': 122, 'strings': [[False, 'mem not (len($argv) <= 2)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '2'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '<'], ['l', '='], ['o', '2'], ['l', ')']]}, {'str': 'gotoif tmplabelif9_2', 'command': 'gotoif', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 122, 'strings': [[False, 'gotoif tmplabelif9_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif9_2']], 'args_eval': [['o', 'tmplabelif9_2']]}, {'str': 'println ($mix->total_content)', 'command': 'println', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 104, 'strings': [[False, 'println ($mix->total_content)']], 'eval': [['o', 'println'], ['l', '('], ['v', 'mix', 'self.get_var("mix")'], ['l', '.'], ['n', 'total_content'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'mix', 'self.get_var("mix")'], ['l', '.'], ['n', 'total_content'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 105, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif9_end', 'command': 'goto', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'goto tmplabelif9_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif9_end']], 'args_eval': [['o', 'tmplabelif9_end']]}, {'str': 'label tmplabelif9_2', 'command': 'label', 'args_str': 'tmplabelif9_2', 'args': ['tmplabelif9_2'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'label tmplabelif9_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif9_2']], 'args_eval': [['o', 'tmplabelif9_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif9_3', 'command': 'gotoif', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 126, 'strings': [[False, 'gotoif tmplabelif9_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif9_3']], 'args_eval': [['o', 'tmplabelif9_3']]}, {'str': '$out_file_path = $argv[2]', 'command': '$out_file_path', 'args_str': '= $argv[2]', 'args': ['=', '$argv[2]'], 'file_path': '@compiler', 'line_number': 106, 'strings': [[False, '$out_file_path = $argv[2]']], 'eval': [['v', 'out_file_path', 'self.get_var("out_file_path")'], ['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '2'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '2'], ['l', ']']]}, {'str': "$f = open($out_file_path, 'w')", 'command': '$f', 'args_str': "= open($out_file_path, 'w')", 'args': ['=', 'open($out_file_path,', "'w')"], 'file_path': '@compiler', 'line_number': 107, 'strings': [[False, '$f = open($out_file_path, '], [True, "'w'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'out_file_path', 'self.get_var("out_file_path")'], ['l', ','], ['s', "'w'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'out_file_path', 'self.get_var("out_file_path")'], ['l', ','], ['s', "'w'"], ['l', ')']]}, {'str': '$f->write ($mix->total_content)', 'command': '$f->write', 'args_str': '($mix->total_content)', 'args': ['($mix->total_content)'], 'file_path': '@compiler', 'line_number': 108, 'strings': [[False, '$f->write ($mix->total_content)']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'write'], ['l', '('], ['v', 'mix', 'self.get_var("mix")'], ['l', '.'], ['n', 'total_content'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'mix', 'self.get_var("mix")'], ['l', '.'], ['n', 'total_content'], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@compiler', 'line_number': 109, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 110, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif9_3', 'command': 'label', 'args_str': 'tmplabelif9_3', 'args': ['tmplabelif9_3'], 'file_path': '<system>', 'line_number': 135, 'strings': [[False, 'label tmplabelif9_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif9_3']], 'args_eval': [['o', 'tmplabelif9_3']]}, {'str': 'label tmplabelif9_end', 'command': 'label', 'args_str': 'tmplabelif9_end', 'args': ['tmplabelif9_end'], 'file_path': '<system>', 'line_number': 135, 'strings': [[False, 'label tmplabelif9_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif9_end']], 'args_eval': [['o', 'tmplabelif9_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@compiler', 'line_number': 111, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif7_2', 'command': 'label', 'args_str': 'tmplabelif7_2', 'args': ['tmplabelif7_2'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'label tmplabelif7_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif7_2']], 'args_eval': [['o', 'tmplabelif7_2']]}, {'str': 'label tmplabelif7_end', 'command': 'label', 'args_str': 'tmplabelif7_end', 'args': ['tmplabelif7_end'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'label tmplabelif7_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif7_end']], 'args_eval': [['o', 'tmplabelif7_end']]}]
modules["hash"] = [{'str': 'namespace hash', 'command': 'namespace', 'args_str': 'hash', 'args': ['hash'], 'file_path': '@hash', 'line_number': 22, 'strings': [[False, 'namespace hash']], 'eval': [['o', 'namespace'], ['o', 'hash']], 'args_eval': [['o', 'hash']]}, {'str': '@doc """    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2b', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 23, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates blake2b hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::blake2b(string $value)', 'command': 'func', 'args_str': 'string::blake2b(string $value)', 'args': ['string::blake2b(string', '$value)'], 'file_path': '@hash', 'line_number': 24, 'strings': [[False, 'func string::blake2b(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'blake2b'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'blake2b'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "py_load_module ('hashlib')->blake2b($value->encode())->hexdigest()", 'command': 'py_load_module', 'args_str': "('hashlib')->blake2b($value->encode())->hexdigest()", 'args': ["('hashlib')->blake2b($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 25, 'strings': [[False, 'py_load_module ('], [True, "'hashlib'"], [False, ')->blake2b($value->encode())->hexdigest()']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'blake2b'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'blake2b'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 26, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'blake2s', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 27, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates blake2s hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::blake2s(string $value)', 'command': 'func', 'args_str': 'string::blake2s(string $value)', 'args': ['string::blake2s(string', '$value)'], 'file_path': '@hash', 'line_number': 28, 'strings': [[False, 'func string::blake2s(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'blake2s'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'blake2s'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->blake2s($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->blake2s($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 29, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->blake2s($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'blake2s'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'blake2s'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 30, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'md5', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 31, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates md5 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::md5(string $value)', 'command': 'func', 'args_str': 'string::md5(string $value)', 'args': ['string::md5(string', '$value)'], 'file_path': '@hash', 'line_number': 32, 'strings': [[False, 'func string::md5(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'md5'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'md5'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->md5($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->md5($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 33, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->md5($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'md5'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'md5'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha1', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 35, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha1 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha1(string $value)', 'command': 'func', 'args_str': 'string::sha1(string $value)', 'args': ['string::sha1(string', '$value)'], 'file_path': '@hash', 'line_number': 36, 'strings': [[False, 'func string::sha1(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha1'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha1'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha1($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha1($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 37, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha1($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha1'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha1'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 38, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 39, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha224 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha224(string $value)', 'command': 'func', 'args_str': 'string::sha224(string $value)', 'args': ['string::sha224(string', '$value)'], 'file_path': '@hash', 'line_number': 40, 'strings': [[False, 'func string::sha224(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha224'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha224'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 41, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha224($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha224'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha224'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 42, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 43, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha256 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha256(string $value)', 'command': 'func', 'args_str': 'string::sha256(string $value)', 'args': ['string::sha256(string', '$value)'], 'file_path': '@hash', 'line_number': 44, 'strings': [[False, 'func string::sha256(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 45, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha256($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha256'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha256'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 46, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 47, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha384 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha384(string $value)', 'command': 'func', 'args_str': 'string::sha384(string $value)', 'args': ['string::sha384(string', '$value)'], 'file_path': '@hash', 'line_number': 48, 'strings': [[False, 'func string::sha384(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha384'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha384'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 49, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha384($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha384'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha384'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 50, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_224', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 51, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha3_224 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha3_224(string $value)', 'command': 'func', 'args_str': 'string::sha3_224(string $value)', 'args': ['string::sha3_224(string', '$value)'], 'file_path': '@hash', 'line_number': 52, 'strings': [[False, 'func string::sha3_224(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_224'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_224'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_224($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 53, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_224($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_224'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_224'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 54, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 55, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha3_256 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha3_256(string $value)', 'command': 'func', 'args_str': 'string::sha3_256(string $value)', 'args': ['string::sha3_256(string', '$value)'], 'file_path': '@hash', 'line_number': 56, 'strings': [[False, 'func string::sha3_256(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_256($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 57, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_256($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_256'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_256'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 58, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_384', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 59, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha3_384 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha3_384(string $value)', 'command': 'func', 'args_str': 'string::sha3_384(string $value)', 'args': ['string::sha3_384(string', '$value)'], 'file_path': '@hash', 'line_number': 60, 'strings': [[False, 'func string::sha3_384(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_384'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_384'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_384($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 61, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_384($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_384'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_384'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 62, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha3_512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 63, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha3_512 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha3_512(string $value)', 'command': 'func', 'args_str': 'string::sha3_512(string $value)', 'args': ['string::sha3_512(string', '$value)'], 'file_path': '@hash', 'line_number': 64, 'strings': [[False, 'func string::sha3_512(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_512'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha3_512'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha3_512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 65, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha3_512($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_512'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha3_512'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 66, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'command': '@doc', 'args_str': '"""    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    """', 'args': ['"""', 'Calculates', 'sha512', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '"""'], 'file_path': '@hash', 'line_number': 67, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates sha512 hash    \\n    Args:        0. value: value that you want to hash    "'], ['s', '""']]}, {'str': 'func string::sha512(string $value)', 'command': 'func', 'args_str': 'string::sha512(string $value)', 'args': ['string::sha512(string', '$value)'], 'file_path': '@hash', 'line_number': 68, 'strings': [[False, 'func string::sha512(string $value)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha512'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'sha512'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'command': 'return', 'args_str': "py_load_module('hashlib')->sha512($value->encode())->hexdigest()", 'args': ["py_load_module('hashlib')->sha512($value->encode())->hexdigest()"], 'file_path': '@hash', 'line_number': 69, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->sha512($value->encode())->hexdigest()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha512'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'sha512'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'hexdigest'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 70, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_128', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 71, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates shake_128 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], ['s', '""']]}, {'str': 'func string::shake_128(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_128(string $value, int $length)', 'args': ['string::shake_128(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 72, 'strings': [[False, 'func string::shake_128(string $value, int $length)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'shake_128'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'int'], ['v', 'length', 'self.get_var("length")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'shake_128'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'int'], ['v', 'length', 'self.get_var("length")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_128(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 73, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->shake_128(str($value).encode()).hexdigest($length)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'shake_128'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['o', '.encode'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.hexdigest'], ['l', '('], ['v', 'length', 'self.get_var("length")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'shake_128'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['o', '.encode'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.hexdigest'], ['l', '('], ['v', 'length', 'self.get_var("length")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 74, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'command': '@doc', 'args_str': '"""    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    """', 'args': ['"""', 'Calculates', 'shake_256', 'hash', '\\n', 'Args:', '0.', 'value:', 'value', 'that', 'you', 'want', 'to', 'hash', '1.', 'length', '"""'], 'file_path': '@hash', 'line_number': 75, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Calculates shake_256 hash    \\n    Args:        0. value: value that you want to hash        1. length    "'], ['s', '""']]}, {'str': 'func string::shake_256(string $value, int $length)', 'command': 'func', 'args_str': 'string::shake_256(string $value, int $length)', 'args': ['string::shake_256(string', '$value,', 'int', '$length)'], 'file_path': '@hash', 'line_number': 76, 'strings': [[False, 'func string::shake_256(string $value, int $length)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'shake_256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'int'], ['v', 'length', 'self.get_var("length")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'shake_256'], ['l', '('], ['o', 'string'], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'int'], ['v', 'length', 'self.get_var("length")'], ['l', ')']]}, {'str': "return py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'command': 'return', 'args_str': "py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)", 'args': ["py_load_module('hashlib')->shake_256(str($value).encode()).hexdigest($length)"], 'file_path': '@hash', 'line_number': 77, 'strings': [[False, 'return py_load_module('], [True, "'hashlib'"], [False, ')->shake_256(str($value).encode()).hexdigest($length)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'shake_256'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['o', '.encode'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.hexdigest'], ['l', '('], ['v', 'length', 'self.get_var("length")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'hashlib'"], ['l', ')'], ['l', '.'], ['n', 'shake_256'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['o', '.encode'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.hexdigest'], ['l', '('], ['v', 'length', 'self.get_var("length")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 78, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@hash', 'line_number': 79, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["helloworld"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@helloworld', 'line_number': 22, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif10_2', 'command': 'gotoif', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'gotoif tmplabelif10_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif10_2']], 'args_eval': [['o', 'tmplabelif10_2']]}, {'str': "println ('Hello world!')", 'command': 'println', 'args_str': "('Hello world!')", 'args': ["('Hello", "world!')"], 'file_path': '@helloworld', 'line_number': 23, 'strings': [[False, 'println ('], [True, "'Hello world!'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'Hello world!'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Hello world!'"], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@helloworld', 'line_number': 24, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif10_2', 'command': 'label', 'args_str': 'tmplabelif10_2', 'args': ['tmplabelif10_2'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'label tmplabelif10_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif10_2']], 'args_eval': [['o', 'tmplabelif10_2']]}, {'str': 'label tmplabelif10_end', 'command': 'label', 'args_str': 'tmplabelif10_end', 'args': ['tmplabelif10_end'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'label tmplabelif10_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif10_end']], 'args_eval': [['o', 'tmplabelif10_end']]}]
modules["math"] = [{'str': 'ns math', 'command': 'ns', 'args_str': 'math', 'args': ['math'], 'file_path': '@math', 'line_number': 23, 'strings': [[False, 'ns math']], 'eval': [['o', 'ns'], ['o', 'math']], 'args_eval': [['o', 'math']]}, {'str': '@doc """    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'command': '@doc', 'args_str': '"""    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    """', 'args': ['"""', 'Returns', 'the', 'arc', 'cosine', 'of', 'a', 'number.', 'Recives', 'a', 'number', 'between', '`1`', 'and', '`-1`.', '"""'], 'file_path': '@math', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns the arc cosine of a number. Recives a number between `1` and `-1`.    "'], ['s', '""']]}, {'str': 'func acos($num)', 'command': 'func', 'args_str': 'acos($num)', 'args': ['acos($num)'], 'file_path': '@math', 'line_number': 25, 'strings': [[False, 'func acos($num)']], 'eval': [['o', 'func'], ['o', 'acos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'acos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->acos($num)", 'command': 'return', 'args_str': "py_load_module('math')->acos($num)", 'args': ["py_load_module('math')->acos($num)"], 'file_path': '@math', 'line_number': 26, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->acos($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'acos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'acos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 27, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Returns the inverse hyperbolic cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Returns the inverse hyperbolic cosine of a number.    """', 'args': ['"""', 'Returns', 'the', 'inverse', 'hyperbolic', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 28, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the inverse hyperbolic cosine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns the inverse hyperbolic cosine of a number.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns the inverse hyperbolic cosine of a number.    "'], ['s', '""']]}, {'str': 'func acosh($num)', 'command': 'func', 'args_str': 'acosh($num)', 'args': ['acosh($num)'], 'file_path': '@math', 'line_number': 29, 'strings': [[False, 'func acosh($num)']], 'eval': [['o', 'func'], ['o', 'acosh'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'acosh'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->acosh($num)", 'command': 'return', 'args_str': "py_load_module('math')->acosh($num)", 'args': ["py_load_module('math')->acosh($num)"], 'file_path': '@math', 'line_number': 30, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->acosh($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'acosh'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'acosh'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 31, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Rounds a number upward to its nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds a number upward to its nearest integer.    """', 'args': ['"""', 'Rounds', 'a', 'number', 'upward', 'to', 'its', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 32, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Rounds a number upward to its nearest integer.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Rounds a number upward to its nearest integer.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Rounds a number upward to its nearest integer.    "'], ['s', '""']]}, {'str': 'func ceil($num)', 'command': 'func', 'args_str': 'ceil($num)', 'args': ['ceil($num)'], 'file_path': '@math', 'line_number': 33, 'strings': [[False, 'func ceil($num)']], 'eval': [['o', 'func'], ['o', 'ceil'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'ceil'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->ceil($num)", 'command': 'return', 'args_str': "py_load_module('math')->ceil($num)", 'args': ["py_load_module('math')->ceil($num)"], 'file_path': '@math', 'line_number': 34, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->ceil($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'ceil'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'ceil'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 35, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Finds the cosine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the cosine of a number.    """', 'args': ['"""', 'Finds', 'the', 'cosine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 36, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the cosine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Finds the cosine of a number.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Finds the cosine of a number.    "'], ['s', '""']]}, {'str': 'func cos($num)', 'command': 'func', 'args_str': 'cos($num)', 'args': ['cos($num)'], 'file_path': '@math', 'line_number': 37, 'strings': [[False, 'func cos($num)']], 'eval': [['o', 'func'], ['o', 'cos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'cos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->cos($num)", 'command': 'return', 'args_str': "py_load_module('math')->cos($num)", 'args': ["py_load_module('math')->cos($num)"], 'file_path': '@math', 'line_number': 38, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->cos($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'cos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'cos'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 39, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Converts angles from radians to degrees.    """', 'command': '@doc', 'args_str': '"""    Converts angles from radians to degrees.    """', 'args': ['"""', 'Converts', 'angles', 'from', 'radians', 'to', 'degrees.', '"""'], 'file_path': '@math', 'line_number': 40, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Converts angles from radians to degrees.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Converts angles from radians to degrees.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Converts angles from radians to degrees.    "'], ['s', '""']]}, {'str': 'func degrees($num)', 'command': 'func', 'args_str': 'degrees($num)', 'args': ['degrees($num)'], 'file_path': '@math', 'line_number': 41, 'strings': [[False, 'func degrees($num)']], 'eval': [['o', 'func'], ['o', 'degrees'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'degrees'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->degrees($num)", 'command': 'return', 'args_str': "py_load_module('math')->degrees($num)", 'args': ["py_load_module('math')->degrees($num)"], 'file_path': '@math', 'line_number': 42, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->degrees($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'degrees'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'degrees'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 43, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Finds the factorial of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the factorial of a number.    """', 'args': ['"""', 'Finds', 'the', 'factorial', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 44, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the factorial of a number.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Finds the factorial of a number.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Finds the factorial of a number.    "'], ['s', '""']]}, {'str': 'func factorial($num)', 'command': 'func', 'args_str': 'factorial($num)', 'args': ['factorial($num)'], 'file_path': '@math', 'line_number': 45, 'strings': [[False, 'func factorial($num)']], 'eval': [['o', 'func'], ['o', 'factorial'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'factorial'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->factorial($num)", 'command': 'return', 'args_str': "py_load_module('math')->factorial($num)", 'args': ["py_load_module('math')->factorial($num)"], 'file_path': '@math', 'line_number': 46, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->factorial($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'factorial'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'factorial'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 47, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Rounds numbers down to the nearest integer.    """', 'command': '@doc', 'args_str': '"""    Rounds numbers down to the nearest integer.    """', 'args': ['"""', 'Rounds', 'numbers', 'down', 'to', 'the', 'nearest', 'integer.', '"""'], 'file_path': '@math', 'line_number': 48, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Rounds numbers down to the nearest integer.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Rounds numbers down to the nearest integer.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Rounds numbers down to the nearest integer.    "'], ['s', '""']]}, {'str': 'func floor($num)', 'command': 'func', 'args_str': 'floor($num)', 'args': ['floor($num)'], 'file_path': '@math', 'line_number': 49, 'strings': [[False, 'func floor($num)']], 'eval': [['o', 'func'], ['o', 'floor'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'floor'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->floor($num)", 'command': 'return', 'args_str': "py_load_module('math')->floor($num)", 'args': ["py_load_module('math')->floor($num)"], 'file_path': '@math', 'line_number': 50, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->floor($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'floor'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'floor'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 51, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': "$pi = py_load_module('math')->pi", 'command': '$pi', 'args_str': "= py_load_module('math')->pi", 'args': ['=', "py_load_module('math')->pi"], 'file_path': '@math', 'line_number': 52, 'strings': [[False, '$pi = py_load_module('], [True, "'math'"], [False, ')->pi']], 'eval': [['v', 'pi', 'self.get_var("pi")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'pi']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'pi']]}, {'str': '@doc """    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'command': '@doc', 'args_str': '"""    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    """', 'args': ['"""', 'Finds', 'the', 'value', 'of', 'x', 'raised', 'to', 'the', 'power', 'of', 'y.\\n', 'Example:', 'math.pow(9,', '3)', '"""'], 'file_path': '@math', 'line_number': 53, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Finds the value of x raised to the power of y.\\n    Example: math.pow(9, 3)    "'], ['s', '""']]}, {'str': 'func pow($num, $nextnum)', 'command': 'func', 'args_str': 'pow($num, $nextnum)', 'args': ['pow($num,', '$nextnum)'], 'file_path': '@math', 'line_number': 54, 'strings': [[False, 'func pow($num, $nextnum)']], 'eval': [['o', 'func'], ['o', 'pow'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ','], ['v', 'nextnum', 'self.get_var("nextnum")'], ['l', ')']], 'args_eval': [['o', 'pow'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ','], ['v', 'nextnum', 'self.get_var("nextnum")'], ['l', ')']]}, {'str': "return py_load_module('math')->pow($num, self.get_var('nextnum'))", 'command': 'return', 'args_str': "py_load_module('math')->pow($num, self.get_var('nextnum'))", 'args': ["py_load_module('math')->pow($num,", "self.get_var('nextnum'))"], 'file_path': '@math', 'line_number': 55, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->pow($num, self.get_var('], [True, "'nextnum'"], [False, '))']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'pow'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ','], ['o', 'self.get_var'], ['l', '('], ['s', "'nextnum'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'pow'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ','], ['o', 'self.get_var'], ['l', '('], ['s', "'nextnum'"], ['l', ')'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 56, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Finds the sine of a number.    """', 'command': '@doc', 'args_str': '"""    Finds the sine of a number.    """', 'args': ['"""', 'Finds', 'the', 'sine', 'of', 'a', 'number.', '"""'], 'file_path': '@math', 'line_number': 57, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the sine of a number.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Finds the sine of a number.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Finds the sine of a number.    "'], ['s', '""']]}, {'str': 'func sin($num)', 'command': 'func', 'args_str': 'sin($num)', 'args': ['sin($num)'], 'file_path': '@math', 'line_number': 58, 'strings': [[False, 'func sin($num)']], 'eval': [['o', 'func'], ['o', 'sin'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'sin'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->sin($num)", 'command': 'return', 'args_str': "py_load_module('math')->sin($num)", 'args': ["py_load_module('math')->sin($num)"], 'file_path': '@math', 'line_number': 59, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->sin($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'sin'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'sin'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 60, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Finds the tangent of a number (angle).    """', 'command': '@doc', 'args_str': '"""    Finds the tangent of a number (angle).    """', 'args': ['"""', 'Finds', 'the', 'tangent', 'of', 'a', 'number', '(angle).', '"""'], 'file_path': '@math', 'line_number': 61, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Finds the tangent of a number (angle).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Finds the tangent of a number (angle).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Finds the tangent of a number (angle).    "'], ['s', '""']]}, {'str': 'func tan($num)', 'command': 'func', 'args_str': 'tan($num)', 'args': ['tan($num)'], 'file_path': '@math', 'line_number': 62, 'strings': [[False, 'func tan($num)']], 'eval': [['o', 'func'], ['o', 'tan'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'tan'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': "return py_load_module('math')->tan($num)", 'command': 'return', 'args_str': "py_load_module('math')->tan($num)", 'args': ["py_load_module('math')->tan($num)"], 'file_path': '@math', 'line_number': 63, 'strings': [[False, 'return py_load_module('], [True, "'math'"], [False, ')->tan($num)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'tan'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'math'"], ['l', ')'], ['l', '.'], ['n', 'tan'], ['l', '('], ['v', 'num', 'self.get_var("num")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 64, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@math', 'line_number': 65, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["os"] = [{'str': 'namespace os', 'command': 'namespace', 'args_str': 'os', 'args': ['os'], 'file_path': '@os', 'line_number': 23, 'strings': [[False, 'namespace os']], 'eval': [['o', 'namespace'], ['o', 'os']], 'args_eval': [['o', 'os']]}, {'str': "$env = py_load_module('os')->environ", 'command': '$env', 'args_str': "= py_load_module('os')->environ", 'args': ['=', "py_load_module('os')->environ"], 'file_path': '@os', 'line_number': 24, 'strings': [[False, '$env = py_load_module('], [True, "'os'"], [False, ')->environ']], 'eval': [['v', 'env', 'self.get_var("env")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'environ']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'environ']]}, {'str': '@doc """    Changes program working directory to new path.\\n    Gets path as string.    """', 'command': '@doc', 'args_str': '"""    Changes program working directory to new path.\\n    Gets path as string.    """', 'args': ['"""', 'Changes', 'program', 'working', 'directory', 'to', 'new', 'path.\\n', 'Gets', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 25, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Changes program working directory to new path.\\n    Gets path as string.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Changes program working directory to new path.\\n    Gets path as string.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Changes program working directory to new path.\\n    Gets path as string.    "'], ['s', '""']]}, {'str': 'func chdir(string $dirpath)', 'command': 'func', 'args_str': 'chdir(string $dirpath)', 'args': ['chdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 26, 'strings': [[False, 'func chdir(string $dirpath)']], 'eval': [['o', 'func'], ['o', 'chdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'chdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': "py_load_module ('os')->chdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->chdir($dirpath)", 'args': ["('os')->chdir($dirpath)"], 'file_path': '@os', 'line_number': 27, 'strings': [[False, 'py_load_module ('], [True, "'os'"], [False, ')->chdir($dirpath)']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'chdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'chdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Returns CPU count.    """', 'command': '@doc', 'args_str': '"""    Returns CPU count.    """', 'args': ['"""', 'Returns', 'CPU', 'count.', '"""'], 'file_path': '@os', 'line_number': 29, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns CPU count.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns CPU count.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns CPU count.    "'], ['s', '""']]}, {'str': 'func cpu_count()', 'command': 'func', 'args_str': 'cpu_count()', 'args': ['cpu_count()'], 'file_path': '@os', 'line_number': 30, 'strings': [[False, 'func cpu_count()']], 'eval': [['o', 'func'], ['o', 'cpu_count'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'cpu_count'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('os')->cpu_count()", 'command': 'return', 'args_str': "py_load_module('os')->cpu_count()", 'args': ["py_load_module('os')->cpu_count()"], 'file_path': '@os', 'line_number': 31, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->cpu_count()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'cpu_count'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'cpu_count'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 32, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Makes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Makes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Makes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 33, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Makes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Makes a directory.\\n    Gets directory path as string.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Makes a directory.\\n    Gets directory path as string.    "'], ['s', '""']]}, {'str': 'func mkdir(string $dirpath)', 'command': 'func', 'args_str': 'mkdir(string $dirpath)', 'args': ['mkdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 34, 'strings': [[False, 'func mkdir(string $dirpath)']], 'eval': [['o', 'func'], ['o', 'mkdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'mkdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': "py_load_module ('os')->mkdir($dirpath)", 'command': 'py_load_module', 'args_str': "('os')->mkdir($dirpath)", 'args': ["('os')->mkdir($dirpath)"], 'file_path': '@os', 'line_number': 35, 'strings': [[False, 'py_load_module ('], [True, "'os'"], [False, ')->mkdir($dirpath)']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'mkdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'mkdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 36, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': "$curdir = py_load_module('os')->curdir", 'command': '$curdir', 'args_str': "= py_load_module('os')->curdir", 'args': ['=', "py_load_module('os')->curdir"], 'file_path': '@os', 'line_number': 37, 'strings': [[False, '$curdir = py_load_module('], [True, "'os'"], [False, ')->curdir']], 'eval': [['v', 'curdir', 'self.get_var("curdir")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'curdir']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'curdir']]}, {'str': '@doc """    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'command': '@doc', 'args_str': '"""    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    """', 'args': ['"""', 'Kills', 'a', 'process.\\n', 'First', 'argument', 'is', 'process', 'ID', 'as', 'int.\\n', 'Second', 'argument', 'is', 'the', 'signal.', '"""'], 'file_path': '@os', 'line_number': 38, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Kills a process.\\n    First argument is process ID as int.\\n    Second argument is the signal.    "'], ['s', '""']]}, {'str': 'func kill(int $pid, int $signal=1)', 'command': 'func', 'args_str': 'kill(int $pid, int $signal=1)', 'args': ['kill(int', '$pid,', 'int', '$signal=1)'], 'file_path': '@os', 'line_number': 39, 'strings': [[False, 'func kill(int $pid, int $signal=1)']], 'eval': [['o', 'func'], ['o', 'kill'], ['l', '('], ['o', 'int'], ['v', 'pid', 'self.get_var("pid")'], ['l', ','], ['o', 'int'], ['v', 'signal', 'self.get_var("signal")'], ['l', '='], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'kill'], ['l', '('], ['o', 'int'], ['v', 'pid', 'self.get_var("pid")'], ['l', ','], ['o', 'int'], ['v', 'signal', 'self.get_var("signal")'], ['l', '='], ['o', '1'], ['l', ')']]}, {'str': "return py_load_module('os')->kill($pid, $signal)", 'command': 'return', 'args_str': "py_load_module('os')->kill($pid, $signal)", 'args': ["py_load_module('os')->kill($pid,", '$signal)'], 'file_path': '@os', 'line_number': 40, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->kill($pid, $signal)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'kill'], ['l', '('], ['v', 'pid', 'self.get_var("pid")'], ['l', ','], ['v', 'signal', 'self.get_var("signal")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'kill'], ['l', '('], ['v', 'pid', 'self.get_var("pid")'], ['l', ','], ['v', 'signal', 'self.get_var("signal")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 41, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Removes a directory.\\n    Gets directory path as string.    """', 'command': '@doc', 'args_str': '"""    Removes a directory.\\n    Gets directory path as string.    """', 'args': ['"""', 'Removes', 'a', 'directory.\\n', 'Gets', 'directory', 'path', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 42, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Removes a directory.\\n    Gets directory path as string.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Removes a directory.\\n    Gets directory path as string.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Removes a directory.\\n    Gets directory path as string.    "'], ['s', '""']]}, {'str': 'func rmdir(string $dirpath)', 'command': 'func', 'args_str': 'rmdir(string $dirpath)', 'args': ['rmdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 43, 'strings': [[False, 'func rmdir(string $dirpath)']], 'eval': [['o', 'func'], ['o', 'rmdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'rmdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': "return py_load_module('os')->rmdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->rmdir($dirpath)", 'args': ["py_load_module('os')->rmdir($dirpath)"], 'file_path': '@os', 'line_number': 44, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->rmdir($dirpath)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'rmdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'rmdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 45, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': "$osname = py_load_module('os')->name", 'command': '$osname', 'args_str': "= py_load_module('os')->name", 'args': ['=', "py_load_module('os')->name"], 'file_path': '@os', 'line_number': 46, 'strings': [[False, '$osname = py_load_module('], [True, "'os'"], [False, ')->name']], 'eval': [['v', 'osname', 'self.get_var("osname")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'name']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'name']]}, {'str': "$pardir = py_load_module('os')->path->pardir", 'command': '$pardir', 'args_str': "= py_load_module('os')->path->pardir", 'args': ['=', "py_load_module('os')->path->pardir"], 'file_path': '@os', 'line_number': 47, 'strings': [[False, '$pardir = py_load_module('], [True, "'os'"], [False, ')->path->pardir']], 'eval': [['v', 'pardir', 'self.get_var("pardir")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'pardir']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'pardir']]}, {'str': '@doc """    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'directory.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 48, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks is a path directory.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], ['s', '""']]}, {'str': 'func bool::isdir(string $dirpath)', 'command': 'func', 'args_str': 'bool::isdir(string $dirpath)', 'args': ['bool::isdir(string', '$dirpath)'], 'file_path': '@os', 'line_number': 49, 'strings': [[False, 'func bool::isdir(string $dirpath)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isdir'], ['l', '('], ['o', 'string'], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': "return py_load_module('os')->path->isdir($dirpath)", 'command': 'return', 'args_str': "py_load_module('os')->path->isdir($dirpath)", 'args': ["py_load_module('os')->path->isdir($dirpath)"], 'file_path': '@os', 'line_number': 50, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->isdir($dirpath)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'isdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'isdir'], ['l', '('], ['v', 'dirpath', 'self.get_var("dirpath")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 51, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'command': '@doc', 'args_str': '"""    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    """', 'args': ['"""', 'Checks', 'is', 'a', 'path', 'file.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.\\n', '"""'], 'file_path': '@os', 'line_number': 52, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks is a path file.\\n    Gets path as string.\\n    Returns Boolean.\\n    "'], ['s', '""']]}, {'str': 'func bool::isfile(string $path)', 'command': 'func', 'args_str': 'bool::isfile(string $path)', 'args': ['bool::isfile(string', '$path)'], 'file_path': '@os', 'line_number': 53, 'strings': [[False, 'func bool::isfile(string $path)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isfile'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isfile'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': "return py_load_module('os')->path->isfile($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->isfile($path)", 'args': ["py_load_module('os')->path->isfile($path)"], 'file_path': '@os', 'line_number': 54, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->isfile($path)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'isfile'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'isfile'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 55, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    """', 'args': ['"""', 'Checks', 'a', 'path', 'exists.\\n', 'Gets', 'path', 'as', 'string.\\n', 'Returns', 'Boolean.', '"""'], 'file_path': '@os', 'line_number': 56, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks a path exists.\\n    Gets path as string.\\n    Returns Boolean.    "'], ['s', '""']]}, {'str': 'func bool::exists(string $path)', 'command': 'func', 'args_str': 'bool::exists(string $path)', 'args': ['bool::exists(string', '$path)'], 'file_path': '@os', 'line_number': 57, 'strings': [[False, 'func bool::exists(string $path)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': "return py_load_module('os')->path->exists($path)", 'command': 'return', 'args_str': "py_load_module('os')->path->exists($path)", 'args': ["py_load_module('os')->path->exists($path)"], 'file_path': '@os', 'line_number': 58, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->path->exists($path)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'exists'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'path'], ['l', '.'], ['n', 'exists'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 59, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Returns program current working directory as string.    """', 'command': '@doc', 'args_str': '"""    Returns program current working directory as string.    """', 'args': ['"""', 'Returns', 'program', 'current', 'working', 'directory', 'as', 'string.', '"""'], 'file_path': '@os', 'line_number': 60, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns program current working directory as string.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns program current working directory as string.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns program current working directory as string.    "'], ['s', '""']]}, {'str': 'func string::cwd()', 'command': 'func', 'args_str': 'string::cwd()', 'args': ['string::cwd()'], 'file_path': '@os', 'line_number': 61, 'strings': [[False, 'func string::cwd()']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'cwd'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'cwd'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('os')->getcwd()", 'command': 'return', 'args_str': "py_load_module('os')->getcwd()", 'args': ["py_load_module('os')->getcwd()"], 'file_path': '@os', 'line_number': 62, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->getcwd()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'getcwd'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'getcwd'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 63, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@os', 'line_number': 64, 'strings': [[False, 'endnamespace']], 'eval': [['o', 'endnamespace']], 'args_eval': []}]
modules["pit"] = [{'str': 'namespace pit', 'command': 'namespace', 'args_str': 'pit', 'args': ['pit'], 'file_path': '@pit', 'line_number': 22, 'strings': [[False, 'namespace pit']], 'eval': [['o', 'namespace'], ['o', 'pit']], 'args_eval': [['o', 'pit']]}, {'str': 'func include(string $path, dict $htmldata={})', 'command': 'func', 'args_str': 'include(string $path, dict $htmldata={})', 'args': ['include(string', '$path,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 23, 'strings': [[False, 'func include(string $path, dict $htmldata={})']], 'eval': [['o', 'func'], ['o', 'include'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['o', 'include'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': 'run_file ($path, True, $htmldata)', 'command': 'run_file', 'args_str': '($path, True, $htmldata)', 'args': ['($path,', 'True,', '$htmldata)'], 'file_path': '@pit', 'line_number': 24, 'strings': [[False, 'run_file ($path, True, $htmldata)']], 'eval': [['o', 'run_file'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'True'], ['l', ','], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'True'], ['l', ','], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'command': 'func', 'args_str': 'run_file(string $path, bool $realtime_run=true, dict $htmldata={})', 'args': ['run_file(string', '$path,', 'bool', '$realtime_run=true,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 26, 'strings': [[False, 'func run_file(string $path, bool $realtime_run=true, dict $htmldata={})']], 'eval': [['o', 'func'], ['o', 'run_file'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'bool'], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', '='], ['o', 'true'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['o', 'run_file'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['o', 'bool'], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', '='], ['o', 'true'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': "$f = fopen($path, 'r')", 'command': '$f', 'args_str': "= fopen($path, 'r')", 'args': ['=', 'fopen($path,', "'r')"], 'file_path': '@pit', 'line_number': 27, 'strings': [[False, '$f = fopen($path, '], [True, "'r'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'fopen'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'r'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'fopen'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'r'"], ['l', ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@pit', 'line_number': 28, 'strings': [[False, '$content = $f->read()']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 29, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'return run($content, $realtime_run, $path, $htmldata)', 'command': 'return', 'args_str': 'run($content, $realtime_run, $path, $htmldata)', 'args': ['run($content,', '$realtime_run,', '$path,', '$htmldata)'], 'file_path': '@pit', 'line_number': 30, 'strings': [[False, 'return run($content, $realtime_run, $path, $htmldata)']], 'eval': [['o', 'return'], ['o', 'run'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', ','], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', ')']], 'args_eval': [['o', 'run'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', ','], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 31, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'command': 'func', 'args_str': 'run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})', 'args': ['run(string', '$content,', 'bool', '$realtime_run=false,', 'string', '$path=null,', 'dict', '$htmldata={})'], 'file_path': '@pit', 'line_number': 32, 'strings': [[False, 'func run(string $content, bool $realtime_run=false, string $path=null, dict $htmldata={})']], 'eval': [['o', 'func'], ['o', 'run'], ['l', '('], ['o', 'string'], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['o', 'bool'], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', '='], ['o', 'false'], ['l', ','], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', '='], ['o', 'null'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['o', 'run'], ['l', '('], ['o', 'string'], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['o', 'bool'], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', '='], ['o', 'false'], ['l', ','], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', '='], ['o', 'null'], ['l', ','], ['o', 'dict'], ['v', 'htmldata', 'self.get_var("htmldata")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': '$__htmldir__ = $__dir__', 'command': '$__htmldir__', 'args_str': '= $__dir__', 'args': ['=', '$__dir__'], 'file_path': '@pit', 'line_number': 33, 'strings': [[False, '$__htmldir__ = $__dir__']], 'eval': [['v', '__htmldir__', 'self.get_var("__htmldir__")'], ['l', '='], ['v', '__dir__', 'self.get_var("__dir__")']], 'args_eval': [['l', '='], ['v', '__dir__', 'self.get_var("__dir__")']]}, {'str': "$__htmlfile__ = $__htmldir__ + '/-'", 'command': '$__htmlfile__', 'args_str': "= $__htmldir__ + '/-'", 'args': ['=', '$__htmldir__', '+', "'/-'"], 'file_path': '@pit', 'line_number': 34, 'strings': [[False, '$__htmlfile__ = $__htmldir__ + '], [True, "'/-'"], [False, '']], 'eval': [['v', '__htmlfile__', 'self.get_var("__htmlfile__")'], ['l', '='], ['v', '__htmldir__', 'self.get_var("__htmldir__")'], ['l', '+'], ['s', "'/-'"]], 'args_eval': [['l', '='], ['v', '__htmldir__', 'self.get_var("__htmldir__")'], ['l', '+'], ['s', "'/-'"]]}, {'str': "$content = $content->split('\\n', 1)", 'command': '$content', 'args_str': "= $content->split('\\n', 1)", 'args': ['=', "$content->split('\\n',", '1)'], 'file_path': '@pit', 'line_number': 35, 'strings': [[False, '$content = $content->split('], [True, "'\\n'"], [False, ', 1)']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': 'if len($content) > 1', 'command': 'if', 'args_str': 'len($content) > 1', 'args': ['len($content)', '>', '1'], 'file_path': '@pit', 'line_number': 36, 'strings': [[False, 'if len($content) > 1']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')'], ['l', '>'], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')'], ['l', '>'], ['o', '1']]}, {'str': 'mem not (len($content) > 1)', 'command': 'mem', 'args_str': 'not (len($content) > 1)', 'args': ['not', '(len($content)', '>', '1)'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'mem not (len($content) > 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif11_2', 'command': 'gotoif', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'gotoif tmplabelif11_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif11_2']], 'args_eval': [['o', 'tmplabelif11_2']]}, {'str': "if $content[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content[0]->startswith('#!/')", 'args': ["$content[0]->startswith('#!/')"], 'file_path': '@pit', 'line_number': 37, 'strings': [[False, 'if $content[0]->startswith('], [True, "'#!/'"], [False, ')']], 'eval': [['o', 'if'], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')']], 'args_eval': [['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')']]}, {'str': "mem not ($content[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content[0]->startswith('#!/'))", 'args': ['not', "($content[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not ($content[0]->startswith('], [True, "'#!/'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif12_2', 'command': 'gotoif', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif12_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif12_2']], 'args_eval': [['o', 'tmplabelif12_2']]}, {'str': '$content = $content[1]', 'command': '$content', 'args_str': '= $content[1]', 'args': ['=', '$content[1]'], 'file_path': '@pit', 'line_number': 38, 'strings': [[False, '$content = $content[1]']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 39, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif12_end', 'command': 'goto', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'goto tmplabelif12_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif12_end']], 'args_eval': [['o', 'tmplabelif12_end']]}, {'str': 'label tmplabelif12_2', 'command': 'label', 'args_str': 'tmplabelif12_2', 'args': ['tmplabelif12_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif12_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif12_2']], 'args_eval': [['o', 'tmplabelif12_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif12_3', 'command': 'gotoif', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'gotoif tmplabelif12_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif12_3']], 'args_eval': [['o', 'tmplabelif12_3']]}, {'str': "$content = '\\n'->join($content)", 'command': '$content', 'args_str': "= '\\n'->join($content)", 'args': ['=', "'\\n'->join($content)"], 'file_path': '@pit', 'line_number': 40, 'strings': [[False, '$content = '], [True, "'\\n'"], [False, '->join($content)']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['s', "'\\n'"], ['l', '.'], ['n', 'join'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')']], 'args_eval': [['l', '='], ['s', "'\\n'"], ['l', '.'], ['n', 'join'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 41, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif12_3', 'command': 'label', 'args_str': 'tmplabelif12_3', 'args': ['tmplabelif12_3'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif12_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif12_3']], 'args_eval': [['o', 'tmplabelif12_3']]}, {'str': 'label tmplabelif12_end', 'command': 'label', 'args_str': 'tmplabelif12_end', 'args': ['tmplabelif12_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif12_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif12_end']], 'args_eval': [['o', 'tmplabelif12_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 42, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif11_end', 'command': 'goto', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'goto tmplabelif11_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif11_end']], 'args_eval': [['o', 'tmplabelif11_end']]}, {'str': 'label tmplabelif11_2', 'command': 'label', 'args_str': 'tmplabelif11_2', 'args': ['tmplabelif11_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif11_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif11_2']], 'args_eval': [['o', 'tmplabelif11_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif11_3', 'command': 'gotoif', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'gotoif tmplabelif11_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif11_3']], 'args_eval': [['o', 'tmplabelif11_3']]}, {'str': '$content = $content[0]', 'command': '$content', 'args_str': '= $content[0]', 'args': ['=', '$content[0]'], 'file_path': '@pit', 'line_number': 43, 'strings': [[False, '$content = $content[0]']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 44, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif11_3', 'command': 'label', 'args_str': 'tmplabelif11_3', 'args': ['tmplabelif11_3'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif11_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif11_3']], 'args_eval': [['o', 'tmplabelif11_3']]}, {'str': 'label tmplabelif11_end', 'command': 'label', 'args_str': 'tmplabelif11_end', 'args': ['tmplabelif11_end'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif11_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif11_end']], 'args_eval': [['o', 'tmplabelif11_end']]}, {'str': 'if $path != null', 'command': 'if', 'args_str': '$path != null', 'args': ['$path', '!=', 'null'], 'file_path': '@pit', 'line_number': 45, 'strings': [[False, 'if $path != null']], 'eval': [['o', 'if'], ['v', 'path', 'self.get_var("path")'], ['l', '!'], ['l', '='], ['o', 'null']], 'args_eval': [['v', 'path', 'self.get_var("path")'], ['l', '!'], ['l', '='], ['o', 'null']]}, {'str': 'mem not ($path != null)', 'command': 'mem', 'args_str': 'not ($path != null)', 'args': ['not', '($path', '!=', 'null)'], 'file_path': '<system>', 'line_number': 39, 'strings': [[False, 'mem not ($path != null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif13_2', 'command': 'gotoif', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 39, 'strings': [[False, 'gotoif tmplabelif13_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif13_2']], 'args_eval': [['o', 'tmplabelif13_2']]}, {'str': '$__htmlfile__ = os.path.abspath($path)', 'command': '$__htmlfile__', 'args_str': '= os.path.abspath($path)', 'args': ['=', 'os.path.abspath($path)'], 'file_path': '@pit', 'line_number': 46, 'strings': [[False, '$__htmlfile__ = os.path.abspath($path)']], 'eval': [['v', '__htmlfile__', 'self.get_var("__htmlfile__")'], ['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': '$__htmldir__ = os.path.dirname($__htmlfile__)', 'command': '$__htmldir__', 'args_str': '= os.path.dirname($__htmlfile__)', 'args': ['=', 'os.path.dirname($__htmlfile__)'], 'file_path': '@pit', 'line_number': 47, 'strings': [[False, '$__htmldir__ = os.path.dirname($__htmlfile__)']], 'eval': [['v', '__htmldir__', 'self.get_var("__htmldir__")'], ['l', '='], ['o', 'os.path.dirname'], ['l', '('], ['v', '__htmlfile__', 'self.get_var("__htmlfile__")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.dirname'], ['l', '('], ['v', '__htmlfile__', 'self.get_var("__htmlfile__")'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 48, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif13_2', 'command': 'label', 'args_str': 'tmplabelif13_2', 'args': ['tmplabelif13_2'], 'file_path': '<system>', 'line_number': 44, 'strings': [[False, 'label tmplabelif13_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif13_2']], 'args_eval': [['o', 'tmplabelif13_2']]}, {'str': 'label tmplabelif13_end', 'command': 'label', 'args_str': 'tmplabelif13_end', 'args': ['tmplabelif13_end'], 'file_path': '<system>', 'line_number': 44, 'strings': [[False, 'label tmplabelif13_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif13_end']], 'args_eval': [['o', 'tmplabelif13_end']]}, {'str': "$randstr_1 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_1', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 49, 'strings': [[False, '$randstr_1 = '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']], 'eval': [['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', '='], ['s', "'<<<therandomstringforpit'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['s', "'>>>'"]], 'args_eval': [['l', '='], ['s', "'<<<therandomstringforpit'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['s', "'>>>'"]]}, {'str': "$randstr_2 = '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'command': '$randstr_2', 'args_str': "= '<<<therandomstringforpit' + str(time.time()) + str(random.random()) + '>>>'", 'args': ['=', "'<<<therandomstringforpit'", '+', 'str(time.time())', '+', 'str(random.random())', '+', "'>>>'"], 'file_path': '@pit', 'line_number': 50, 'strings': [[False, '$randstr_2 = '], [True, "'<<<therandomstringforpit'"], [False, ' + str(time.time()) + str(random.random()) + '], [True, "'>>>'"], [False, '']], 'eval': [['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', '='], ['s', "'<<<therandomstringforpit'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['s', "'>>>'"]], 'args_eval': [['l', '='], ['s', "'<<<therandomstringforpit'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '+'], ['s', "'>>>'"]]}, {'str': "$content = $content->replace('\\{', $randstr_1)", 'command': '$content', 'args_str': "= $content->replace('\\{', $randstr_1)", 'args': ['=', "$content->replace('\\{',", '$randstr_1)'], 'file_path': '@pit', 'line_number': 51, 'strings': [[False, '$content = $content->replace('], [True, "'\\{'"], [False, ', $randstr_1)']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'\\{'"], ['l', ','], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'\\{'"], ['l', ','], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ')']]}, {'str': "$content = $content->replace('\\}', $randstr_2)", 'command': '$content', 'args_str': "= $content->replace('\\}', $randstr_2)", 'args': ['=', "$content->replace('\\}',", '$randstr_2)'], 'file_path': '@pit', 'line_number': 52, 'strings': [[False, '$content = $content->replace('], [True, "'\\}'"], [False, ', $randstr_2)']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'\\}'"], ['l', ','], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'\\}'"], ['l', ','], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ')']]}, {'str': "$content = $content->replace('{{', '{=')", 'command': '$content', 'args_str': "= $content->replace('{{', '{=')", 'args': ['=', "$content->replace('{{',", "'{=')"], 'file_path': '@pit', 'line_number': 53, 'strings': [[False, '$content = $content->replace('], [True, "'{{'"], [False, ', '], [True, "'{='"], [False, ')']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'{{'"], ['l', ','], ['s', "'{='"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'{{'"], ['l', ','], ['s', "'{='"], ['l', ')']]}, {'str': "$content = $content->replace('}}', '}')", 'command': '$content', 'args_str': "= $content->replace('}}', '}')", 'args': ['=', "$content->replace('}}',", "'}')"], 'file_path': '@pit', 'line_number': 54, 'strings': [[False, '$content = $content->replace('], [True, "'}}'"], [False, ', '], [True, "'}'"], [False, ')']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'}}'"], ['l', ','], ['s', "'}'"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'}}'"], ['l', ','], ['s', "'}'"], ['l', ')']]}, {'str': "$parts = $content->split('{')", 'command': '$parts', 'args_str': "= $content->split('{')", 'args': ['=', "$content->split('{')"], 'file_path': '@pit', 'line_number': 55, 'strings': [[False, '$parts = $content->split('], [True, "'{'"], [False, ')']], 'eval': [['v', 'parts', 'self.get_var("parts")'], ['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'{'"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'{'"], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 56, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$new_parts = []', 'command': '$new_parts', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@pit', 'line_number': 57, 'strings': [[False, '$new_parts = []']], 'eval': [['v', 'new_parts', 'self.get_var("new_parts")'], ['l', '='], ['l', '['], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['l', ']']]}, {'str': 'while $i < len($parts)', 'command': 'while', 'args_str': '$i < len($parts)', 'args': ['$i', '<', 'len($parts)'], 'file_path': '@pit', 'line_number': 58, 'strings': [[False, 'while $i < len($parts)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parts', 'self.get_var("parts")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'parts', 'self.get_var("parts")'], ['l', ')']]}, {'str': "$tmp = $parts[$i]->split('}', 1)", 'command': '$tmp', 'args_str': "= $parts[$i]->split('}', 1)", 'args': ['=', "$parts[$i]->split('}',", '1)'], 'file_path': '@pit', 'line_number': 59, 'strings': [[False, '$tmp = $parts[$i]->split('], [True, "'}'"], [False, ', 1)']], 'eval': [['v', 'tmp', 'self.get_var("tmp")'], ['l', '='], ['v', 'parts', 'self.get_var("parts")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'}'"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'parts', 'self.get_var("parts")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'}'"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': 'if len($tmp) > 1', 'command': 'if', 'args_str': 'len($tmp) > 1', 'args': ['len($tmp)', '>', '1'], 'file_path': '@pit', 'line_number': 60, 'strings': [[False, 'if len($tmp) > 1']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'tmp', 'self.get_var("tmp")'], ['l', ')'], ['l', '>'], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'tmp', 'self.get_var("tmp")'], ['l', ')'], ['l', '>'], ['o', '1']]}, {'str': 'mem not (len($tmp) > 1)', 'command': 'mem', 'args_str': 'not (len($tmp) > 1)', 'args': ['not', '(len($tmp)', '>', '1)'], 'file_path': '<system>', 'line_number': 58, 'strings': [[False, 'mem not (len($tmp) > 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'tmp', 'self.get_var("tmp")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'tmp', 'self.get_var("tmp")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif14_2', 'command': 'gotoif', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 58, 'strings': [[False, 'gotoif tmplabelif14_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif14_2']], 'args_eval': [['o', 'tmplabelif14_2']]}, {'str': "$new_parts->append ([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([True, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([True,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 61, 'strings': [[False, '$new_parts->append ([True, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'eval': [['v', 'new_parts', 'self.get_var("new_parts")'], ['l', '.'], ['n', 'append'], ['l', '('], ['l', '['], ['o', 'True'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['l', '['], ['o', 'True'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']]}, {'str': "$new_parts->append ([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[1]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[1]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 62, 'strings': [[False, '$new_parts->append ([False, $tmp[1]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'eval': [['v', 'new_parts', 'self.get_var("new_parts")'], ['l', '.'], ['n', 'append'], ['l', '('], ['l', '['], ['o', 'False'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['l', '['], ['o', 'False'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 63, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif14_end', 'command': 'goto', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'goto tmplabelif14_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif14_end']], 'args_eval': [['o', 'tmplabelif14_end']]}, {'str': 'label tmplabelif14_2', 'command': 'label', 'args_str': 'tmplabelif14_2', 'args': ['tmplabelif14_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif14_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif14_2']], 'args_eval': [['o', 'tmplabelif14_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif14_3', 'command': 'gotoif', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif14_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif14_3']], 'args_eval': [['o', 'tmplabelif14_3']]}, {'str': "$new_parts->append ([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'command': '$new_parts->append', 'args_str': "([False, $tmp[0]->replace($randstr_1, '{')->replace($randstr_2, '}')])", 'args': ['([False,', '$tmp[0]->replace($randstr_1,', "'{')->replace($randstr_2,", "'}')])"], 'file_path': '@pit', 'line_number': 64, 'strings': [[False, '$new_parts->append ([False, $tmp[0]->replace($randstr_1, '], [True, "'{'"], [False, ')->replace($randstr_2, '], [True, "'}'"], [False, ')])']], 'eval': [['v', 'new_parts', 'self.get_var("new_parts")'], ['l', '.'], ['n', 'append'], ['l', '('], ['l', '['], ['o', 'False'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['l', '['], ['o', 'False'], ['l', ','], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_1', 'self.get_var("randstr_1")'], ['l', ','], ['s', "'{'"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['v', 'randstr_2', 'self.get_var("randstr_2")'], ['l', ','], ['s', "'}'"], ['l', ')'], ['l', ']'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 65, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif14_3', 'command': 'label', 'args_str': 'tmplabelif14_3', 'args': ['tmplabelif14_3'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif14_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif14_3']], 'args_eval': [['o', 'tmplabelif14_3']]}, {'str': 'label tmplabelif14_end', 'command': 'label', 'args_str': 'tmplabelif14_end', 'args': ['tmplabelif14_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif14_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif14_end']], 'args_eval': [['o', 'tmplabelif14_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@pit', 'line_number': 66, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 67, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$pit_i = 0', 'command': '$pit_i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@pit', 'line_number': 69, 'strings': [[False, '$pit_i = 0']], 'eval': [['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$pit_parts = $new_parts', 'command': '$pit_parts', 'args_str': '= $new_parts', 'args': ['=', '$new_parts'], 'file_path': '@pit', 'line_number': 70, 'strings': [[False, '$pit_parts = $new_parts']], 'eval': [['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '='], ['v', 'new_parts', 'self.get_var("new_parts")']], 'args_eval': [['l', '='], ['v', 'new_parts', 'self.get_var("new_parts")']]}, {'str': "$pit_code = ''", 'command': '$pit_code', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@pit', 'line_number': 71, 'strings': [[False, '$pit_code = '], [True, "''"], [False, '']], 'eval': [['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '='], ['s', "''"]], 'args_eval': [['l', '='], ['s', "''"]]}, {'str': "free ('i')", 'command': 'free', 'args_str': "('i')", 'args': ["('i')"], 'file_path': '@pit', 'line_number': 72, 'strings': [[False, 'free ('], [True, "'i'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'i'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'i'"], ['l', ')']]}, {'str': "free ('new_parts')", 'command': 'free', 'args_str': "('new_parts')", 'args': ["('new_parts')"], 'file_path': '@pit', 'line_number': 73, 'strings': [[False, 'free ('], [True, "'new_parts'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'new_parts'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'new_parts'"], ['l', ')']]}, {'str': "free ('parts')", 'command': 'free', 'args_str': "('parts')", 'args': ["('parts')"], 'file_path': '@pit', 'line_number': 74, 'strings': [[False, 'free ('], [True, "'parts'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'parts'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'parts'"], ['l', ')']]}, {'str': "free ('content')", 'command': 'free', 'args_str': "('content')", 'args': ["('content')"], 'file_path': '@pit', 'line_number': 75, 'strings': [[False, 'free ('], [True, "'content'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'content'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'content'"], ['l', ')']]}, {'str': "free ('randstr_1')", 'command': 'free', 'args_str': "('randstr_1')", 'args': ["('randstr_1')"], 'file_path': '@pit', 'line_number': 76, 'strings': [[False, 'free ('], [True, "'randstr_1'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'randstr_1'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'randstr_1'"], ['l', ')']]}, {'str': "free ('randstr_2')", 'command': 'free', 'args_str': "('randstr_2')", 'args': ["('randstr_2')"], 'file_path': '@pit', 'line_number': 77, 'strings': [[False, 'free ('], [True, "'randstr_2'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'randstr_2'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'randstr_2'"], ['l', ')']]}, {'str': "free ('tmp')", 'command': 'free', 'args_str': "('tmp')", 'args': ["('tmp')"], 'file_path': '@pit', 'line_number': 78, 'strings': [[False, 'free ('], [True, "'tmp'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'tmp'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'tmp'"], ['l', ')']]}, {'str': 'while $pit_i < len($pit_parts)', 'command': 'while', 'args_str': '$pit_i < len($pit_parts)', 'args': ['$pit_i', '<', 'len($pit_parts)'], 'file_path': '@pit', 'line_number': 79, 'strings': [[False, 'while $pit_i < len($pit_parts)']], 'eval': [['o', 'while'], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', ')']], 'args_eval': [['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', ')']]}, {'str': 'if $pit_parts[$pit_i][0] == True', 'command': 'if', 'args_str': '$pit_parts[$pit_i][0] == True', 'args': ['$pit_parts[$pit_i][0]', '==', 'True'], 'file_path': '@pit', 'line_number': 80, 'strings': [[False, 'if $pit_parts[$pit_i][0] == True']], 'eval': [['o', 'if'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['o', 'True']], 'args_eval': [['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['o', 'True']]}, {'str': 'mem not ($pit_parts[$pit_i][0] == True)', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][0] == True)', 'args': ['not', '($pit_parts[$pit_i][0]', '==', 'True)'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'mem not ($pit_parts[$pit_i][0] == True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif15_2', 'command': 'gotoif', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'gotoif tmplabelif15_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif15_2']], 'args_eval': [['o', 'tmplabelif15_2']]}, {'str': 'if $pit_parts[$pit_i][1]', 'command': 'if', 'args_str': '$pit_parts[$pit_i][1]', 'args': ['$pit_parts[$pit_i][1]'], 'file_path': '@pit', 'line_number': 81, 'strings': [[False, 'if $pit_parts[$pit_i][1]']], 'eval': [['o', 'if'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': 'mem not ($pit_parts[$pit_i][1])', 'command': 'mem', 'args_str': 'not ($pit_parts[$pit_i][1])', 'args': ['not', '($pit_parts[$pit_i][1])'], 'file_path': '<system>', 'line_number': 88, 'strings': [[False, 'mem not ($pit_parts[$pit_i][1])']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': 'gotoif tmplabelif16_2', 'command': 'gotoif', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 88, 'strings': [[False, 'gotoif tmplabelif16_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif16_2']], 'args_eval': [['o', 'tmplabelif16_2']]}, {'str': "if $pit_parts[$pit_i][1][0] == '='", 'command': 'if', 'args_str': "$pit_parts[$pit_i][1][0] == '='", 'args': ['$pit_parts[$pit_i][1][0]', '==', "'='"], 'file_path': '@pit', 'line_number': 82, 'strings': [[False, 'if $pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, '']], 'eval': [['o', 'if'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'='"]], 'args_eval': [['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'='"]]}, {'str': "mem not ($pit_parts[$pit_i][1][0] == '=')", 'command': 'mem', 'args_str': "not ($pit_parts[$pit_i][1][0] == '=')", 'args': ['not', '($pit_parts[$pit_i][1][0]', '==', "'=')"], 'file_path': '<system>', 'line_number': 91, 'strings': [[False, 'mem not ($pit_parts[$pit_i][1][0] == '], [True, "'='"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'='"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['s', "'='"], ['l', ')']]}, {'str': 'gotoif tmplabelif17_2', 'command': 'gotoif', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 91, 'strings': [[False, 'gotoif tmplabelif17_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif17_2']], 'args_eval': [['o', 'tmplabelif17_2']]}, {'str': "$pit_code = $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\nprint(' + $pit_parts[$pit_i][1][1:] + ')')", 'args': ['=', '$pit_code', '+', "('\\nprint('", '+', '$pit_parts[$pit_i][1][1:]', '+', "')')"], 'file_path': '@pit', 'line_number': 83, 'strings': [[False, '$pit_code = $pit_code + ('], [True, "'\\nprint('"], [False, ' + $pit_parts[$pit_i][1][1:] + '], [True, "')'"], [False, ')']], 'eval': [['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', "'\\nprint('"], ['l', '+'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ':'], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', "'\\nprint('"], ['l', '+'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ':'], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 84, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif17_end', 'command': 'goto', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'goto tmplabelif17_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif17_end']], 'args_eval': [['o', 'tmplabelif17_end']]}, {'str': 'label tmplabelif17_2', 'command': 'label', 'args_str': 'tmplabelif17_2', 'args': ['tmplabelif17_2'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'label tmplabelif17_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif17_2']], 'args_eval': [['o', 'tmplabelif17_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif17_3', 'command': 'gotoif', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 95, 'strings': [[False, 'gotoif tmplabelif17_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif17_3']], 'args_eval': [['o', 'tmplabelif17_3']]}, {'str': "$pit_code = $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'command': '$pit_code', 'args_str': "= $pit_code + ('\\n' + $pit_parts[$pit_i][1])", 'args': ['=', '$pit_code', '+', "('\\n'", '+', '$pit_parts[$pit_i][1])'], 'file_path': '@pit', 'line_number': 85, 'strings': [[False, '$pit_code = $pit_code + ('], [True, "'\\n'"], [False, ' + $pit_parts[$pit_i][1])']], 'eval': [['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', "'\\n'"], ['l', '+'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', "'\\n'"], ['l', '+'], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 86, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif17_3', 'command': 'label', 'args_str': 'tmplabelif17_3', 'args': ['tmplabelif17_3'], 'file_path': '<system>', 'line_number': 101, 'strings': [[False, 'label tmplabelif17_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif17_3']], 'args_eval': [['o', 'tmplabelif17_3']]}, {'str': 'label tmplabelif17_end', 'command': 'label', 'args_str': 'tmplabelif17_end', 'args': ['tmplabelif17_end'], 'file_path': '<system>', 'line_number': 101, 'strings': [[False, 'label tmplabelif17_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif17_end']], 'args_eval': [['o', 'tmplabelif17_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 87, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif16_2', 'command': 'label', 'args_str': 'tmplabelif16_2', 'args': ['tmplabelif16_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'label tmplabelif16_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif16_2']], 'args_eval': [['o', 'tmplabelif16_2']]}, {'str': 'label tmplabelif16_end', 'command': 'label', 'args_str': 'tmplabelif16_end', 'args': ['tmplabelif16_end'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'label tmplabelif16_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif16_end']], 'args_eval': [['o', 'tmplabelif16_end']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 88, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif15_end', 'command': 'goto', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'goto tmplabelif15_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif15_end']], 'args_eval': [['o', 'tmplabelif15_end']]}, {'str': 'label tmplabelif15_2', 'command': 'label', 'args_str': 'tmplabelif15_2', 'args': ['tmplabelif15_2'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'label tmplabelif15_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif15_2']], 'args_eval': [['o', 'tmplabelif15_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif15_3', 'command': 'gotoif', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 107, 'strings': [[False, 'gotoif tmplabelif15_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif15_3']], 'args_eval': [['o', 'tmplabelif15_3']]}, {'str': '$pit_code = $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'command': '$pit_code', 'args_str': '= $pit_code + (\'\\nprint(base64.b64decode("\' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + \'")->decode())\')', 'args': ['=', '$pit_code', '+', '(\'\\nprint(base64.b64decode("\'', '+', 'base64.b64encode($pit_parts[$pit_i][1]->encode())->decode()', '+', '\'")->decode())\')'], 'file_path': '@pit', 'line_number': 89, 'strings': [[False, '$pit_code = $pit_code + ('], [True, '\'\\nprint(base64.b64decode("\''], [False, ' + base64.b64encode($pit_parts[$pit_i][1]->encode())->decode() + '], [True, '\'")->decode())\''], [False, ')']], 'eval': [['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', '\'\\nprint(base64.b64decode("\''], ['l', '+'], ['o', 'base64.b64encode'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', '+'], ['s', '\'")->decode())\''], ['l', ')']], 'args_eval': [['l', '='], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', '+'], ['l', '('], ['s', '\'\\nprint(base64.b64decode("\''], ['l', '+'], ['o', 'base64.b64encode'], ['l', '('], ['v', 'pit_parts', 'self.get_var("pit_parts")'], ['l', '['], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', '+'], ['s', '\'")->decode())\''], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 90, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif15_3', 'command': 'label', 'args_str': 'tmplabelif15_3', 'args': ['tmplabelif15_3'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'label tmplabelif15_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif15_3']], 'args_eval': [['o', 'tmplabelif15_3']]}, {'str': 'label tmplabelif15_end', 'command': 'label', 'args_str': 'tmplabelif15_end', 'args': ['tmplabelif15_end'], 'file_path': '<system>', 'line_number': 113, 'strings': [[False, 'label tmplabelif15_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif15_end']], 'args_eval': [['o', 'tmplabelif15_end']]}, {'str': '$pit_i = $pit_i + 1', 'command': '$pit_i', 'args_str': '= $pit_i + 1', 'args': ['=', '$pit_i', '+', '1'], 'file_path': '@pit', 'line_number': 91, 'strings': [[False, '$pit_i = $pit_i + 1']], 'eval': [['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '='], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'pit_i', 'self.get_var("pit_i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 92, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': "free ('pit_i')", 'command': 'free', 'args_str': "('pit_i')", 'args': ["('pit_i')"], 'file_path': '@pit', 'line_number': 93, 'strings': [[False, 'free ('], [True, "'pit_i'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'pit_i'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'pit_i'"], ['l', ')']]}, {'str': "free ('pit_parts')", 'command': 'free', 'args_str': "('pit_parts')", 'args': ["('pit_parts')"], 'file_path': '@pit', 'line_number': 94, 'strings': [[False, 'free ('], [True, "'pit_parts'"], [False, ')']], 'eval': [['o', 'free'], ['l', '('], ['s', "'pit_parts'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'pit_parts'"], ['l', ')']]}, {'str': 'if $realtime_run', 'command': 'if', 'args_str': '$realtime_run', 'args': ['$realtime_run'], 'file_path': '@pit', 'line_number': 95, 'strings': [[False, 'if $realtime_run']], 'eval': [['o', 'if'], ['v', 'realtime_run', 'self.get_var("realtime_run")']], 'args_eval': [['v', 'realtime_run', 'self.get_var("realtime_run")']]}, {'str': 'mem not ($realtime_run)', 'command': 'mem', 'args_str': 'not ($realtime_run)', 'args': ['not', '($realtime_run)'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'mem not ($realtime_run)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'realtime_run', 'self.get_var("realtime_run")'], ['l', ')']]}, {'str': 'gotoif tmplabelif18_2', 'command': 'gotoif', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'gotoif tmplabelif18_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif18_2']], 'args_eval': [['o', 'tmplabelif18_2']]}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 96, 'strings': [[False, 'eval ($pit_code)']], 'eval': [['o', 'eval'], ['l', '('], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 97, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif18_end', 'command': 'goto', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'goto tmplabelif18_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif18_end']], 'args_eval': [['o', 'tmplabelif18_end']]}, {'str': 'label tmplabelif18_2', 'command': 'label', 'args_str': 'tmplabelif18_2', 'args': ['tmplabelif18_2'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'label tmplabelif18_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif18_2']], 'args_eval': [['o', 'tmplabelif18_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif18_3', 'command': 'gotoif', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'gotoif tmplabelif18_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif18_3']], 'args_eval': [['o', 'tmplabelif18_3']]}, {'str': 'out_start ()', 'command': 'out_start', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 98, 'strings': [[False, 'out_start ()']], 'eval': [['o', 'out_start'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'eval ($pit_code)', 'command': 'eval', 'args_str': '($pit_code)', 'args': ['($pit_code)'], 'file_path': '@pit', 'line_number': 99, 'strings': [[False, 'eval ($pit_code)']], 'eval': [['o', 'eval'], ['l', '('], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'pit_code', 'self.get_var("pit_code")'], ['l', ')']]}, {'str': 'out_end ()', 'command': 'out_end', 'args_str': '()', 'args': ['()'], 'file_path': '@pit', 'line_number': 100, 'strings': [[False, 'out_end ()']], 'eval': [['o', 'out_end'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'return out_get_clean()', 'command': 'return', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@pit', 'line_number': 101, 'strings': [[False, 'return out_get_clean()']], 'eval': [['o', 'return'], ['o', 'out_get_clean'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_get_clean'], ['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 102, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif18_3', 'command': 'label', 'args_str': 'tmplabelif18_3', 'args': ['tmplabelif18_3'], 'file_path': '<system>', 'line_number': 133, 'strings': [[False, 'label tmplabelif18_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif18_3']], 'args_eval': [['o', 'tmplabelif18_3']]}, {'str': 'label tmplabelif18_end', 'command': 'label', 'args_str': 'tmplabelif18_end', 'args': ['tmplabelif18_end'], 'file_path': '<system>', 'line_number': 133, 'strings': [[False, 'label tmplabelif18_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif18_end']], 'args_eval': [['o', 'tmplabelif18_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 103, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 104, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@pit', 'line_number': 105, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif19_2', 'command': 'gotoif', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 138, 'strings': [[False, 'gotoif tmplabelif19_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif19_2']], 'args_eval': [['o', 'tmplabelif19_2']]}, {'str': 'if len($argv) > 1', 'command': 'if', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@pit', 'line_number': 106, 'strings': [[False, 'if len($argv) > 1']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1']]}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 141, 'strings': [[False, 'mem not (len($argv) > 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif20_2', 'command': 'gotoif', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 141, 'strings': [[False, 'gotoif tmplabelif20_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif20_2']], 'args_eval': [['o', 'tmplabelif20_2']]}, {'str': 'pit.run_file ($argv[1], True)', 'command': 'pit.run_file', 'args_str': '($argv[1], True)', 'args': ['($argv[1],', 'True)'], 'file_path': '@pit', 'line_number': 107, 'strings': [[False, 'pit.run_file ($argv[1], True)']], 'eval': [['o', 'pit.run_file'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ','], ['o', 'True'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ','], ['o', 'True'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 108, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif20_end', 'command': 'goto', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'goto tmplabelif20_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif20_end']], 'args_eval': [['o', 'tmplabelif20_end']]}, {'str': 'label tmplabelif20_2', 'command': 'label', 'args_str': 'tmplabelif20_2', 'args': ['tmplabelif20_2'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'label tmplabelif20_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif20_2']], 'args_eval': [['o', 'tmplabelif20_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif20_3', 'command': 'gotoif', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 145, 'strings': [[False, 'gotoif tmplabelif20_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif20_3']], 'args_eval': [['o', 'tmplabelif20_3']]}, {'str': "println ('pit: File name is required')", 'command': 'println', 'args_str': "('pit: File name is required')", 'args': ["('pit:", 'File', 'name', 'is', "required')"], 'file_path': '@pit', 'line_number': 109, 'strings': [[False, 'println ('], [True, "'pit: File name is required'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'pit: File name is required'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'pit: File name is required'"], ['l', ')']]}, {'str': 'exit (1)', 'command': 'exit', 'args_str': '(1)', 'args': ['(1)'], 'file_path': '@pit', 'line_number': 110, 'strings': [[False, 'exit (1)']], 'eval': [['o', 'exit'], ['l', '('], ['o', '1'], ['l', ')']], 'args_eval': [['l', '('], ['o', '1'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 111, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif20_3', 'command': 'label', 'args_str': 'tmplabelif20_3', 'args': ['tmplabelif20_3'], 'file_path': '<system>', 'line_number': 152, 'strings': [[False, 'label tmplabelif20_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif20_3']], 'args_eval': [['o', 'tmplabelif20_3']]}, {'str': 'label tmplabelif20_end', 'command': 'label', 'args_str': 'tmplabelif20_end', 'args': ['tmplabelif20_end'], 'file_path': '<system>', 'line_number': 152, 'strings': [[False, 'label tmplabelif20_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif20_end']], 'args_eval': [['o', 'tmplabelif20_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@pit', 'line_number': 112, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif19_2', 'command': 'label', 'args_str': 'tmplabelif19_2', 'args': ['tmplabelif19_2'], 'file_path': '<system>', 'line_number': 155, 'strings': [[False, 'label tmplabelif19_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif19_2']], 'args_eval': [['o', 'tmplabelif19_2']]}, {'str': 'label tmplabelif19_end', 'command': 'label', 'args_str': 'tmplabelif19_end', 'args': ['tmplabelif19_end'], 'file_path': '<system>', 'line_number': 155, 'strings': [[False, 'label tmplabelif19_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif19_end']], 'args_eval': [['o', 'tmplabelif19_end']]}]
modules["random"] = [{'str': 'namespace random', 'command': 'namespace', 'args_str': 'random', 'args': ['random'], 'file_path': '@random', 'line_number': 23, 'strings': [[False, 'namespace random']], 'eval': [['o', 'namespace'], ['o', 'random']], 'args_eval': [['o', 'random']]}, {'str': '@doc """    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'command': '@doc', 'args_str': '"""    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    """', 'args': ['"""', 'Generates', 'a', 'random', 'number', 'between', 'x', 'and', 'y.\\n', 'First', 'and', 'second', 'arguments', 'are', 'x', 'and', 'y', 'as', 'number.', '"""'], 'file_path': '@random', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Generates a random number between x and y.\\n    First and second arguments are x and y as number.    "'], ['s', '""']]}, {'str': 'func int::randint(int $a, int $b)', 'command': 'func', 'args_str': 'int::randint(int $a, int $b)', 'args': ['int::randint(int', '$a,', 'int', '$b)'], 'file_path': '@random', 'line_number': 25, 'strings': [[False, 'func int::randint(int $a, int $b)']], 'eval': [['o', 'func'], ['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'randint'], ['l', '('], ['o', 'int'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'int'], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'randint'], ['l', '('], ['o', 'int'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'int'], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': "return py_load_module('random')->randint($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randint($a, $b)", 'args': ["py_load_module('random')->randint($a,", '$b)'], 'file_path': '@random', 'line_number': 26, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->randint($a, $b)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'randint'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'randint'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 27, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Initializes Random number generator.\\n    Gets seed as integer.    """', 'command': '@doc', 'args_str': '"""    Initializes Random number generator.\\n    Gets seed as integer.    """', 'args': ['"""', 'Initializes', 'Random', 'number', 'generator.\\n', 'Gets', 'seed', 'as', 'integer.', '"""'], 'file_path': '@random', 'line_number': 28, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Initializes Random number generator.\\n    Gets seed as integer.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Initializes Random number generator.\\n    Gets seed as integer.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Initializes Random number generator.\\n    Gets seed as integer.    "'], ['s', '""']]}, {'str': 'func seed($a)', 'command': 'func', 'args_str': 'seed($a)', 'args': ['seed($a)'], 'file_path': '@random', 'line_number': 29, 'strings': [[False, 'func seed($a)']], 'eval': [['o', 'func'], ['o', 'seed'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']], 'args_eval': [['o', 'seed'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']]}, {'str': "py_load_module ('random')->seed($a)", 'command': 'py_load_module', 'args_str': "('random')->seed($a)", 'args': ["('random')->seed($a)"], 'file_path': '@random', 'line_number': 30, 'strings': [[False, 'py_load_module ('], [True, "'random'"], [False, ')->seed($a)']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'seed'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'seed'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 31, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Returns the current internal state of the random number generator.    """', 'command': '@doc', 'args_str': '"""    Returns the current internal state of the random number generator.    """', 'args': ['"""', 'Returns', 'the', 'current', 'internal', 'state', 'of', 'the', 'random', 'number', 'generator.', '"""'], 'file_path': '@random', 'line_number': 32, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns the current internal state of the random number generator.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns the current internal state of the random number generator.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns the current internal state of the random number generator.    "'], ['s', '""']]}, {'str': 'func getstate()', 'command': 'func', 'args_str': 'getstate()', 'args': ['getstate()'], 'file_path': '@random', 'line_number': 33, 'strings': [[False, 'func getstate()']], 'eval': [['o', 'func'], ['o', 'getstate'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'getstate'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('random')->getstate()", 'command': 'return', 'args_str': "py_load_module('random')->getstate()", 'args': ["py_load_module('random')->getstate()"], 'file_path': '@random', 'line_number': 34, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->getstate()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'getstate'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'getstate'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 35, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func setstate($state)', 'command': 'func', 'args_str': 'setstate($state)', 'args': ['setstate($state)'], 'file_path': '@random', 'line_number': 36, 'strings': [[False, 'func setstate($state)']], 'eval': [['o', 'func'], ['o', 'setstate'], ['l', '('], ['v', 'state', 'self.get_var("state")'], ['l', ')']], 'args_eval': [['o', 'setstate'], ['l', '('], ['v', 'state', 'self.get_var("state")'], ['l', ')']]}, {'str': "py_load_module ('random')->setstate($state)", 'command': 'py_load_module', 'args_str': "('random')->setstate($state)", 'args': ["('random')->setstate($state)"], 'file_path': '@random', 'line_number': 37, 'strings': [[False, 'py_load_module ('], [True, "'random'"], [False, ')->setstate($state)']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'setstate'], ['l', '('], ['v', 'state', 'self.get_var("state")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'setstate'], ['l', '('], ['v', 'state', 'self.get_var("state")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 38, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func getrandbits($a)', 'command': 'func', 'args_str': 'getrandbits($a)', 'args': ['getrandbits($a)'], 'file_path': '@random', 'line_number': 39, 'strings': [[False, 'func getrandbits($a)']], 'eval': [['o', 'func'], ['o', 'getrandbits'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']], 'args_eval': [['o', 'getrandbits'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']]}, {'str': "return py_load_module('random')->getrandbits($a)", 'command': 'return', 'args_str': "py_load_module('random')->getrandbits($a)", 'args': ["py_load_module('random')->getrandbits($a)"], 'file_path': '@random', 'line_number': 40, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->getrandbits($a)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'getrandbits'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'getrandbits'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 41, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func randrange($a, $b)', 'command': 'func', 'args_str': 'randrange($a, $b)', 'args': ['randrange($a,', '$b)'], 'file_path': '@random', 'line_number': 42, 'strings': [[False, 'func randrange($a, $b)']], 'eval': [['o', 'func'], ['o', 'randrange'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'randrange'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': "return py_load_module('random')->randrange($a, $b)", 'command': 'return', 'args_str': "py_load_module('random')->randrange($a, $b)", 'args': ["py_load_module('random')->randrange($a,", '$b)'], 'file_path': '@random', 'line_number': 43, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->randrange($a, $b)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'randrange'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'randrange'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 44, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Selects a random item in a list"', 'command': '@doc', 'args_str': '"Selects a random item in a list"', 'args': ['"Selects', 'a', 'random', 'item', 'in', 'a', 'list"'], 'file_path': '@random', 'line_number': 45, 'strings': [[False, '@doc '], [True, '"Selects a random item in a list"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Selects a random item in a list"']], 'args_eval': [['s', '"Selects a random item in a list"']]}, {'str': 'func choice(list $list)', 'command': 'func', 'args_str': 'choice(list $list)', 'args': ['choice(list', '$list)'], 'file_path': '@random', 'line_number': 46, 'strings': [[False, 'func choice(list $list)']], 'eval': [['o', 'func'], ['o', 'choice'], ['l', '('], ['o', 'list'], ['v', 'list', 'self.get_var("list")'], ['l', ')']], 'args_eval': [['o', 'choice'], ['l', '('], ['o', 'list'], ['v', 'list', 'self.get_var("list")'], ['l', ')']]}, {'str': '$index = randint(0, len($list)-1)', 'command': '$index', 'args_str': '= randint(0, len($list)-1)', 'args': ['=', 'randint(0,', 'len($list)-1)'], 'file_path': '@random', 'line_number': 47, 'strings': [[False, '$index = randint(0, len($list)-1)']], 'eval': [['v', 'index', 'self.get_var("index")'], ['l', '='], ['o', 'randint'], ['l', '('], ['o', '0'], ['l', ','], ['o', 'len'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', ')'], ['l', '-'], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'randint'], ['l', '('], ['o', '0'], ['l', ','], ['o', 'len'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', ')'], ['l', '-'], ['o', '1'], ['l', ')']]}, {'str': 'return $list[$index]', 'command': 'return', 'args_str': '$list[$index]', 'args': ['$list[$index]'], 'file_path': '@random', 'line_number': 48, 'strings': [[False, 'return $list[$index]']], 'eval': [['o', 'return'], ['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'index', 'self.get_var("index")'], ['l', ']']], 'args_eval': [['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'index', 'self.get_var("index")'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 49, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Generates a random float less that 1.    """', 'command': '@doc', 'args_str': '"""    Generates a random float less that 1.    """', 'args': ['"""', 'Generates', 'a', 'random', 'float', 'less', 'that', '1.', '"""'], 'file_path': '@random', 'line_number': 50, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Generates a random float less that 1.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Generates a random float less that 1.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Generates a random float less that 1.    "'], ['s', '""']]}, {'str': 'func random()', 'command': 'func', 'args_str': 'random()', 'args': ['random()'], 'file_path': '@random', 'line_number': 51, 'strings': [[False, 'func random()']], 'eval': [['o', 'func'], ['o', 'random'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'random'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('random')->random()", 'command': 'return', 'args_str': "py_load_module('random')->random()", 'args': ["py_load_module('random')->random()"], 'file_path': '@random', 'line_number': 52, 'strings': [[False, 'return py_load_module('], [True, "'random'"], [False, ')->random()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'random'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'random'"], ['l', ')'], ['l', '.'], ['n', 'random'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 53, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@random', 'line_number': 54, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["serve"] = [{'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@serve', 'line_number': 22, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif21_2', 'command': 'gotoif', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'gotoif tmplabelif21_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif21_2']], 'args_eval': [['o', 'tmplabelif21_2']]}, {'str': 'import_run "@web.server"', 'command': 'import_run', 'args_str': '"@web.server"', 'args': ['"@web.server"'], 'file_path': '@serve', 'line_number': 23, 'strings': [[False, 'import_run '], [True, '"@web.server"'], [False, '']], 'eval': [['o', 'import_run'], ['s', '"@web.server"']], 'args_eval': [['s', '"@web.server"']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@serve', 'line_number': 24, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif21_2', 'command': 'label', 'args_str': 'tmplabelif21_2', 'args': ['tmplabelif21_2'], 'file_path': '<system>', 'line_number': 5, 'strings': [[False, 'label tmplabelif21_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif21_2']], 'args_eval': [['o', 'tmplabelif21_2']]}, {'str': 'label tmplabelif21_end', 'command': 'label', 'args_str': 'tmplabelif21_end', 'args': ['tmplabelif21_end'], 'file_path': '<system>', 'line_number': 5, 'strings': [[False, 'label tmplabelif21_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif21_end']], 'args_eval': [['o', 'tmplabelif21_end']]}]
modules["shell"] = [{'str': 'import_once "@sys"', 'command': 'import_once', 'args_str': '"@sys"', 'args': ['"@sys"'], 'file_path': '@shell', 'line_number': 22, 'strings': [[False, 'import_once '], [True, '"@sys"'], [False, '']], 'eval': [['o', 'import_once'], ['s', '"@sys"']], 'args_eval': [['s', '"@sys"']]}, {'str': 'import_once "@os"', 'command': 'import_once', 'args_str': '"@os"', 'args': ['"@os"'], 'file_path': '@shell', 'line_number': 23, 'strings': [[False, 'import_once '], [True, '"@os"'], [False, '']], 'eval': [['o', 'import_once'], ['s', '"@os"']], 'args_eval': [['s', '"@os"']]}, {'str': 'func clear()', 'command': 'func', 'args_str': 'clear()', 'args': ['clear()'], 'file_path': '@shell', 'line_number': 24, 'strings': [[False, 'func clear()']], 'eval': [['o', 'func'], ['o', 'clear'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'clear'], ['l', '('], ['l', ')']]}, {'str': "if $os.osname == 'nt'", 'command': 'if', 'args_str': "$os.osname == 'nt'", 'args': ['$os.osname', '==', "'nt'"], 'file_path': '@shell', 'line_number': 25, 'strings': [[False, 'if $os.osname == '], [True, "'nt'"], [False, '']], 'eval': [['o', 'if'], ['v', 'os.osname', 'self.get_var("os.osname")'], ['l', '='], ['l', '='], ['s', "'nt'"]], 'args_eval': [['v', 'os.osname', 'self.get_var("os.osname")'], ['l', '='], ['l', '='], ['s', "'nt'"]]}, {'str': "mem not ($os.osname == 'nt')", 'command': 'mem', 'args_str': "not ($os.osname == 'nt')", 'args': ['not', '($os.osname', '==', "'nt')"], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'mem not ($os.osname == '], [True, "'nt'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'os.osname', 'self.get_var("os.osname")'], ['l', '='], ['l', '='], ['s', "'nt'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'os.osname', 'self.get_var("os.osname")'], ['l', '='], ['l', '='], ['s', "'nt'"], ['l', ')']]}, {'str': 'gotoif tmplabelif22_2', 'command': 'gotoif', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'gotoif tmplabelif22_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif22_2']], 'args_eval': [['o', 'tmplabelif22_2']]}, {'str': "system ('cls')", 'command': 'system', 'args_str': "('cls')", 'args': ["('cls')"], 'file_path': '@shell', 'line_number': 26, 'strings': [[False, 'system ('], [True, "'cls'"], [False, ')']], 'eval': [['o', 'system'], ['l', '('], ['s', "'cls'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'cls'"], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 27, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif22_end', 'command': 'goto', 'args_str': 'tmplabelif22_end', 'args': ['tmplabelif22_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'goto tmplabelif22_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif22_end']], 'args_eval': [['o', 'tmplabelif22_end']]}, {'str': 'label tmplabelif22_2', 'command': 'label', 'args_str': 'tmplabelif22_2', 'args': ['tmplabelif22_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif22_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif22_2']], 'args_eval': [['o', 'tmplabelif22_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif22_3', 'command': 'gotoif', 'args_str': 'tmplabelif22_3', 'args': ['tmplabelif22_3'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'gotoif tmplabelif22_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif22_3']], 'args_eval': [['o', 'tmplabelif22_3']]}, {'str': "system ('clear')", 'command': 'system', 'args_str': "('clear')", 'args': ["('clear')"], 'file_path': '@shell', 'line_number': 28, 'strings': [[False, 'system ('], [True, "'clear'"], [False, ')']], 'eval': [['o', 'system'], ['l', '('], ['s', "'clear'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'clear'"], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 29, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif22_3', 'command': 'label', 'args_str': 'tmplabelif22_3', 'args': ['tmplabelif22_3'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif22_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif22_3']], 'args_eval': [['o', 'tmplabelif22_3']]}, {'str': 'label tmplabelif22_end', 'command': 'label', 'args_str': 'tmplabelif22_end', 'args': ['tmplabelif22_end'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif22_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif22_end']], 'args_eval': [['o', 'tmplabelif22_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 30, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@shell', 'line_number': 31, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif23_2', 'command': 'gotoif', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif23_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif23_2']], 'args_eval': [['o', 'tmplabelif23_2']]}, {'str': "define ('DEBUG', true)", 'command': 'define', 'args_str': "('DEBUG', true)", 'args': ["('DEBUG',", 'true)'], 'file_path': '@shell', 'line_number': 32, 'strings': [[False, 'define ('], [True, "'DEBUG'"], [False, ', true)']], 'eval': [['o', 'define'], ['l', '('], ['s', "'DEBUG'"], ['l', ','], ['o', 'true'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'DEBUG'"], ['l', ','], ['o', 'true'], ['l', ')']]}, {'str': "define ('DEBUG_HEADER_TITLE', 'Welcome to the Pashmak [' + $sys.pashmakinfo['version'] + '] Interactive Shell')", 'command': 'define', 'args_str': "('DEBUG_HEADER_TITLE', 'Welcome to the Pashmak [' + $sys.pashmakinfo['version'] + '] Interactive Shell')", 'args': ["('DEBUG_HEADER_TITLE',", "'Welcome", 'to', 'the', 'Pashmak', "['", '+', "$sys.pashmakinfo['version']", '+', "']", 'Interactive', "Shell')"], 'file_path': '@shell', 'line_number': 33, 'strings': [[False, 'define ('], [True, "'DEBUG_HEADER_TITLE'"], [False, ', '], [True, "'Welcome to the Pashmak ['"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "'] Interactive Shell'"], [False, ')']], 'eval': [['o', 'define'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ','], ['s', "'Welcome to the Pashmak ['"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "'] Interactive Shell'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ','], ['s', "'Welcome to the Pashmak ['"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "'] Interactive Shell'"], ['l', ')']]}, {'str': 'debug ()', 'command': 'debug', 'args_str': '()', 'args': ['()'], 'file_path': '@shell', 'line_number': 34, 'strings': [[False, 'debug ()']], 'eval': [['o', 'debug'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@shell', 'line_number': 35, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif23_2', 'command': 'label', 'args_str': 'tmplabelif23_2', 'args': ['tmplabelif23_2'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif23_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif23_2']], 'args_eval': [['o', 'tmplabelif23_2']]}, {'str': 'label tmplabelif23_end', 'command': 'label', 'args_str': 'tmplabelif23_end', 'args': ['tmplabelif23_end'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif23_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif23_end']], 'args_eval': [['o', 'tmplabelif23_end']]}]
modules["stdlib"] = [{'str': '@doc "Runs a python code from string"', 'command': '@doc', 'args_str': '"Runs a python code from string"', 'args': ['"Runs', 'a', 'python', 'code', 'from', 'string"'], 'file_path': '@stdlib', 'line_number': 22, 'strings': [[False, '@doc '], [True, '"Runs a python code from string"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Runs a python code from string"']], 'args_eval': [['s', '"Runs a python code from string"']]}, {'str': 'func python()', 'command': 'func', 'args_str': 'python()', 'args': ['python()'], 'file_path': '@stdlib', 'line_number': 23, 'strings': [[False, 'func python()']], 'eval': [['o', 'func'], ['o', 'python'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['l', ')']]}, {'str': 'rmem exec(^)', 'command': 'rmem', 'args_str': 'exec(^)', 'args': ['exec(^)'], 'file_path': '@stdlib', 'line_number': 24, 'strings': [[False, 'rmem exec(^)']], 'eval': [['o', 'rmem'], ['o', 'exec'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']], 'args_eval': [['o', 'exec'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Imports a script or a module.\\nGets script/module name as string."""', 'command': '@doc', 'args_str': '"""Imports a script or a module.\\nGets script/module name as string."""', 'args': ['"""Imports', 'a', 'script', 'or', 'a', 'module.\\nGets', 'script/module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 26, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Imports a script or a module.\\nGets script/module name as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Imports a script or a module.\\nGets script/module name as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Imports a script or a module.\\nGets script/module name as string."'], ['s', '""']]}, {'str': 'func import()', 'command': 'func', 'args_str': 'import()', 'args': ['import()'], 'file_path': '@stdlib', 'line_number': 27, 'strings': [[False, 'func import()']], 'eval': [['o', 'func'], ['o', 'import'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'import'], ['l', '('], ['l', ')']]}, {'str': 'mem self.import_script(^)', 'command': 'mem', 'args_str': 'self.import_script(^)', 'args': ['self.import_script(^)'], 'file_path': '@stdlib', 'line_number': 28, 'strings': [[False, 'mem self.import_script(^)']], 'eval': [['o', 'mem'], ['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']], 'args_eval': [['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 29, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'command': '@doc', 'args_str': '"""Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."""', 'args': ['"""Is', 'like', '`import()`,', 'but', 'checks', 'if', 'module', 'or', 'script', 'already', 'is', 'imported,', 'do', 'not', 'imports', 'again.Gets', 'module', 'or', 'script', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 30, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Is like `import()`, but checks if module or script already is imported, do not imports again.Gets module or script name as string."'], ['s', '""']]}, {'str': 'func import_once()', 'command': 'func', 'args_str': 'import_once()', 'args': ['import_once()'], 'file_path': '@stdlib', 'line_number': 31, 'strings': [[False, 'func import_once()']], 'eval': [['o', 'func'], ['o', 'import_once'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'import_once'], ['l', '('], ['l', ')']]}, {'str': 'mem self.import_script(^, True)', 'command': 'mem', 'args_str': 'self.import_script(^, True)', 'args': ['self.import_script(^,', 'True)'], 'file_path': '@stdlib', 'line_number': 32, 'strings': [[False, 'mem self.import_script(^, True)']], 'eval': [['o', 'mem'], ['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'True'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 33, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'command': '@doc', 'args_str': '"""Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."""', 'args': ['"""Is', 'like', '`import()`,', 'But', 'sets', '`$__ismain__`', 'to', '`True`', 'for', 'module(run', 'mode)."""'], 'file_path': '@stdlib', 'line_number': 34, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Is like `import()`, But sets `$__ismain__` to `True` for module(run mode)."'], ['s', '""']]}, {'str': 'func import_run()', 'command': 'func', 'args_str': 'import_run()', 'args': ['import_run()'], 'file_path': '@stdlib', 'line_number': 35, 'strings': [[False, 'func import_run()']], 'eval': [['o', 'func'], ['o', 'import_run'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'import_run'], ['l', '('], ['l', ')']]}, {'str': 'mem self.import_script(^, False, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, False, ismain_default=True)', 'args': ['self.import_script(^,', 'False,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 36, 'strings': [[False, 'mem self.import_script(^, False, ismain_default=True)']], 'eval': [['o', 'mem'], ['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'False'], ['l', ','], ['o', 'ismain_default'], ['l', '='], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'False'], ['l', ','], ['o', 'ismain_default'], ['l', '='], ['o', 'True'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Is like `import_run` but checks script is already imported like `import_once`."""', 'command': '@doc', 'args_str': '"""Is like `import_run` but checks script is already imported like `import_once`."""', 'args': ['"""Is', 'like', '`import_run`', 'but', 'checks', 'script', 'is', 'already', 'imported', 'like', '`import_once`."""'], 'file_path': '@stdlib', 'line_number': 38, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is like `import_run` but checks script is already imported like `import_once`."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Is like `import_run` but checks script is already imported like `import_once`."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Is like `import_run` but checks script is already imported like `import_once`."'], ['s', '""']]}, {'str': 'func import_run_once()', 'command': 'func', 'args_str': 'import_run_once()', 'args': ['import_run_once()'], 'file_path': '@stdlib', 'line_number': 39, 'strings': [[False, 'func import_run_once()']], 'eval': [['o', 'func'], ['o', 'import_run_once'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'import_run_once'], ['l', '('], ['l', ')']]}, {'str': 'mem self.import_script(^, True, ismain_default=True)', 'command': 'mem', 'args_str': 'self.import_script(^, True, ismain_default=True)', 'args': ['self.import_script(^,', 'True,', 'ismain_default=True)'], 'file_path': '@stdlib', 'line_number': 40, 'strings': [[False, 'mem self.import_script(^, True, ismain_default=True)']], 'eval': [['o', 'mem'], ['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'True'], ['l', ','], ['o', 'ismain_default'], ['l', '='], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'self.import_script'], ['l', '('], ['o', 'self.get_mem()'], ['l', ','], ['o', 'True'], ['l', ','], ['o', 'ismain_default'], ['l', '='], ['o', 'True'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 41, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Gets a Pashmak code as string and runs that."""', 'command': '@doc', 'args_str': '"""Gets a Pashmak code as string and runs that."""', 'args': ['"""Gets', 'a', 'Pashmak', 'code', 'as', 'string', 'and', 'runs', 'that."""'], 'file_path': '@stdlib', 'line_number': 42, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Gets a Pashmak code as string and runs that."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Gets a Pashmak code as string and runs that."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Gets a Pashmak code as string and runs that."'], ['s', '""']]}, {'str': 'func eval()', 'command': 'func', 'args_str': 'eval()', 'args': ['eval()'], 'file_path': '@stdlib', 'line_number': 43, 'strings': [[False, 'func eval()']], 'eval': [['o', 'func'], ['o', 'eval'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'eval'], ['l', '('], ['l', ')']]}, {'str': 'mem self.pashmak_eval(^)', 'command': 'mem', 'args_str': 'self.pashmak_eval(^)', 'args': ['self.pashmak_eval(^)'], 'file_path': '@stdlib', 'line_number': 44, 'strings': [[False, 'mem self.pashmak_eval(^)']], 'eval': [['o', 'mem'], ['o', 'self.pashmak_eval'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']], 'args_eval': [['o', 'self.pashmak_eval'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 45, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Asserts a value, if it\'s not True, raises AssertError."""', 'command': '@doc', 'args_str': '"""Asserts a value, if it\'s not True, raises AssertError."""', 'args': ['"""Asserts', 'a', 'value,', 'if', "it's", 'not', 'True,', 'raises', 'AssertError."""'], 'file_path': '@stdlib', 'line_number': 46, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Asserts a value, if it\'s not True, raises AssertError."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Asserts a value, if it\'s not True, raises AssertError."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Asserts a value, if it\'s not True, raises AssertError."'], ['s', '""']]}, {'str': 'func assert($value)', 'command': 'func', 'args_str': 'assert($value)', 'args': ['assert($value)'], 'file_path': '@stdlib', 'line_number': 47, 'strings': [[False, 'func assert($value)']], 'eval': [['o', 'func'], ['o', 'assert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'assert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'if not $value', 'command': 'if', 'args_str': 'not $value', 'args': ['not', '$value'], 'file_path': '@stdlib', 'line_number': 48, 'strings': [[False, 'if not $value']], 'eval': [['o', 'if'], ['o', 'not'], ['v', 'value', 'self.get_var("value")']], 'args_eval': [['o', 'not'], ['v', 'value', 'self.get_var("value")']]}, {'str': 'mem not (not $value)', 'command': 'mem', 'args_str': 'not (not $value)', 'args': ['not', '(not', '$value)'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'mem not (not $value)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'gotoif tmplabelif24_2', 'command': 'gotoif', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'gotoif tmplabelif24_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif24_2']], 'args_eval': [['o', 'tmplabelif24_2']]}, {'str': "raise (Error('AssertError', 'asserting that false is true'))", 'command': 'raise', 'args_str': "(Error('AssertError', 'asserting that false is true'))", 'args': ["(Error('AssertError',", "'asserting", 'that', 'false', 'is', "true'))"], 'file_path': '@stdlib', 'line_number': 49, 'strings': [[False, 'raise (Error('], [True, "'AssertError'"], [False, ', '], [True, "'asserting that false is true'"], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'AssertError'"], ['l', ','], ['s', "'asserting that false is true'"], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'AssertError'"], ['l', ','], ['s', "'asserting that false is true'"], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 50, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif24_2', 'command': 'label', 'args_str': 'tmplabelif24_2', 'args': ['tmplabelif24_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif24_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif24_2']], 'args_eval': [['o', 'tmplabelif24_2']]}, {'str': 'label tmplabelif24_end', 'command': 'label', 'args_str': 'tmplabelif24_end', 'args': ['tmplabelif24_end'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'label tmplabelif24_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif24_end']], 'args_eval': [['o', 'tmplabelif24_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 51, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Sets a global variable.\\nGets variable name as first argument and value as second."""', 'command': '@doc', 'args_str': '"""Sets a global variable.\\nGets variable name as first argument and value as second."""', 'args': ['"""Sets', 'a', 'global', 'variable.\\nGets', 'variable', 'name', 'as', 'first', 'argument', 'and', 'value', 'as', 'second."""'], 'file_path': '@stdlib', 'line_number': 52, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a global variable.\\nGets variable name as first argument and value as second."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Sets a global variable.\\nGets variable name as first argument and value as second."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Sets a global variable.\\nGets variable name as first argument and value as second."'], ['s', '""']]}, {'str': 'func gset($name, $value=null)', 'command': 'func', 'args_str': 'gset($name, $value=null)', 'args': ['gset($name,', '$value=null)'], 'file_path': '@stdlib', 'line_number': 53, 'strings': [[False, 'func gset($name, $value=null)']], 'eval': [['o', 'func'], ['o', 'gset'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'gset'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'python (\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'command': 'python', 'args_str': '(\'self.frames[0]["vars"][\' + repr($name) + \'] = self.get_var("value")\')', 'args': ['(\'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']", '=', 'self.get_var("value")\')'], 'file_path': '@stdlib', 'line_number': 54, 'strings': [[False, 'python ('], [True, '\'self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, '\'] = self.get_var("value")\''], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '\'self.frames[0]["vars"][\''], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', '\'] = self.get_var("value")\''], ['l', ')']], 'args_eval': [['l', '('], ['s', '\'self.frames[0]["vars"][\''], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', '\'] = self.get_var("value")\''], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 55, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Returns a global variable. Gets variable name as string."""', 'command': '@doc', 'args_str': '"""Returns a global variable. Gets variable name as string."""', 'args': ['"""Returns', 'a', 'global', 'variable.', 'Gets', 'variable', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 56, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns a global variable. Gets variable name as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Returns a global variable. Gets variable name as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Returns a global variable. Gets variable name as string."'], ['s', '""']]}, {'str': 'func gget($name)', 'command': 'func', 'args_str': 'gget($name)', 'args': ['gget($name)'], 'file_path': '@stdlib', 'line_number': 57, 'strings': [[False, 'func gget($name)']], 'eval': [['o', 'func'], ['o', 'gget'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'gget'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'python (\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'command': 'python', 'args_str': '(\'self.mem = self.frames[0]["vars"][\' + repr($name) + \']\')', 'args': ["('self.mem", '=', 'self.frames[0]["vars"][\'', '+', 'repr($name)', '+', "']')"], 'file_path': '@stdlib', 'line_number': 58, 'strings': [[False, 'python ('], [True, '\'self.mem = self.frames[0]["vars"][\''], [False, ' + repr($name) + '], [True, "']'"], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '\'self.mem = self.frames[0]["vars"][\''], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', "']'"], ['l', ')']], 'args_eval': [['l', '('], ['s', '\'self.mem = self.frames[0]["vars"][\''], ['l', '+'], ['o', 'repr'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', "']'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 59, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Gets a object/variable and returns type of that."""', 'command': '@doc', 'args_str': '"""Gets a object/variable and returns type of that."""', 'args': ['"""Gets', 'a', 'object/variable', 'and', 'returns', 'type', 'of', 'that."""'], 'file_path': '@stdlib', 'line_number': 60, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Gets a object/variable and returns type of that."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Gets a object/variable and returns type of that."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Gets a object/variable and returns type of that."'], ['s', '""']]}, {'str': 'func typeof(*$obj)', 'command': 'func', 'args_str': 'typeof(*$obj)', 'args': ['typeof(*$obj)'], 'file_path': '@stdlib', 'line_number': 61, 'strings': [[False, 'func typeof(*$obj)']], 'eval': [['o', 'func'], ['o', 'typeof'], ['l', '('], ['l', '*'], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']], 'args_eval': [['o', 'typeof'], ['l', '('], ['l', '*'], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']]}, {'str': '$type = python("self.mem = type(self.get_var(\'obj\'))")', 'command': '$type', 'args_str': '= python("self.mem = type(self.get_var(\'obj\'))")', 'args': ['=', 'python("self.mem', '=', 'type(self.get_var(\'obj\'))")'], 'file_path': '@stdlib', 'line_number': 62, 'strings': [[False, '$type = python('], [True, '"self.mem = type(self.get_var(\'obj\'))"'], [False, ')']], 'eval': [['v', 'type', 'self.get_var("type")'], ['l', '='], ['o', 'python'], ['l', '('], ['s', '"self.mem = type(self.get_var(\'obj\'))"'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'python'], ['l', '('], ['s', '"self.mem = type(self.get_var(\'obj\'))"'], ['l', ')']]}, {'str': 'if $type is ClassObject', 'command': 'if', 'args_str': '$type is ClassObject', 'args': ['$type', 'is', 'ClassObject'], 'file_path': '@stdlib', 'line_number': 63, 'strings': [[False, 'if $type is ClassObject']], 'eval': [['o', 'if'], ['v', 'type', 'self.get_var("type")'], ['o', 'is'], ['o', 'ClassObject']], 'args_eval': [['v', 'type', 'self.get_var("type")'], ['o', 'is'], ['o', 'ClassObject']]}, {'str': 'mem not ($type is ClassObject)', 'command': 'mem', 'args_str': 'not ($type is ClassObject)', 'args': ['not', '($type', 'is', 'ClassObject)'], 'file_path': '<system>', 'line_number': 45, 'strings': [[False, 'mem not ($type is ClassObject)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'type', 'self.get_var("type")'], ['o', 'is'], ['o', 'ClassObject'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'type', 'self.get_var("type")'], ['o', 'is'], ['o', 'ClassObject'], ['l', ')']]}, {'str': 'gotoif tmplabelif25_2', 'command': 'gotoif', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 45, 'strings': [[False, 'gotoif tmplabelif25_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif25_2']], 'args_eval': [['o', 'tmplabelif25_2']]}, {'str': '$type = $obj->__theclass__->__name__', 'command': '$type', 'args_str': '= $obj->__theclass__->__name__', 'args': ['=', '$obj->__theclass__->__name__'], 'file_path': '@stdlib', 'line_number': 64, 'strings': [[False, '$type = $obj->__theclass__->__name__']], 'eval': [['v', 'type', 'self.get_var("type")'], ['l', '='], ['v', 'obj', 'self.get_var("obj")'], ['l', '.'], ['n', '__theclass__'], ['l', '.'], ['n', '__name__']], 'args_eval': [['l', '='], ['v', 'obj', 'self.get_var("obj")'], ['l', '.'], ['n', '__theclass__'], ['l', '.'], ['n', '__name__']]}, {'str': '$type = python(\'self.mem = self.classes[self.get_var("type")]\')', 'command': '$type', 'args_str': '= python(\'self.mem = self.classes[self.get_var("type")]\')', 'args': ['=', "python('self.mem", '=', 'self.classes[self.get_var("type")]\')'], 'file_path': '@stdlib', 'line_number': 65, 'strings': [[False, '$type = python('], [True, '\'self.mem = self.classes[self.get_var("type")]\''], [False, ')']], 'eval': [['v', 'type', 'self.get_var("type")'], ['l', '='], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.classes[self.get_var("type")]\''], ['l', ')']], 'args_eval': [['l', '='], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.classes[self.get_var("type")]\''], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 66, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif25_2', 'command': 'label', 'args_str': 'tmplabelif25_2', 'args': ['tmplabelif25_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'label tmplabelif25_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif25_2']], 'args_eval': [['o', 'tmplabelif25_2']]}, {'str': 'label tmplabelif25_end', 'command': 'label', 'args_str': 'tmplabelif25_end', 'args': ['tmplabelif25_end'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'label tmplabelif25_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif25_end']], 'args_eval': [['o', 'tmplabelif25_end']]}, {'str': 'return $type', 'command': 'return', 'args_str': '$type', 'args': ['$type'], 'file_path': '@stdlib', 'line_number': 67, 'strings': [[False, 'return $type']], 'eval': [['o', 'return'], ['v', 'type', 'self.get_var("type")']], 'args_eval': [['v', 'type', 'self.get_var("type")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 68, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'command': '@doc', 'args_str': '"""Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."""', 'args': ['"""Runs', 'a', 'system', 'shell', 'command', 'and', 'returns', 'exit', 'code.\\nGets', 'command', 'as', 'string', 'and', 'returns', 'exit', 'code', 'as', 'int."""'], 'file_path': '@stdlib', 'line_number': 69, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Runs a system shell command and returns exit code.\\nGets command as string and returns exit code as int."'], ['s', '""']]}, {'str': 'func int::system(string $cmd)', 'command': 'func', 'args_str': 'int::system(string $cmd)', 'args': ['int::system(string', '$cmd)'], 'file_path': '@stdlib', 'line_number': 70, 'strings': [[False, 'func int::system(string $cmd)']], 'eval': [['o', 'func'], ['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'system'], ['l', '('], ['o', 'string'], ['v', 'cmd', 'self.get_var("cmd")'], ['l', ')']], 'args_eval': [['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'system'], ['l', '('], ['o', 'string'], ['v', 'cmd', 'self.get_var("cmd")'], ['l', ')']]}, {'str': "return py_load_module('os')->system($cmd)", 'command': 'return', 'args_str': "py_load_module('os')->system($cmd)", 'args': ["py_load_module('os')->system($cmd)"], 'file_path': '@stdlib', 'line_number': 71, 'strings': [[False, 'return py_load_module('], [True, "'os'"], [False, ')->system($cmd)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'system'], ['l', '('], ['v', 'cmd', 'self.get_var("cmd")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'system'], ['l', '('], ['v', 'cmd', 'self.get_var("cmd")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 72, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'command': '@doc', 'args_str': '"""Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."""', 'args': ['"""Loads', 'a', 'python', 'file', 'script', 'as', 'a', 'python', 'module', 'object.\\nGets', 'script', 'file', 'path', 'as', 'string', 'and', 'returns', 'loaded', 'object."""'], 'file_path': '@stdlib', 'line_number': 73, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Loads a python file script as a python module object.\\nGets script file path as string and returns loaded object."'], ['s', '""']]}, {'str': 'func py_load_file(string $path)', 'command': 'func', 'args_str': 'py_load_file(string $path)', 'args': ['py_load_file(string', '$path)'], 'file_path': '@stdlib', 'line_number': 74, 'strings': [[False, 'func py_load_file(string $path)']], 'eval': [['o', 'func'], ['o', 'py_load_file'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'py_load_file'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'python ("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'command': 'python', 'args_str': '("import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m")', 'args': ['("import', 'importlib.util;', 'spec', '=', "importlib.util.spec_from_file_location('pyloadedfile',", "self.get_var('path'));", 'm', '=', 'importlib.util.module_from_spec(spec);', 'spec.loader.exec_module(m);', 'self.mem', '=', 'm")'], 'file_path': '@stdlib', 'line_number': 75, 'strings': [[False, 'python ('], [True, '"import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"import importlib.util; spec = importlib.util.spec_from_file_location(\'pyloadedfile\', self.get_var(\'path\')); m = importlib.util.module_from_spec(spec); spec.loader.exec_module(m); self.mem = m"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 76, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Loads a Python standard module. Gets module name as string."""', 'command': '@doc', 'args_str': '"""Loads a Python standard module. Gets module name as string."""', 'args': ['"""Loads', 'a', 'Python', 'standard', 'module.', 'Gets', 'module', 'name', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 77, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Loads a Python standard module. Gets module name as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Loads a Python standard module. Gets module name as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Loads a Python standard module. Gets module name as string."'], ['s', '""']]}, {'str': 'func py_load_module(string $name)', 'command': 'func', 'args_str': 'py_load_module(string $name)', 'args': ['py_load_module(string', '$name)'], 'file_path': '@stdlib', 'line_number': 78, 'strings': [[False, 'func py_load_module(string $name)']], 'eval': [['o', 'func'], ['o', 'py_load_module'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'return python("import " + $name + "; self.mem = " + $name)', 'command': 'return', 'args_str': 'python("import " + $name + "; self.mem = " + $name)', 'args': ['python("import', '"', '+', '$name', '+', '";', 'self.mem', '=', '"', '+', '$name)'], 'file_path': '@stdlib', 'line_number': 79, 'strings': [[False, 'return python('], [True, '"import "'], [False, ' + $name + '], [True, '"; self.mem = "'], [False, ' + $name)']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', '"import "'], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '"; self.mem = "'], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', '"import "'], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '"; self.mem = "'], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 80, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Returns current namespace as string."""', 'command': '@doc', 'args_str': '"""Returns current namespace as string."""', 'args': ['"""Returns', 'current', 'namespace', 'as', 'string."""'], 'file_path': '@stdlib', 'line_number': 81, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns current namespace as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Returns current namespace as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Returns current namespace as string."'], ['s', '""']]}, {'str': 'func string::__namespace__()', 'command': 'func', 'args_str': 'string::__namespace__()', 'args': ['string::__namespace__()'], 'file_path': '@stdlib', 'line_number': 82, 'strings': [[False, 'func string::__namespace__()']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__namespace__'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__namespace__'], ['l', '('], ['l', ')']]}, {'str': 'return python("self.mem = self.current_namespace()")', 'command': 'return', 'args_str': 'python("self.mem = self.current_namespace()")', 'args': ['python("self.mem', '=', 'self.current_namespace()")'], 'file_path': '@stdlib', 'line_number': 83, 'strings': [[False, 'return python('], [True, '"self.mem = self.current_namespace()"'], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', '"self.mem = self.current_namespace()"'], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', '"self.mem = self.current_namespace()"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 84, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'namespace pashmak', 'command': 'namespace', 'args_str': 'pashmak', 'args': ['pashmak'], 'file_path': '@stdlib', 'line_number': 85, 'strings': [[False, 'namespace pashmak']], 'eval': [['o', 'namespace'], ['o', 'pashmak']], 'args_eval': [['o', 'pashmak']]}, {'str': '@doc """    Prints zen of Pashmak.    """', 'command': '@doc', 'args_str': '"""    Prints zen of Pashmak.    """', 'args': ['"""', 'Prints', 'zen', 'of', 'Pashmak.', '"""'], 'file_path': '@stdlib', 'line_number': 86, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Prints zen of Pashmak.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Prints zen of Pashmak.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Prints zen of Pashmak.    "'], ['s', '""']]}, {'str': 'func zen()', 'command': 'func', 'args_str': 'zen()', 'args': ['zen()'], 'file_path': '@stdlib', 'line_number': 87, 'strings': [[False, 'func zen()']], 'eval': [['o', 'func'], ['o', 'zen'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'zen'], ['l', '('], ['l', ')']]}, {'str': 'println (\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'command': 'println', 'args_str': '(\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\')', 'args': ["('Zen", 'of', 'Pashmak\\n\\nThe', 'Zen', 'of', 'Pashmak', 'is', 'a', 'collection', 'of', '"guiding', 'principles"', 'for', 'writing', 'computer', 'programs', 'that', 'influence', 'the', 'design', 'of', 'the', 'Pashmak', 'programming', 'language.', '(Like', 'zen', 'of', 'python).', 'This', 'fucking', 'list', 'is', 'written', 'by', 'Mohammad', 'Esmaeili.\\n\\n', 'Fucking', 'syntax', 'is', 'better', 'than', 'beautiful', 'syntax\\n', 'English', 'is', 'better', 'than', 'Finglish\\n', 'Lossless', 'slow', 'is', 'better', 'than', 'loosing', 'fast\\n', 'CatShit', 'is', 'better', 'than', 'DogShit\\n', 'DogShit', 'is', 'better', 'than', 'BullShit\\n', 'Chaos', 'is', 'better', 'than', 'peace\\n', 'Enthropy', 'is', 'better', 'than', 'order\\n', 'Crazy', 'is', 'better', 'than', 'logic\\n', 'Fun', 'is', 'better', 'than', 'boring\\n', 'Happy', 'is', 'better', 'than', 'sad\\n', 'Pashm', 'is', 'better', 'than', 'Hash\\n', 'While', 'is', 'better', 'than', 'Do-While\\n', 'Space', 'is', 'better', 'than', 'Tab\\n', 'Also', 'tab', 'is', 'better', 'than', 'Space\\n', '->', 'is', 'better', 'than', '.\\n', 'if-else', 'is', 'better', 'than', "switch-case')"], 'file_path': '@stdlib', 'line_number': 88, 'strings': [[False, 'println ('], [True, '\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\''], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', '\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\''], ['l', ')']], 'args_eval': [['l', '('], ['s', '\'Zen of Pashmak\\n\\nThe Zen of Pashmak is a collection of "guiding principles" for writing computer programs that influence the design of the Pashmak programming language. (Like zen of python). This fucking list is written by Mohammad Esmaeili.\\n\\n    Fucking syntax is better than beautiful syntax\\n    English is better than Finglish\\n    Lossless slow is better than loosing fast\\n    CatShit is better than DogShit\\n    DogShit is better than BullShit\\n    Chaos is better than peace\\n    Enthropy is better than order\\n    Crazy is better than logic\\n    Fun is better than boring\\n    Happy is better than sad\\n    Pashm is better than Hash\\n    While is better than Do-While\\n    Space is better than Tab\\n    Also tab is better than Space\\n    -> is better than .\\n    if-else is better than switch-case\''], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 89, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 90, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}, {'str': '@doc """Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'command': '@doc', 'args_str': '"""Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."""', 'args': ['"""Adds', 'a', 'function', 'to', 'shutdown', 'event.\\nShutdown', 'event', 'functions', 'will', 'be', 'run', 'one', 'by', 'one', 'in', 'end', 'of', 'program.\\nGets', 'function', 'object', 'as', 'argument."""'], 'file_path': '@stdlib', 'line_number': 91, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Adds a function to shutdown event.\\nShutdown event functions will be run one by one in end of program.\\nGets function object as argument."'], ['s', '""']]}, {'str': 'func register_shutdown($func)', 'command': 'func', 'args_str': 'register_shutdown($func)', 'args': ['register_shutdown($func)'], 'file_path': '@stdlib', 'line_number': 92, 'strings': [[False, 'func register_shutdown($func)']], 'eval': [['o', 'func'], ['o', 'register_shutdown'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']], 'args_eval': [['o', 'register_shutdown'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']]}, {'str': 'python ("self.shutdown_event.append(self.get_var(\'func\'))")', 'command': 'python', 'args_str': '("self.shutdown_event.append(self.get_var(\'func\'))")', 'args': ['("self.shutdown_event.append(self.get_var(\'func\'))")'], 'file_path': '@stdlib', 'line_number': 93, 'strings': [[False, 'python ('], [True, '"self.shutdown_event.append(self.get_var(\'func\'))"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.shutdown_event.append(self.get_var(\'func\'))"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.shutdown_event.append(self.get_var(\'func\'))"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 94, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'command': '@doc', 'args_str': '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"', 'args': ['"Gets', 'a', 'value', 'and', 'a', 'list', 'from', 'lists.', 'Then,', 'works', 'like', 'if,Example:\\nprintln', "match('hello',", "[\\n\t['bye',", "'the", "bye'],\\n\t['hello',", "'the", "hello']\\n])\\n\\nOutput:", '`the', 'hello`.\\n\\nAlso', 'you', 'can', 'set', 'default', 'option.', 'That', 'will', 'be', 'returned', 'when', 'the', 'passed', 'value', 'is', 'not', 'in', 'the', 'list', '(else).', 'Default', 'value', 'is', '`None`.\\n\\nExample:\\nprintln', 'match($value,', '$list,', "default='the", 'default', 'value\')"'], 'file_path': '@stdlib', 'line_number': 95, 'strings': [[False, '@doc '], [True, '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"']], 'args_eval': [['s', '"Gets a value and a list from lists. Then, works like if,Example:\\nprintln match(\'hello\', [\\n\t[\'bye\', \'the bye\'],\\n\t[\'hello\', \'the hello\']\\n])\\n\\nOutput: `the hello`.\\n\\nAlso you can set default option. That will be returned when the passed value is not in the list (else). Default value is `None`.\\n\\nExample:\\nprintln match($value, $list, default=\'the default value\')"']]}, {'str': 'func match($value, array[array] $list, $default=null)', 'command': 'func', 'args_str': 'match($value, array[array] $list, $default=null)', 'args': ['match($value,', 'array[array]', '$list,', '$default=null)'], 'file_path': '@stdlib', 'line_number': 96, 'strings': [[False, 'func match($value, array[array] $list, $default=null)']], 'eval': [['o', 'func'], ['o', 'match'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'array'], ['l', '['], ['o', 'array'], ['l', ']'], ['v', 'list', 'self.get_var("list")'], ['l', ','], ['v', 'default', 'self.get_var("default")'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'match'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'array'], ['l', '['], ['o', 'array'], ['l', ']'], ['v', 'list', 'self.get_var("list")'], ['l', ','], ['v', 'default', 'self.get_var("default")'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@stdlib', 'line_number': 97, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($list)', 'command': 'while', 'args_str': '$i < len($list)', 'args': ['$i', '<', 'len($list)'], 'file_path': '@stdlib', 'line_number': 98, 'strings': [[False, 'while $i < len($list)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', ')']]}, {'str': 'if $list[$i][0] == $value', 'command': 'if', 'args_str': '$list[$i][0] == $value', 'args': ['$list[$i][0]', '==', '$value'], 'file_path': '@stdlib', 'line_number': 99, 'strings': [[False, 'if $list[$i][0] == $value']], 'eval': [['o', 'if'], ['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['v', 'value', 'self.get_var("value")']], 'args_eval': [['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['v', 'value', 'self.get_var("value")']]}, {'str': 'mem not ($list[$i][0] == $value)', 'command': 'mem', 'args_str': 'not ($list[$i][0] == $value)', 'args': ['not', '($list[$i][0]', '==', '$value)'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'mem not ($list[$i][0] == $value)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '='], ['l', '='], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'gotoif tmplabelif26_2', 'command': 'gotoif', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 85, 'strings': [[False, 'gotoif tmplabelif26_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif26_2']], 'args_eval': [['o', 'tmplabelif26_2']]}, {'str': 'return $list[$i][1]', 'command': 'return', 'args_str': '$list[$i][1]', 'args': ['$list[$i][1]'], 'file_path': '@stdlib', 'line_number': 100, 'strings': [[False, 'return $list[$i][1]']], 'eval': [['o', 'return'], ['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['v', 'list', 'self.get_var("list")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 101, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif26_2', 'command': 'label', 'args_str': 'tmplabelif26_2', 'args': ['tmplabelif26_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif26_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif26_2']], 'args_eval': [['o', 'tmplabelif26_2']]}, {'str': 'label tmplabelif26_end', 'command': 'label', 'args_str': 'tmplabelif26_end', 'args': ['tmplabelif26_end'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'label tmplabelif26_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif26_end']], 'args_eval': [['o', 'tmplabelif26_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@stdlib', 'line_number': 102, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 103, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'return $default', 'command': 'return', 'args_str': '$default', 'args': ['$default'], 'file_path': '@stdlib', 'line_number': 104, 'strings': [[False, 'return $default']], 'eval': [['o', 'return'], ['v', 'default', 'self.get_var("default")']], 'args_eval': [['v', 'default', 'self.get_var("default")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 105, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Loads a Shared object (DLL) by name as string."', 'command': '@doc', 'args_str': '"Loads a Shared object (DLL) by name as string."', 'args': ['"Loads', 'a', 'Shared', 'object', '(DLL)', 'by', 'name', 'as', 'string."'], 'file_path': '@stdlib', 'line_number': 106, 'strings': [[False, '@doc '], [True, '"Loads a Shared object (DLL) by name as string."'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Loads a Shared object (DLL) by name as string."']], 'args_eval': [['s', '"Loads a Shared object (DLL) by name as string."']]}, {'str': 'func load_so(string $name)', 'command': 'func', 'args_str': 'load_so(string $name)', 'args': ['load_so(string', '$name)'], 'file_path': '@stdlib', 'line_number': 107, 'strings': [[False, 'func load_so(string $name)']], 'eval': [['o', 'func'], ['o', 'load_so'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'load_so'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': "return py_load_module('ctypes')->CDLL($name)", 'command': 'return', 'args_str': "py_load_module('ctypes')->CDLL($name)", 'args': ["py_load_module('ctypes')->CDLL($name)"], 'file_path': '@stdlib', 'line_number': 108, 'strings': [[False, 'return py_load_module('], [True, "'ctypes'"], [False, ')->CDLL($name)']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'ctypes'"], ['l', ')'], ['l', '.'], ['n', 'CDLL'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'ctypes'"], ['l', ')'], ['l', '.'], ['n', 'CDLL'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 109, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'import "@stdlib.obj"', 'command': 'import', 'args_str': '"@stdlib.obj"', 'args': ['"@stdlib.obj"'], 'file_path': '@stdlib', 'line_number': 110, 'strings': [[False, 'import '], [True, '"@stdlib.obj"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.obj"']], 'args_eval': [['s', '"@stdlib.obj"']]}, {'str': 'import "@stdlib.io"', 'command': 'import', 'args_str': '"@stdlib.io"', 'args': ['"@stdlib.io"'], 'file_path': '@stdlib', 'line_number': 111, 'strings': [[False, 'import '], [True, '"@stdlib.io"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.io"']], 'args_eval': [['s', '"@stdlib.io"']]}, {'str': 'import "@stdlib.func"', 'command': 'import', 'args_str': '"@stdlib.func"', 'args': ['"@stdlib.func"'], 'file_path': '@stdlib', 'line_number': 112, 'strings': [[False, 'import '], [True, '"@stdlib.func"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.func"']], 'args_eval': [['s', '"@stdlib.func"']]}, {'str': 'import "@stdlib.class"', 'command': 'import', 'args_str': '"@stdlib.class"', 'args': ['"@stdlib.class"'], 'file_path': '@stdlib', 'line_number': 113, 'strings': [[False, 'import '], [True, '"@stdlib.class"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.class"']], 'args_eval': [['s', '"@stdlib.class"']]}, {'str': 'import "@stdlib.defines"', 'command': 'import', 'args_str': '"@stdlib.defines"', 'args': ['"@stdlib.defines"'], 'file_path': '@stdlib', 'line_number': 114, 'strings': [[False, 'import '], [True, '"@stdlib.defines"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.defines"']], 'args_eval': [['s', '"@stdlib.defines"']]}, {'str': 'import "@stdlib.exception"', 'command': 'import', 'args_str': '"@stdlib.exception"', 'args': ['"@stdlib.exception"'], 'file_path': '@stdlib', 'line_number': 115, 'strings': [[False, 'import '], [True, '"@stdlib.exception"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.exception"']], 'args_eval': [['s', '"@stdlib.exception"']]}, {'str': 'import "@stdlib.debug"', 'command': 'import', 'args_str': '"@stdlib.debug"', 'args': ['"@stdlib.debug"'], 'file_path': '@stdlib', 'line_number': 116, 'strings': [[False, 'import '], [True, '"@stdlib.debug"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@stdlib.debug"']], 'args_eval': [['s', '"@stdlib.debug"']]}, {'str': 'func fopen()', 'command': 'func', 'args_str': 'fopen()', 'args': ['fopen()'], 'file_path': '@stdlib', 'line_number': 117, 'strings': [[False, 'func fopen()']], 'eval': [['o', 'func'], ['o', 'fopen'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'fopen'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib', 'line_number': 117, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'fopen = open', 'command': 'fopen', 'args_str': '= open', 'args': ['=', 'open'], 'file_path': '@stdlib', 'line_number': 118, 'strings': [[False, 'fopen = open']], 'eval': [['o', 'fopen'], ['l', '='], ['o', 'open']], 'args_eval': [['l', '='], ['o', 'open']]}]
modules["stdlib.class"] = [{'str': 'namespace class', 'command': 'namespace', 'args_str': 'class', 'args': ['class'], 'file_path': '@stdlib.class', 'line_number': 23, 'strings': [[False, 'namespace class']], 'eval': [['o', 'namespace'], ['o', 'class']], 'args_eval': [['o', 'class']]}, {'str': '@doc """    Returns list of defined classes as list of strings(name of class).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined classes as list of strings(name of class).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'classes', 'as', 'list', 'of', 'strings(name', 'of', 'class).', '"""'], 'file_path': '@stdlib.class', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns list of defined classes as list of strings(name of class).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns list of defined classes as list of strings(name of class).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns list of defined classes as list of strings(name of class).    "'], ['s', '""']]}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.class', 'line_number': 25, 'strings': [[False, 'func list()']], 'eval': [['o', 'func'], ['o', 'list'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'list'], ['l', '('], ['l', ')']]}, {'str': 'return python("self.mem = list(self.classes.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.classes.keys())")', 'args': ['python("self.mem', '=', 'list(self.classes.keys())")'], 'file_path': '@stdlib.class', 'line_number': 27, 'strings': [[False, 'return python('], [True, '"self.mem = list(self.classes.keys())"'], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', '"self.mem = list(self.classes.keys())"'], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', '"self.mem = list(self.classes.keys())"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'class', 'exists.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.class', 'line_number': 29, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks a class exists.\\n    Gets class name as string.\\n    Returns boolean.    "'], ['s', '""']]}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 30, 'strings': [[False, 'func bool::exists(string $name)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 32, 'strings': [[False, '$name = str($name)']], 'eval': [['v', 'name', 'self.get_var("name")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'return $name in class.list()', 'command': 'return', 'args_str': '$name in class.list()', 'args': ['$name', 'in', 'class.list()'], 'file_path': '@stdlib.class', 'line_number': 33, 'strings': [[False, 'return $name in class.list()']], 'eval': [['o', 'return'], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'class.list'], ['l', '('], ['l', ')']], 'args_eval': [['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'class.list'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'command': '@doc', 'args_str': '"""    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    """', 'args': ['"""', 'Deletes', 'a', 'class.\\n', 'Gets', 'class', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'classes).', '"""'], 'file_path': '@stdlib.class', 'line_number': 35, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Deletes a class.\\n    Gets class name as string.\\n    (This Cannot delete builtin classes).    "'], ['s', '""']]}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.class', 'line_number': 36, 'strings': [[False, 'func delete(string $name)']], 'eval': [['o', 'func'], ['o', 'delete'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'delete'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.class', 'line_number': 38, 'strings': [[False, '$name = str($name)']], 'eval': [['v', 'name', 'self.get_var("name")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'if not class.exists($name)', 'command': 'if', 'args_str': 'not class.exists($name)', 'args': ['not', 'class.exists($name)'], 'file_path': '@stdlib.class', 'line_number': 39, 'strings': [[False, 'if not class.exists($name)']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'class.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'class.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'mem not (not class.exists($name))', 'command': 'mem', 'args_str': 'not (not class.exists($name))', 'args': ['not', '(not', 'class.exists($name))'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'mem not (not class.exists($name))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'class.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'class.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif27_2', 'command': 'gotoif', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'gotoif tmplabelif27_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif27_2']], 'args_eval': [['o', 'tmplabelif27_2']]}, {'str': 'raise (Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'ClassNotFound\', \'class "\' + $name + \'" not found\'))', 'args': ["(Error('ClassNotFound',", "'class", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.class', 'line_number': 40, 'strings': [[False, 'raise (Error('], [True, "'ClassNotFound'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'ClassNotFound'"], ['l', ','], ['s', '\'class "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" not found\''], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'ClassNotFound'"], ['l', ','], ['s', '\'class "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" not found\''], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 41, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 42, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif27_2', 'command': 'label', 'args_str': 'tmplabelif27_2', 'args': ['tmplabelif27_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif27_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif27_2']], 'args_eval': [['o', 'tmplabelif27_2']]}, {'str': 'label tmplabelif27_end', 'command': 'label', 'args_str': 'tmplabelif27_end', 'args': ['tmplabelif27_end'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif27_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif27_end']], 'args_eval': [['o', 'tmplabelif27_end']]}, {'str': "$undeletable_classes = ['Object', 'Error']", 'command': '$undeletable_classes', 'args_str': "= ['Object', 'Error']", 'args': ['=', "['Object',", "'Error']"], 'file_path': '@stdlib.class', 'line_number': 43, 'strings': [[False, '$undeletable_classes = ['], [True, "'Object'"], [False, ', '], [True, "'Error'"], [False, ']']], 'eval': [['v', 'undeletable_classes', 'self.get_var("undeletable_classes")'], ['l', '='], ['l', '['], ['s', "'Object'"], ['l', ','], ['s', "'Error'"], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['s', "'Object'"], ['l', ','], ['s', "'Error'"], ['l', ']']]}, {'str': 'if $name in $undeletable_classes', 'command': 'if', 'args_str': '$name in $undeletable_classes', 'args': ['$name', 'in', '$undeletable_classes'], 'file_path': '@stdlib.class', 'line_number': 44, 'strings': [[False, 'if $name in $undeletable_classes']], 'eval': [['o', 'if'], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_classes', 'self.get_var("undeletable_classes")']], 'args_eval': [['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_classes', 'self.get_var("undeletable_classes")']]}, {'str': 'mem not ($name in $undeletable_classes)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_classes)', 'args': ['not', '($name', 'in', '$undeletable_classes)'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not ($name in $undeletable_classes)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_classes', 'self.get_var("undeletable_classes")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_classes', 'self.get_var("undeletable_classes")'], ['l', ')']]}, {'str': 'gotoif tmplabelif28_2', 'command': 'gotoif', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif28_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif28_2']], 'args_eval': [['o', 'tmplabelif28_2']]}, {'str': 'raise (Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'ClassCannotBeDeleted\', \'class "\' + $name + \'" is a builtin class and cannot be deleted\'))', 'args': ["(Error('ClassCannotBeDeleted',", "'class", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'class', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.class', 'line_number': 45, 'strings': [[False, 'raise (Error('], [True, "'ClassCannotBeDeleted'"], [False, ', '], [True, '\'class "\''], [False, ' + $name + '], [True, '\'" is a builtin class and cannot be deleted\''], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'ClassCannotBeDeleted'"], ['l', ','], ['s', '\'class "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is a builtin class and cannot be deleted\''], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'ClassCannotBeDeleted'"], ['l', ','], ['s', '\'class "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is a builtin class and cannot be deleted\''], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 46, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif28_2', 'command': 'label', 'args_str': 'tmplabelif28_2', 'args': ['tmplabelif28_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif28_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif28_2']], 'args_eval': [['o', 'tmplabelif28_2']]}, {'str': 'label tmplabelif28_end', 'command': 'label', 'args_str': 'tmplabelif28_end', 'args': ['tmplabelif28_end'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif28_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif28_end']], 'args_eval': [['o', 'tmplabelif28_end']]}, {'str': 'python ("del self.classes[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.classes[self.get_var(\'name\')]")', 'args': ['("del', 'self.classes[self.get_var(\'name\')]")'], 'file_path': '@stdlib.class', 'line_number': 48, 'strings': [[False, 'python ('], [True, '"del self.classes[self.get_var(\'name\')]"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"del self.classes[self.get_var(\'name\')]"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"del self.classes[self.get_var(\'name\')]"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 49, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.class', 'line_number': 50, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["stdlib.debug"] = [{'str': '@doc """Starts the debug shell. Gets a message as string"""', 'command': '@doc', 'args_str': '"""Starts the debug shell. Gets a message as string"""', 'args': ['"""Starts', 'the', 'debug', 'shell.', 'Gets', 'a', 'message', 'as', 'string"""'], 'file_path': '@stdlib.debug', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Starts the debug shell. Gets a message as string"'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Starts the debug shell. Gets a message as string"'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Starts the debug shell. Gets a message as string"'], ['s', '""']]}, {'str': 'func debug()', 'command': 'func', 'args_str': 'debug()', 'args': ['debug()'], 'file_path': '@stdlib.debug', 'line_number': 23, 'strings': [[False, 'func debug()']], 'eval': [['o', 'func'], ['o', 'debug'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'debug'], ['l', '('], ['l', ')']]}, {'str': '$tmp_pashmak_debug_message = str(^)', 'command': '$tmp_pashmak_debug_message', 'args_str': '= str(^)', 'args': ['=', 'str(^)'], 'file_path': '@stdlib.debug', 'line_number': 24, 'strings': [[False, '$tmp_pashmak_debug_message = str(^)']], 'eval': [['v', 'tmp_pashmak_debug_message', 'self.get_var("tmp_pashmak_debug_message")'], ['l', '='], ['o', 'str'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')']]}, {'str': "if not is_defined('DEBUG')", 'command': 'if', 'args_str': "not is_defined('DEBUG')", 'args': ['not', "is_defined('DEBUG')"], 'file_path': '@stdlib.debug', 'line_number': 26, 'strings': [[False, 'if not is_defined('], [True, "'DEBUG'"], [False, ')']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG'"], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG'"], ['l', ')']]}, {'str': "mem not (not is_defined('DEBUG'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG'))", 'args': ['not', '(not', "is_defined('DEBUG'))"], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'mem not (not is_defined('], [True, "'DEBUG'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif29_2', 'command': 'gotoif', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 3, 'strings': [[False, 'gotoif tmplabelif29_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif29_2']], 'args_eval': [['o', 'tmplabelif29_2']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 27, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 28, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif29_2', 'command': 'label', 'args_str': 'tmplabelif29_2', 'args': ['tmplabelif29_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif29_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif29_2']], 'args_eval': [['o', 'tmplabelif29_2']]}, {'str': 'label tmplabelif29_end', 'command': 'label', 'args_str': 'tmplabelif29_end', 'args': ['tmplabelif29_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif29_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif29_end']], 'args_eval': [['o', 'tmplabelif29_end']]}, {'str': 'if not DEBUG', 'command': 'if', 'args_str': 'not DEBUG', 'args': ['not', 'DEBUG'], 'file_path': '@stdlib.debug', 'line_number': 29, 'strings': [[False, 'if not DEBUG']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'DEBUG']], 'args_eval': [['o', 'not'], ['o', 'DEBUG']]}, {'str': 'mem not (not DEBUG)', 'command': 'mem', 'args_str': 'not (not DEBUG)', 'args': ['not', '(not', 'DEBUG)'], 'file_path': '<system>', 'line_number': 10, 'strings': [[False, 'mem not (not DEBUG)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'DEBUG'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'DEBUG'], ['l', ')']]}, {'str': 'gotoif tmplabelif30_2', 'command': 'gotoif', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 10, 'strings': [[False, 'gotoif tmplabelif30_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif30_2']], 'args_eval': [['o', 'tmplabelif30_2']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 30, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 31, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif30_2', 'command': 'label', 'args_str': 'tmplabelif30_2', 'args': ['tmplabelif30_2'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'label tmplabelif30_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif30_2']], 'args_eval': [['o', 'tmplabelif30_2']]}, {'str': 'label tmplabelif30_end', 'command': 'label', 'args_str': 'tmplabelif30_end', 'args': ['tmplabelif30_end'], 'file_path': '<system>', 'line_number': 14, 'strings': [[False, 'label tmplabelif30_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif30_end']], 'args_eval': [['o', 'tmplabelif30_end']]}, {'str': "if is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "is_defined('DEBUG_HEADER_TITLE')", 'args': ["is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 33, 'strings': [[False, 'if is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']], 'eval': [['o', 'if'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')']], 'args_eval': [['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')']]}, {'str': "mem not (is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', "(is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not (is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif31_2', 'command': 'gotoif', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif31_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif31_2']], 'args_eval': [['o', 'tmplabelif31_2']]}, {'str': 'println DEBUG_HEADER_TITLE', 'command': 'println', 'args_str': 'DEBUG_HEADER_TITLE', 'args': ['DEBUG_HEADER_TITLE'], 'file_path': '@stdlib.debug', 'line_number': 34, 'strings': [[False, 'println DEBUG_HEADER_TITLE']], 'eval': [['o', 'println'], ['o', 'DEBUG_HEADER_TITLE']], 'args_eval': [['o', 'DEBUG_HEADER_TITLE']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 35, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif31_end', 'command': 'goto', 'args_str': 'tmplabelif31_end', 'args': ['tmplabelif31_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'goto tmplabelif31_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif31_end']], 'args_eval': [['o', 'tmplabelif31_end']]}, {'str': 'label tmplabelif31_2', 'command': 'label', 'args_str': 'tmplabelif31_2', 'args': ['tmplabelif31_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif31_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif31_2']], 'args_eval': [['o', 'tmplabelif31_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif31_3', 'command': 'gotoif', 'args_str': 'tmplabelif31_3', 'args': ['tmplabelif31_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'gotoif tmplabelif31_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif31_3']], 'args_eval': [['o', 'tmplabelif31_3']]}, {'str': 'println \'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'command': 'println', 'args_str': '\'Debug started (\' + $tmp_pashmak_debug_message + \') at \' + python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\') + \':\' + str(python(\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))', 'args': ["'Debug", 'started', "('", '+', '$tmp_pashmak_debug_message', '+', "')", 'at', "'", '+', "python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\')', '+', "':'", '+', "str(python('self.mem", '=', 'self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\'))'], 'file_path': '@stdlib.debug', 'line_number': 36, 'strings': [[False, 'println '], [True, "'Debug started ('"], [False, ' + $tmp_pashmak_debug_message + '], [True, "') at '"], [False, ' + python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\''], [False, ') + '], [True, "':'"], [False, ' + str(python('], [True, '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\''], [False, '))']], 'eval': [['o', 'println'], ['s', "'Debug started ('"], ['l', '+'], ['v', 'tmp_pashmak_debug_message', 'self.get_var("tmp_pashmak_debug_message")'], ['l', '+'], ['s', "') at '"], ['l', '+'], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\''], ['l', ')'], ['l', '+'], ['s', "':'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\''], ['l', ')'], ['l', ')']], 'args_eval': [['s', "'Debug started ('"], ['l', '+'], ['v', 'tmp_pashmak_debug_message', 'self.get_var("tmp_pashmak_debug_message")'], ['l', '+'], ['s', "') at '"], ['l', '+'], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["file_path"]\''], ['l', ')'], ['l', '+'], ['s', "':'"], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'python'], ['l', '('], ['s', '\'self.mem = self.frames[-3]["commands"][self.frames[-3]["current_step"]]["line_number"]\''], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 37, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif31_3', 'command': 'label', 'args_str': 'tmplabelif31_3', 'args': ['tmplabelif31_3'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif31_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif31_3']], 'args_eval': [['o', 'tmplabelif31_3']]}, {'str': 'label tmplabelif31_end', 'command': 'label', 'args_str': 'tmplabelif31_end', 'args': ['tmplabelif31_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif31_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif31_end']], 'args_eval': [['o', 'tmplabelif31_end']]}, {'str': 'while true', 'command': 'while', 'args_str': 'true', 'args': ['true'], 'file_path': '@stdlib.debug', 'line_number': 39, 'strings': [[False, 'while true']], 'eval': [['o', 'while'], ['o', 'true']], 'args_eval': [['o', 'true']]}, {'str': "$tmp_pashmak_debug_cmd = read('> ')->strip()", 'command': '$tmp_pashmak_debug_cmd', 'args_str': "= read('> ')->strip()", 'args': ['=', "read('>", "')->strip()"], 'file_path': '@stdlib.debug', 'line_number': 40, 'strings': [[False, '$tmp_pashmak_debug_cmd = read('], [True, "'> '"], [False, ')->strip()']], 'eval': [['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', '='], ['o', 'read'], ['l', '('], ['s', "'> '"], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'read'], ['l', '('], ['s', "'> '"], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']]}, {'str': "if $tmp_pashmak_debug_cmd == 'n'", 'command': 'if', 'args_str': "$tmp_pashmak_debug_cmd == 'n'", 'args': ['$tmp_pashmak_debug_cmd', '==', "'n'"], 'file_path': '@stdlib.debug', 'line_number': 41, 'strings': [[False, 'if $tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, '']], 'eval': [['o', 'if'], ['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', '='], ['l', '='], ['s', "'n'"]], 'args_eval': [['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', '='], ['l', '='], ['s', "'n'"]]}, {'str': "mem not ($tmp_pashmak_debug_cmd == 'n')", 'command': 'mem', 'args_str': "not ($tmp_pashmak_debug_cmd == 'n')", 'args': ['not', '($tmp_pashmak_debug_cmd', '==', "'n')"], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'mem not ($tmp_pashmak_debug_cmd == '], [True, "'n'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', '='], ['l', '='], ['s', "'n'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', '='], ['l', '='], ['s', "'n'"], ['l', ')']]}, {'str': 'gotoif tmplabelif32_2', 'command': 'gotoif', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 32, 'strings': [[False, 'gotoif tmplabelif32_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif32_2']], 'args_eval': [['o', 'tmplabelif32_2']]}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 42, 'strings': [[False, 'break']], 'eval': [['o', 'break']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 43, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif32_2', 'command': 'label', 'args_str': 'tmplabelif32_2', 'args': ['tmplabelif32_2'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif32_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif32_2']], 'args_eval': [['o', 'tmplabelif32_2']]}, {'str': 'label tmplabelif32_end', 'command': 'label', 'args_str': 'tmplabelif32_end', 'args': ['tmplabelif32_end'], 'file_path': '<system>', 'line_number': 36, 'strings': [[False, 'label tmplabelif32_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif32_end']], 'args_eval': [['o', 'tmplabelif32_end']]}, {'str': 'try tmp_pashmak_debug_error', 'command': 'try', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 44, 'strings': [[False, 'try tmp_pashmak_debug_error']], 'eval': [['o', 'try'], ['o', 'tmp_pashmak_debug_error']], 'args_eval': [['o', 'tmp_pashmak_debug_error']]}, {'str': 'eval ($tmp_pashmak_debug_cmd)', 'command': 'eval', 'args_str': '($tmp_pashmak_debug_cmd)', 'args': ['($tmp_pashmak_debug_cmd)'], 'file_path': '@stdlib.debug', 'line_number': 45, 'strings': [[False, 'eval ($tmp_pashmak_debug_cmd)']], 'eval': [['o', 'eval'], ['l', '('], ['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'tmp_pashmak_debug_cmd', 'self.get_var("tmp_pashmak_debug_cmd")'], ['l', ')']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 46, 'strings': [[False, 'endtry']], 'eval': [['o', 'endtry']], 'args_eval': []}, {'str': 'goto after_tmp_pashmak_debug_error', 'command': 'goto', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 47, 'strings': [[False, 'goto after_tmp_pashmak_debug_error']], 'eval': [['o', 'goto'], ['o', 'after_tmp_pashmak_debug_error']], 'args_eval': [['o', 'after_tmp_pashmak_debug_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'tmp_pashmak_debug_error', 'args': ['tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 47, 'strings': [[False, 'label tmp_pashmak_debug_error']], 'eval': [['o', 'label'], ['o', 'tmp_pashmak_debug_error']], 'args_eval': [['o', 'tmp_pashmak_debug_error']]}, {'str': '$tmp_pashmak_debug_ex = ^', 'command': '$tmp_pashmak_debug_ex', 'args_str': '= ^', 'args': ['=', '^'], 'file_path': '@stdlib.debug', 'line_number': 48, 'strings': [[False, '$tmp_pashmak_debug_ex = ^']], 'eval': [['v', 'tmp_pashmak_debug_ex', 'self.get_var("tmp_pashmak_debug_ex")'], ['l', '='], ['o', 'self.get_mem()']], 'args_eval': [['l', '='], ['o', 'self.get_mem()']]}, {'str': "println $tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'command': 'println', 'args_str': "$tmp_pashmak_debug_ex->type + ': ' + $tmp_pashmak_debug_ex->message", 'args': ['$tmp_pashmak_debug_ex->type', '+', "':", "'", '+', '$tmp_pashmak_debug_ex->message'], 'file_path': '@stdlib.debug', 'line_number': 49, 'strings': [[False, 'println $tmp_pashmak_debug_ex->type + '], [True, "': '"], [False, ' + $tmp_pashmak_debug_ex->message']], 'eval': [['o', 'println'], ['v', 'tmp_pashmak_debug_ex', 'self.get_var("tmp_pashmak_debug_ex")'], ['l', '.'], ['n', 'type'], ['l', '+'], ['s', "': '"], ['l', '+'], ['v', 'tmp_pashmak_debug_ex', 'self.get_var("tmp_pashmak_debug_ex")'], ['l', '.'], ['n', 'message']], 'args_eval': [['v', 'tmp_pashmak_debug_ex', 'self.get_var("tmp_pashmak_debug_ex")'], ['l', '.'], ['n', 'type'], ['l', '+'], ['s', "': '"], ['l', '+'], ['v', 'tmp_pashmak_debug_ex', 'self.get_var("tmp_pashmak_debug_ex")'], ['l', '.'], ['n', 'message']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label after_tmp_pashmak_debug_error', 'command': 'label', 'args_str': 'after_tmp_pashmak_debug_error', 'args': ['after_tmp_pashmak_debug_error'], 'file_path': '@stdlib.debug', 'line_number': 50, 'strings': [[False, 'label after_tmp_pashmak_debug_error']], 'eval': [['o', 'label'], ['o', 'after_tmp_pashmak_debug_error']], 'args_eval': [['o', 'after_tmp_pashmak_debug_error']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 51, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': "if not is_defined('DEBUG_HEADER_TITLE')", 'command': 'if', 'args_str': "not is_defined('DEBUG_HEADER_TITLE')", 'args': ['not', "is_defined('DEBUG_HEADER_TITLE')"], 'file_path': '@stdlib.debug', 'line_number': 52, 'strings': [[False, 'if not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, ')']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')']]}, {'str': "mem not (not is_defined('DEBUG_HEADER_TITLE'))", 'command': 'mem', 'args_str': "not (not is_defined('DEBUG_HEADER_TITLE'))", 'args': ['not', '(not', "is_defined('DEBUG_HEADER_TITLE'))"], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not (not is_defined('], [True, "'DEBUG_HEADER_TITLE'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'DEBUG_HEADER_TITLE'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif33_2', 'command': 'gotoif', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif33_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif33_2']], 'args_eval': [['o', 'tmplabelif33_2']]}, {'str': "println 'Debug finished.'", 'command': 'println', 'args_str': "'Debug finished.'", 'args': ["'Debug", "finished.'"], 'file_path': '@stdlib.debug', 'line_number': 53, 'strings': [[False, 'println '], [True, "'Debug finished.'"], [False, '']], 'eval': [['o', 'println'], ['s', "'Debug finished.'"]], 'args_eval': [['s', "'Debug finished.'"]]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 54, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif33_2', 'command': 'label', 'args_str': 'tmplabelif33_2', 'args': ['tmplabelif33_2'], 'file_path': '<system>', 'line_number': 54, 'strings': [[False, 'label tmplabelif33_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif33_2']], 'args_eval': [['o', 'tmplabelif33_2']]}, {'str': 'label tmplabelif33_end', 'command': 'label', 'args_str': 'tmplabelif33_end', 'args': ['tmplabelif33_end'], 'file_path': '<system>', 'line_number': 54, 'strings': [[False, 'label tmplabelif33_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif33_end']], 'args_eval': [['o', 'tmplabelif33_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.debug', 'line_number': 55, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}]
modules["stdlib.defines"] = [{'str': '@doc "Defines a name. First argument is the name and second argument is the value"', 'command': '@doc', 'args_str': '"Defines a name. First argument is the name and second argument is the value"', 'args': ['"Defines', 'a', 'name.', 'First', 'argument', 'is', 'the', 'name', 'and', 'second', 'argument', 'is', 'the', 'value"'], 'file_path': '@stdlib.defines', 'line_number': 22, 'strings': [[False, '@doc '], [True, '"Defines a name. First argument is the name and second argument is the value"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Defines a name. First argument is the name and second argument is the value"']], 'args_eval': [['s', '"Defines a name. First argument is the name and second argument is the value"']]}, {'str': 'func define(string $name, $value)', 'command': 'func', 'args_str': 'define(string $name, $value)', 'args': ['define(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 23, 'strings': [[False, 'func define(string $name, $value)']], 'eval': [['o', 'func'], ['o', 'define'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'define'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 24, 'strings': [[False, 'if is_defined($name)']], 'eval': [['o', 'if'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 2, 'strings': [[False, 'mem not (is_defined($name))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif34_2', 'command': 'gotoif', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 2, 'strings': [[False, 'gotoif tmplabelif34_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif34_2']], 'args_eval': [['o', 'tmplabelif34_2']]}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" already defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'already', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 25, 'strings': [[False, 'raise Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" already defined\''], [False, ')']], 'eval': [['o', 'raise'], ['o', 'Error'], ['l', '('], ['s', "'DefineError'"], ['l', ','], ['s', '\'name "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" already defined\''], ['l', ')']], 'args_eval': [['o', 'Error'], ['l', '('], ['s', "'DefineError'"], ['l', ','], ['s', '\'name "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" already defined\''], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 26, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 27, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif34_2', 'command': 'label', 'args_str': 'tmplabelif34_2', 'args': ['tmplabelif34_2'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif34_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif34_2']], 'args_eval': [['o', 'tmplabelif34_2']]}, {'str': 'label tmplabelif34_end', 'command': 'label', 'args_str': 'tmplabelif34_end', 'args': ['tmplabelif34_end'], 'file_path': '<system>', 'line_number': 7, 'strings': [[False, 'label tmplabelif34_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif34_end']], 'args_eval': [['o', 'tmplabelif34_end']]}, {'str': 'python ("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.defines[self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.defines[self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.defines', 'line_number': 28, 'strings': [[False, 'python ('], [True, '"self.defines[self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.defines[self.get_var(\'name\')] = self.get_var(\'value\')"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.defines[self.get_var(\'name\')] = self.get_var(\'value\')"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 29, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Returns all of defined names as a dictionary"', 'command': '@doc', 'args_str': '"Returns all of defined names as a dictionary"', 'args': ['"Returns', 'all', 'of', 'defined', 'names', 'as', 'a', 'dictionary"'], 'file_path': '@stdlib.defines', 'line_number': 30, 'strings': [[False, '@doc '], [True, '"Returns all of defined names as a dictionary"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Returns all of defined names as a dictionary"']], 'args_eval': [['s', '"Returns all of defined names as a dictionary"']]}, {'str': 'func dict::all_defines()', 'command': 'func', 'args_str': 'dict::all_defines()', 'args': ['dict::all_defines()'], 'file_path': '@stdlib.defines', 'line_number': 31, 'strings': [[False, 'func dict::all_defines()']], 'eval': [['o', 'func'], ['o', 'dict'], ['l', ':'], ['l', ':'], ['o', 'all_defines'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'dict'], ['l', ':'], ['l', ':'], ['o', 'all_defines'], ['l', '('], ['l', ')']]}, {'str': "return python('self.mem = self.defines')", 'command': 'return', 'args_str': "python('self.mem = self.defines')", 'args': ["python('self.mem", '=', "self.defines')"], 'file_path': '@stdlib.defines', 'line_number': 32, 'strings': [[False, 'return python('], [True, "'self.mem = self.defines'"], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', "'self.mem = self.defines'"], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', "'self.mem = self.defines'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 33, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Gets a name and checks is defined and return boolean"', 'command': '@doc', 'args_str': '"Gets a name and checks is defined and return boolean"', 'args': ['"Gets', 'a', 'name', 'and', 'checks', 'is', 'defined', 'and', 'return', 'boolean"'], 'file_path': '@stdlib.defines', 'line_number': 34, 'strings': [[False, '@doc '], [True, '"Gets a name and checks is defined and return boolean"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Gets a name and checks is defined and return boolean"']], 'args_eval': [['s', '"Gets a name and checks is defined and return boolean"']]}, {'str': 'func bool::is_defined(string $name)', 'command': 'func', 'args_str': 'bool::is_defined(string $name)', 'args': ['bool::is_defined(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 35, 'strings': [[False, 'func bool::is_defined(string $name)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'is_defined'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'is_defined'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'return $name in list(all_defines()->keys())', 'command': 'return', 'args_str': '$name in list(all_defines()->keys())', 'args': ['$name', 'in', 'list(all_defines()->keys())'], 'file_path': '@stdlib.defines', 'line_number': 36, 'strings': [[False, 'return $name in list(all_defines()->keys())']], 'eval': [['o', 'return'], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'list'], ['l', '('], ['o', 'all_defines'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']], 'args_eval': [['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'list'], ['l', '('], ['o', 'all_defines'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Deletes a defined name. Gets name as string"', 'command': '@doc', 'args_str': '"Deletes a defined name. Gets name as string"', 'args': ['"Deletes', 'a', 'defined', 'name.', 'Gets', 'name', 'as', 'string"'], 'file_path': '@stdlib.defines', 'line_number': 38, 'strings': [[False, '@doc '], [True, '"Deletes a defined name. Gets name as string"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Deletes a defined name. Gets name as string"']], 'args_eval': [['s', '"Deletes a defined name. Gets name as string"']]}, {'str': 'func undefine(string $name)', 'command': 'func', 'args_str': 'undefine(string $name)', 'args': ['undefine(string', '$name)'], 'file_path': '@stdlib.defines', 'line_number': 39, 'strings': [[False, 'func undefine(string $name)']], 'eval': [['o', 'func'], ['o', 'undefine'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'undefine'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'if not is_defined($name)', 'command': 'if', 'args_str': 'not is_defined($name)', 'args': ['not', 'is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 40, 'strings': [[False, 'if not is_defined($name)']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'mem not (not is_defined($name))', 'command': 'mem', 'args_str': 'not (not is_defined($name))', 'args': ['not', '(not', 'is_defined($name))'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not (not is_defined($name))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif35_2', 'command': 'gotoif', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif35_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif35_2']], 'args_eval': [['o', 'tmplabelif35_2']]}, {'str': 'raise Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'command': 'raise', 'args_str': 'Error(\'DefineError\', \'name "\' + $name + \'" is not defined\')', 'args': ["Error('DefineError',", "'name", '"\'', '+', '$name', '+', '\'"', 'is', 'not', "defined')"], 'file_path': '@stdlib.defines', 'line_number': 41, 'strings': [[False, 'raise Error('], [True, "'DefineError'"], [False, ', '], [True, '\'name "\''], [False, ' + $name + '], [True, '\'" is not defined\''], [False, ')']], 'eval': [['o', 'raise'], ['o', 'Error'], ['l', '('], ['s', "'DefineError'"], ['l', ','], ['s', '\'name "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is not defined\''], ['l', ')']], 'args_eval': [['o', 'Error'], ['l', '('], ['s', "'DefineError'"], ['l', ','], ['s', '\'name "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is not defined\''], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 42, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 43, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif35_2', 'command': 'label', 'args_str': 'tmplabelif35_2', 'args': ['tmplabelif35_2'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif35_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif35_2']], 'args_eval': [['o', 'tmplabelif35_2']]}, {'str': 'label tmplabelif35_end', 'command': 'label', 'args_str': 'tmplabelif35_end', 'args': ['tmplabelif35_end'], 'file_path': '<system>', 'line_number': 27, 'strings': [[False, 'label tmplabelif35_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif35_end']], 'args_eval': [['o', 'tmplabelif35_end']]}, {'str': 'python ("del self.defines[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.defines[self.get_var(\'name\')]")', 'args': ['("del', 'self.defines[self.get_var(\'name\')]")'], 'file_path': '@stdlib.defines', 'line_number': 44, 'strings': [[False, 'python ('], [True, '"del self.defines[self.get_var(\'name\')]"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"del self.defines[self.get_var(\'name\')]"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"del self.defines[self.get_var(\'name\')]"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 45, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'command': '@doc', 'args_str': '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"', 'args': ['"Re-Defines', 'a', 'name.', 'If', 'name', 'exists,', 'undefines', 'that', 'and', 'defines', 'new', 'value,', 'and', 'if', 'name', 'currently', 'not', 'exists,', 'defines', 'new', 'name"'], 'file_path': '@stdlib.defines', 'line_number': 46, 'strings': [[False, '@doc '], [True, '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"']], 'args_eval': [['s', '"Re-Defines a name. If name exists, undefines that and defines new value, and if name currently not exists, defines new name"']]}, {'str': 'func redefine(string $name, $value)', 'command': 'func', 'args_str': 'redefine(string $name, $value)', 'args': ['redefine(string', '$name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 47, 'strings': [[False, 'func redefine(string $name, $value)']], 'eval': [['o', 'func'], ['o', 'redefine'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'redefine'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'if is_defined($name)', 'command': 'if', 'args_str': 'is_defined($name)', 'args': ['is_defined($name)'], 'file_path': '@stdlib.defines', 'line_number': 48, 'strings': [[False, 'if is_defined($name)']], 'eval': [['o', 'if'], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'mem not (is_defined($name))', 'command': 'mem', 'args_str': 'not (is_defined($name))', 'args': ['not', '(is_defined($name))'], 'file_path': '<system>', 'line_number': 34, 'strings': [[False, 'mem not (is_defined($name))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif36_2', 'command': 'gotoif', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 34, 'strings': [[False, 'gotoif tmplabelif36_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif36_2']], 'args_eval': [['o', 'tmplabelif36_2']]}, {'str': 'undefine ($name)', 'command': 'undefine', 'args_str': '($name)', 'args': ['($name)'], 'file_path': '@stdlib.defines', 'line_number': 49, 'strings': [[False, 'undefine ($name)']], 'eval': [['o', 'undefine'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 50, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif36_2', 'command': 'label', 'args_str': 'tmplabelif36_2', 'args': ['tmplabelif36_2'], 'file_path': '<system>', 'line_number': 38, 'strings': [[False, 'label tmplabelif36_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif36_2']], 'args_eval': [['o', 'tmplabelif36_2']]}, {'str': 'label tmplabelif36_end', 'command': 'label', 'args_str': 'tmplabelif36_end', 'args': ['tmplabelif36_end'], 'file_path': '<system>', 'line_number': 38, 'strings': [[False, 'label tmplabelif36_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif36_end']], 'args_eval': [['o', 'tmplabelif36_end']]}, {'str': 'define ($name, $value)', 'command': 'define', 'args_str': '($name, $value)', 'args': ['($name,', '$value)'], 'file_path': '@stdlib.defines', 'line_number': 51, 'strings': [[False, 'define ($name, $value)']], 'eval': [['o', 'define'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.defines', 'line_number': 52, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}]
modules["stdlib.exception"] = [{'str': '@doc """A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'command': '@doc', 'args_str': '"""A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"""', 'args': ['"""A', 'model', 'for', 'error', 'exceptions.\\nAlso', 'is', 'used', 'by', '`raise`', 'function.\\nExample:', "Error('ErrorType',", "'message", 'of', 'error\')"""'], 'file_path': '@stdlib.exception', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"A model for error exceptions.\\nAlso is used by `raise` function.\\nExample: Error(\'ErrorType\', \'message of error\')"'], ['s', '""']]}, {'str': 'class Error', 'command': 'class', 'args_str': 'Error', 'args': ['Error'], 'file_path': '@stdlib.exception', 'line_number': 23, 'strings': [[False, 'class Error']], 'eval': [['o', 'class'], ['o', 'Error']], 'args_eval': [['o', 'Error']]}, {'str': '$type ', 'command': '$type', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 24, 'strings': [[False, '$type']], 'eval': [['v', 'type', 'self.get_var("type")']], 'args_eval': []}, {'str': '$message ', 'command': '$message', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 25, 'strings': [[False, '$message']], 'eval': [['v', 'message', 'self.get_var("message")']], 'args_eval': []}, {'str': 'func __init__($type, $message)', 'command': 'func', 'args_str': '__init__($type, $message)', 'args': ['__init__($type,', '$message)'], 'file_path': '@stdlib.exception', 'line_number': 26, 'strings': [[False, 'func __init__($type, $message)']], 'eval': [['o', 'func'], ['o', '__init__'], ['l', '('], ['v', 'type', 'self.get_var("type")'], ['l', ','], ['v', 'message', 'self.get_var("message")'], ['l', ')']], 'args_eval': [['o', '__init__'], ['l', '('], ['v', 'type', 'self.get_var("type")'], ['l', ','], ['v', 'message', 'self.get_var("message")'], ['l', ')']]}, {'str': '$this->type = $type', 'command': '$this->type', 'args_str': '= $type', 'args': ['=', '$type'], 'file_path': '@stdlib.exception', 'line_number': 27, 'strings': [[False, '$this->type = $type']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'type'], ['l', '='], ['v', 'type', 'self.get_var("type")']], 'args_eval': [['l', '='], ['v', 'type', 'self.get_var("type")']]}, {'str': '$this->message = $message', 'command': '$this->message', 'args_str': '= $message', 'args': ['=', '$message'], 'file_path': '@stdlib.exception', 'line_number': 28, 'strings': [[False, '$this->message = $message']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'message'], ['l', '='], ['v', 'message', 'self.get_var("message")']], 'args_eval': [['l', '='], ['v', 'message', 'self.get_var("message")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 29, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.exception', 'line_number': 30, 'strings': [[False, 'func string::__str__()']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__str__'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__str__'], ['l', '('], ['l', ')']]}, {'str': "return $this->type + ': ' + $this->message", 'command': 'return', 'args_str': "$this->type + ': ' + $this->message", 'args': ['$this->type', '+', "':", "'", '+', '$this->message'], 'file_path': '@stdlib.exception', 'line_number': 31, 'strings': [[False, 'return $this->type + '], [True, "': '"], [False, ' + $this->message']], 'eval': [['o', 'return'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'type'], ['l', '+'], ['s', "': '"], ['l', '+'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'message']], 'args_eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'type'], ['l', '+'], ['s', "': '"], ['l', '+'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'message']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 32, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 33, 'strings': [[False, 'endclass']], 'eval': [['o', 'endclass']], 'args_eval': []}, {'str': '@doc """Raises a error.\\nGets a object from `Error` class as error."""', 'command': '@doc', 'args_str': '"""Raises a error.\\nGets a object from `Error` class as error."""', 'args': ['"""Raises', 'a', 'error.\\nGets', 'a', 'object', 'from', '`Error`', 'class', 'as', 'error."""'], 'file_path': '@stdlib.exception', 'line_number': 34, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Raises a error.\\nGets a object from `Error` class as error."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Raises a error.\\nGets a object from `Error` class as error."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Raises a error.\\nGets a object from `Error` class as error."'], ['s', '""']]}, {'str': 'func raise(Error $ex)', 'command': 'func', 'args_str': 'raise(Error $ex)', 'args': ['raise(Error', '$ex)'], 'file_path': '@stdlib.exception', 'line_number': 35, 'strings': [[False, 'func raise(Error $ex)']], 'eval': [['o', 'func'], ['o', 'raise'], ['l', '('], ['o', 'Error'], ['v', 'ex', 'self.get_var("ex")'], ['l', ')']], 'args_eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['v', 'ex', 'self.get_var("ex")'], ['l', ')']]}, {'str': 'python ("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'command': 'python', 'args_str': '("self.raise_error(\'" + str($ex->type) + "\', \'" + str($ex->message) + "\')")', 'args': ['("self.raise_error(\'"', '+', 'str($ex->type)', '+', '"\',', '\'"', '+', 'str($ex->message)', '+', '"\')")'], 'file_path': '@stdlib.exception', 'line_number': 36, 'strings': [[False, 'python ('], [True, '"self.raise_error(\'"'], [False, ' + str($ex->type) + '], [True, '"\', \'"'], [False, ' + str($ex->message) + '], [True, '"\')"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.raise_error(\'"'], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'ex', 'self.get_var("ex")'], ['l', '.'], ['n', 'type'], ['l', ')'], ['l', '+'], ['s', '"\', \'"'], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'ex', 'self.get_var("ex")'], ['l', '.'], ['n', 'message'], ['l', ')'], ['l', '+'], ['s', '"\')"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.raise_error(\'"'], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'ex', 'self.get_var("ex")'], ['l', '.'], ['n', 'type'], ['l', ')'], ['l', '+'], ['s', '"\', \'"'], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'ex', 'self.get_var("ex")'], ['l', '.'], ['n', 'message'], ['l', ')'], ['l', '+'], ['s', '"\')"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.exception', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}]
modules["stdlib.func"] = [{'str': 'namespace func', 'command': 'namespace', 'args_str': 'func', 'args': ['func'], 'file_path': '@stdlib.func', 'line_number': 23, 'strings': [[False, 'namespace func']], 'eval': [['o', 'namespace'], ['o', 'func']], 'args_eval': [['o', 'func']]}, {'str': '@doc """    Returns list of defined functions as list of strings(name of function).    """', 'command': '@doc', 'args_str': '"""    Returns list of defined functions as list of strings(name of function).    """', 'args': ['"""', 'Returns', 'list', 'of', 'defined', 'functions', 'as', 'list', 'of', 'strings(name', 'of', 'function).', '"""'], 'file_path': '@stdlib.func', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Returns list of defined functions as list of strings(name of function).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Returns list of defined functions as list of strings(name of function).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Returns list of defined functions as list of strings(name of function).    "'], ['s', '""']]}, {'str': 'func list()', 'command': 'func', 'args_str': 'list()', 'args': ['list()'], 'file_path': '@stdlib.func', 'line_number': 25, 'strings': [[False, 'func list()']], 'eval': [['o', 'func'], ['o', 'list'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'list'], ['l', '('], ['l', ')']]}, {'str': 'return python("self.mem = list(self.functions.keys())")', 'command': 'return', 'args_str': 'python("self.mem = list(self.functions.keys())")', 'args': ['python("self.mem', '=', 'list(self.functions.keys())")'], 'file_path': '@stdlib.func', 'line_number': 27, 'strings': [[False, 'return python('], [True, '"self.mem = list(self.functions.keys())"'], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', '"self.mem = list(self.functions.keys())"'], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', '"self.mem = list(self.functions.keys())"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'command': '@doc', 'args_str': '"""    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    """', 'args': ['"""', 'Checks', 'a', 'function', 'exists.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', 'Returns', 'boolean.', '"""'], 'file_path': '@stdlib.func', 'line_number': 29, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks a function exists.\\n    Gets function name as string.\\n    Returns boolean.    "'], ['s', '""']]}, {'str': 'func bool::exists(string $name)', 'command': 'func', 'args_str': 'bool::exists(string $name)', 'args': ['bool::exists(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 30, 'strings': [[False, 'func bool::exists(string $name)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'exists'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 32, 'strings': [[False, '$name = str($name)']], 'eval': [['v', 'name', 'self.get_var("name")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'return $name in func.list()', 'command': 'return', 'args_str': '$name in func.list()', 'args': ['$name', 'in', 'func.list()'], 'file_path': '@stdlib.func', 'line_number': 33, 'strings': [[False, 'return $name in func.list()']], 'eval': [['o', 'return'], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'func.list'], ['l', '('], ['l', ')']], 'args_eval': [['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['o', 'func.list'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'command': '@doc', 'args_str': '"""    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    """', 'args': ['"""', 'Deletes', 'a', 'function.\\n', 'Gets', 'function', 'name', 'as', 'string.\\n', '(This', 'Cannot', 'delete', 'builtin', 'functions).', '"""'], 'file_path': '@stdlib.func', 'line_number': 35, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Deletes a function.\\n    Gets function name as string.\\n    (This Cannot delete builtin functions).    "'], ['s', '""']]}, {'str': 'func delete(string $name)', 'command': 'func', 'args_str': 'delete(string $name)', 'args': ['delete(string', '$name)'], 'file_path': '@stdlib.func', 'line_number': 36, 'strings': [[False, 'func delete(string $name)']], 'eval': [['o', 'func'], ['o', 'delete'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'delete'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': '$name = str($name)', 'command': '$name', 'args_str': '= str($name)', 'args': ['=', 'str($name)'], 'file_path': '@stdlib.func', 'line_number': 38, 'strings': [[False, '$name = str($name)']], 'eval': [['v', 'name', 'self.get_var("name")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'if not func.exists($name)', 'command': 'if', 'args_str': 'not func.exists($name)', 'args': ['not', 'func.exists($name)'], 'file_path': '@stdlib.func', 'line_number': 39, 'strings': [[False, 'if not func.exists($name)']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'func.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'func.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')']]}, {'str': 'mem not (not func.exists($name))', 'command': 'mem', 'args_str': 'not (not func.exists($name))', 'args': ['not', '(not', 'func.exists($name))'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'mem not (not func.exists($name))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'func.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'func.exists'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif37_2', 'command': 'gotoif', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'gotoif tmplabelif37_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif37_2']], 'args_eval': [['o', 'tmplabelif37_2']]}, {'str': 'raise (Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionNotFound\', \'function "\' + $name + \'" not found\'))', 'args': ["(Error('FunctionNotFound',", "'function", '"\'', '+', '$name', '+', '\'"', 'not', "found'))"], 'file_path': '@stdlib.func', 'line_number': 40, 'strings': [[False, 'raise (Error('], [True, "'FunctionNotFound'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" not found\''], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'FunctionNotFound'"], ['l', ','], ['s', '\'function "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" not found\''], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'FunctionNotFound'"], ['l', ','], ['s', '\'function "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" not found\''], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 41, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 42, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif37_2', 'command': 'label', 'args_str': 'tmplabelif37_2', 'args': ['tmplabelif37_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif37_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif37_2']], 'args_eval': [['o', 'tmplabelif37_2']]}, {'str': 'label tmplabelif37_end', 'command': 'label', 'args_str': 'tmplabelif37_end', 'args': ['tmplabelif37_end'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'label tmplabelif37_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif37_end']], 'args_eval': [['o', 'tmplabelif37_end']]}, {'str': "$undeletable_functions = ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'command': '$undeletable_functions', 'args_str': "= ['func.list', 'func.delete', 'func.exists', 'gset', 'py_load_file', 'system', 'typeof', 'required', 'print', 'import', 'println', 'printl', 'import_once', 'mem', 'rmem', 'python', 'endns', 'exit', 'eval', 'raise', 'assert', 'read']", 'args': ['=', "['func.list',", "'func.delete',", "'func.exists',", "'gset',", "'py_load_file',", "'system',", "'typeof',", "'required',", "'print',", "'import',", "'println',", "'printl',", "'import_once',", "'mem',", "'rmem',", "'python',", "'endns',", "'exit',", "'eval',", "'raise',", "'assert',", "'read']"], 'file_path': '@stdlib.func', 'line_number': 43, 'strings': [[False, '$undeletable_functions = ['], [True, "'func.list'"], [False, ', '], [True, "'func.delete'"], [False, ', '], [True, "'func.exists'"], [False, ', '], [True, "'gset'"], [False, ', '], [True, "'py_load_file'"], [False, ', '], [True, "'system'"], [False, ', '], [True, "'typeof'"], [False, ', '], [True, "'required'"], [False, ', '], [True, "'print'"], [False, ', '], [True, "'import'"], [False, ', '], [True, "'println'"], [False, ', '], [True, "'printl'"], [False, ', '], [True, "'import_once'"], [False, ', '], [True, "'mem'"], [False, ', '], [True, "'rmem'"], [False, ', '], [True, "'python'"], [False, ', '], [True, "'endns'"], [False, ', '], [True, "'exit'"], [False, ', '], [True, "'eval'"], [False, ', '], [True, "'raise'"], [False, ', '], [True, "'assert'"], [False, ', '], [True, "'read'"], [False, ']']], 'eval': [['v', 'undeletable_functions', 'self.get_var("undeletable_functions")'], ['l', '='], ['l', '['], ['s', "'func.list'"], ['l', ','], ['s', "'func.delete'"], ['l', ','], ['s', "'func.exists'"], ['l', ','], ['s', "'gset'"], ['l', ','], ['s', "'py_load_file'"], ['l', ','], ['s', "'system'"], ['l', ','], ['s', "'typeof'"], ['l', ','], ['s', "'required'"], ['l', ','], ['s', "'print'"], ['l', ','], ['s', "'import'"], ['l', ','], ['s', "'println'"], ['l', ','], ['s', "'printl'"], ['l', ','], ['s', "'import_once'"], ['l', ','], ['s', "'mem'"], ['l', ','], ['s', "'rmem'"], ['l', ','], ['s', "'python'"], ['l', ','], ['s', "'endns'"], ['l', ','], ['s', "'exit'"], ['l', ','], ['s', "'eval'"], ['l', ','], ['s', "'raise'"], ['l', ','], ['s', "'assert'"], ['l', ','], ['s', "'read'"], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['s', "'func.list'"], ['l', ','], ['s', "'func.delete'"], ['l', ','], ['s', "'func.exists'"], ['l', ','], ['s', "'gset'"], ['l', ','], ['s', "'py_load_file'"], ['l', ','], ['s', "'system'"], ['l', ','], ['s', "'typeof'"], ['l', ','], ['s', "'required'"], ['l', ','], ['s', "'print'"], ['l', ','], ['s', "'import'"], ['l', ','], ['s', "'println'"], ['l', ','], ['s', "'printl'"], ['l', ','], ['s', "'import_once'"], ['l', ','], ['s', "'mem'"], ['l', ','], ['s', "'rmem'"], ['l', ','], ['s', "'python'"], ['l', ','], ['s', "'endns'"], ['l', ','], ['s', "'exit'"], ['l', ','], ['s', "'eval'"], ['l', ','], ['s', "'raise'"], ['l', ','], ['s', "'assert'"], ['l', ','], ['s', "'read'"], ['l', ']']]}, {'str': 'if $name in $undeletable_functions', 'command': 'if', 'args_str': '$name in $undeletable_functions', 'args': ['$name', 'in', '$undeletable_functions'], 'file_path': '@stdlib.func', 'line_number': 44, 'strings': [[False, 'if $name in $undeletable_functions']], 'eval': [['o', 'if'], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_functions', 'self.get_var("undeletable_functions")']], 'args_eval': [['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_functions', 'self.get_var("undeletable_functions")']]}, {'str': 'mem not ($name in $undeletable_functions)', 'command': 'mem', 'args_str': 'not ($name in $undeletable_functions)', 'args': ['not', '($name', 'in', '$undeletable_functions)'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'mem not ($name in $undeletable_functions)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_functions', 'self.get_var("undeletable_functions")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['o', 'in'], ['v', 'undeletable_functions', 'self.get_var("undeletable_functions")'], ['l', ')']]}, {'str': 'gotoif tmplabelif38_2', 'command': 'gotoif', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'gotoif tmplabelif38_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif38_2']], 'args_eval': [['o', 'tmplabelif38_2']]}, {'str': 'raise (Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'command': 'raise', 'args_str': '(Error(\'FunctionCannotBeDeleted\', \'function "\' + $name + \'" is a builtin function and cannot be deleted\'))', 'args': ["(Error('FunctionCannotBeDeleted',", "'function", '"\'', '+', '$name', '+', '\'"', 'is', 'a', 'builtin', 'function', 'and', 'cannot', 'be', "deleted'))"], 'file_path': '@stdlib.func', 'line_number': 45, 'strings': [[False, 'raise (Error('], [True, "'FunctionCannotBeDeleted'"], [False, ', '], [True, '\'function "\''], [False, ' + $name + '], [True, '\'" is a builtin function and cannot be deleted\''], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'FunctionCannotBeDeleted'"], ['l', ','], ['s', '\'function "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is a builtin function and cannot be deleted\''], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'FunctionCannotBeDeleted'"], ['l', ','], ['s', '\'function "\''], ['l', '+'], ['v', 'name', 'self.get_var("name")'], ['l', '+'], ['s', '\'" is a builtin function and cannot be deleted\''], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 46, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif38_2', 'command': 'label', 'args_str': 'tmplabelif38_2', 'args': ['tmplabelif38_2'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif38_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif38_2']], 'args_eval': [['o', 'tmplabelif38_2']]}, {'str': 'label tmplabelif38_end', 'command': 'label', 'args_str': 'tmplabelif38_end', 'args': ['tmplabelif38_end'], 'file_path': '<system>', 'line_number': 26, 'strings': [[False, 'label tmplabelif38_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif38_end']], 'args_eval': [['o', 'tmplabelif38_end']]}, {'str': 'python ("del self.functions[self.get_var(\'name\')]")', 'command': 'python', 'args_str': '("del self.functions[self.get_var(\'name\')]")', 'args': ['("del', 'self.functions[self.get_var(\'name\')]")'], 'file_path': '@stdlib.func', 'line_number': 48, 'strings': [[False, 'python ('], [True, '"del self.functions[self.get_var(\'name\')]"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"del self.functions[self.get_var(\'name\')]"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"del self.functions[self.get_var(\'name\')]"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 49, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@stdlib.func', 'line_number': 50, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["stdlib.io"] = [{'str': '@doc """Prints a object on stdout."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout."""'], 'file_path': '@stdlib.io', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stdout."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Prints a object on stdout."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Prints a object on stdout."'], ['s', '""']]}, {'str': 'func print(*$value)', 'command': 'func', 'args_str': 'print(*$value)', 'args': ['print(*$value)'], 'file_path': '@stdlib.io', 'line_number': 23, 'strings': [[False, 'func print(*$value)']], 'eval': [['o', 'func'], ['o', 'print'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'print'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'mem self.print($value)', 'command': 'mem', 'args_str': 'self.print($value)', 'args': ['self.print($value)'], 'file_path': '@stdlib.io', 'line_number': 24, 'strings': [[False, 'mem self.print($value)']], 'eval': [['o', 'mem'], ['o', 'self.print'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'self.print'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Prints a object on stdout and goes to next line."""', 'command': '@doc', 'args_str': '"""Prints a object on stdout and goes to next line."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stdout', 'and', 'goes', 'to', 'next', 'line."""'], 'file_path': '@stdlib.io', 'line_number': 26, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stdout and goes to next line."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Prints a object on stdout and goes to next line."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Prints a object on stdout and goes to next line."'], ['s', '""']]}, {'str': 'func println(*$value)', 'command': 'func', 'args_str': 'println(*$value)', 'args': ['println(*$value)'], 'file_path': '@stdlib.io', 'line_number': 27, 'strings': [[False, 'func println(*$value)']], 'eval': [['o', 'func'], ['o', 'println'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'println'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'print ($value)', 'command': 'print', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 28, 'strings': [[False, 'print ($value)']], 'eval': [['o', 'print'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "print ('\\n')", 'command': 'print', 'args_str': "('\\n')", 'args': ["('\\n')"], 'file_path': '@stdlib.io', 'line_number': 29, 'strings': [[False, 'print ('], [True, "'\\n'"], [False, ')']], 'eval': [['o', 'print'], ['l', '('], ['s', "'\\n'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'\\n'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 30, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func printl(*$value)', 'command': 'func', 'args_str': 'printl(*$value)', 'args': ['printl(*$value)'], 'file_path': '@stdlib.io', 'line_number': 31, 'strings': [[False, 'func printl(*$value)']], 'eval': [['o', 'func'], ['o', 'printl'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'printl'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'println ($value)', 'command': 'println', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@stdlib.io', 'line_number': 32, 'strings': [[False, 'println ($value)']], 'eval': [['o', 'println'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 33, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Prints a object on stderr."""', 'command': '@doc', 'args_str': '"""Prints a object on stderr."""', 'args': ['"""Prints', 'a', 'object', 'on', 'stderr."""'], 'file_path': '@stdlib.io', 'line_number': 34, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on stderr."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Prints a object on stderr."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Prints a object on stderr."'], ['s', '""']]}, {'str': 'func perror(*$value)', 'command': 'func', 'args_str': 'perror(*$value)', 'args': ['perror(*$value)'], 'file_path': '@stdlib.io', 'line_number': 35, 'strings': [[False, 'func perror(*$value)']], 'eval': [['o', 'func'], ['o', 'perror'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'perror'], ['l', '('], ['l', '*'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'mem self.print($value, file=sys.stderr)', 'command': 'mem', 'args_str': 'self.print($value, file=sys.stderr)', 'args': ['self.print($value,', 'file=sys.stderr)'], 'file_path': '@stdlib.io', 'line_number': 36, 'strings': [[False, 'mem self.print($value, file=sys.stderr)']], 'eval': [['o', 'mem'], ['o', 'self.print'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'file'], ['l', '='], ['o', 'sys.stderr'], ['l', ')']], 'args_eval': [['o', 'self.print'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['o', 'file'], ['l', '='], ['o', 'sys.stderr'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'command': '@doc', 'args_str': '"""Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."""', 'args': ['"""Prints', 'a', 'object', 'on', 'a', 'file.\\nFirst', 'argument', 'is', 'the', 'object', 'that', 'you', 'want', 'to', 'print.\\nSecond', 'argument', 'is', 'the', 'file', 'that', 'you', 'want', 'to', 'print', 'on,', 'but', 'is', 'optional.', 'default', 'is', 'stdout', 'file."""'], 'file_path': '@stdlib.io', 'line_number': 38, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Prints a object on a file.\\nFirst argument is the object that you want to print.\\nSecond argument is the file that you want to print on, but is optional. default is stdout file."'], ['s', '""']]}, {'str': 'func printf($value, $file=null)', 'command': 'func', 'args_str': 'printf($value, $file=null)', 'args': ['printf($value,', '$file=null)'], 'file_path': '@stdlib.io', 'line_number': 39, 'strings': [[False, 'func printf($value, $file=null)']], 'eval': [['o', 'func'], ['o', 'printf'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['v', 'file', 'self.get_var("file")'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'printf'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ','], ['v', 'file', 'self.get_var("file")'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'if $file is null', 'command': 'if', 'args_str': '$file is null', 'args': ['$file', 'is', 'null'], 'file_path': '@stdlib.io', 'line_number': 40, 'strings': [[False, 'if $file is null']], 'eval': [['o', 'if'], ['v', 'file', 'self.get_var("file")'], ['o', 'is'], ['o', 'null']], 'args_eval': [['v', 'file', 'self.get_var("file")'], ['o', 'is'], ['o', 'null']]}, {'str': 'mem not ($file is null)', 'command': 'mem', 'args_str': 'not ($file is null)', 'args': ['not', '($file', 'is', 'null)'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'mem not ($file is null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'file', 'self.get_var("file")'], ['o', 'is'], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'file', 'self.get_var("file")'], ['o', 'is'], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif39_2', 'command': 'gotoif', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 18, 'strings': [[False, 'gotoif tmplabelif39_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif39_2']], 'args_eval': [['o', 'tmplabelif39_2']]}, {'str': '$file = python("self.mem = sys.stdout")', 'command': '$file', 'args_str': '= python("self.mem = sys.stdout")', 'args': ['=', 'python("self.mem', '=', 'sys.stdout")'], 'file_path': '@stdlib.io', 'line_number': 41, 'strings': [[False, '$file = python('], [True, '"self.mem = sys.stdout"'], [False, ')']], 'eval': [['v', 'file', 'self.get_var("file")'], ['l', '='], ['o', 'python'], ['l', '('], ['s', '"self.mem = sys.stdout"'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'python'], ['l', '('], ['s', '"self.mem = sys.stdout"'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 42, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif39_2', 'command': 'label', 'args_str': 'tmplabelif39_2', 'args': ['tmplabelif39_2'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'label tmplabelif39_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif39_2']], 'args_eval': [['o', 'tmplabelif39_2']]}, {'str': 'label tmplabelif39_end', 'command': 'label', 'args_str': 'tmplabelif39_end', 'args': ['tmplabelif39_end'], 'file_path': '<system>', 'line_number': 22, 'strings': [[False, 'label tmplabelif39_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif39_end']], 'args_eval': [['o', 'tmplabelif39_end']]}, {'str': '$file->write (str($value))', 'command': '$file->write', 'args_str': '(str($value))', 'args': ['(str($value))'], 'file_path': '@stdlib.io', 'line_number': 43, 'strings': [[False, '$file->write (str($value))']], 'eval': [['v', 'file', 'self.get_var("file")'], ['l', '.'], ['n', 'write'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 44, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Opens the output buffer."""', 'command': '@doc', 'args_str': '"""Opens the output buffer."""', 'args': ['"""Opens', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 45, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Opens the output buffer."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Opens the output buffer."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Opens the output buffer."'], ['s', '""']]}, {'str': 'func out_start()', 'command': 'func', 'args_str': 'out_start()', 'args': ['out_start()'], 'file_path': '@stdlib.io', 'line_number': 46, 'strings': [[False, 'func out_start()']], 'eval': [['o', 'func'], ['o', 'out_start'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_start'], ['l', '('], ['l', ')']]}, {'str': 'python ("self.out_started = True")', 'command': 'python', 'args_str': '("self.out_started = True")', 'args': ['("self.out_started', '=', 'True")'], 'file_path': '@stdlib.io', 'line_number': 47, 'strings': [[False, 'python ('], [True, '"self.out_started = True"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.out_started = True"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.out_started = True"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 48, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Closes the output buffer."""', 'command': '@doc', 'args_str': '"""Closes the output buffer."""', 'args': ['"""Closes', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 49, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Closes the output buffer."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Closes the output buffer."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Closes the output buffer."'], ['s', '""']]}, {'str': 'func out_end()', 'command': 'func', 'args_str': 'out_end()', 'args': ['out_end()'], 'file_path': '@stdlib.io', 'line_number': 50, 'strings': [[False, 'func out_end()']], 'eval': [['o', 'func'], ['o', 'out_end'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_end'], ['l', '('], ['l', ')']]}, {'str': 'python ("self.out_started = False")', 'command': 'python', 'args_str': '("self.out_started = False")', 'args': ['("self.out_started', '=', 'False")'], 'file_path': '@stdlib.io', 'line_number': 51, 'strings': [[False, 'python ('], [True, '"self.out_started = False"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.out_started = False"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.out_started = False"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 52, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Clears the output buffer."""', 'command': '@doc', 'args_str': '"""Clears the output buffer."""', 'args': ['"""Clears', 'the', 'output', 'buffer."""'], 'file_path': '@stdlib.io', 'line_number': 53, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Clears the output buffer."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Clears the output buffer."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Clears the output buffer."'], ['s', '""']]}, {'str': 'func out_clean()', 'command': 'func', 'args_str': 'out_clean()', 'args': ['out_clean()'], 'file_path': '@stdlib.io', 'line_number': 54, 'strings': [[False, 'func out_clean()']], 'eval': [['o', 'func'], ['o', 'out_clean'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_clean'], ['l', '('], ['l', ')']]}, {'str': 'python ("self.out_content = \'\'")', 'command': 'python', 'args_str': '("self.out_content = \'\'")', 'args': ['("self.out_content', '=', '\'\'")'], 'file_path': '@stdlib.io', 'line_number': 55, 'strings': [[False, 'python ('], [True, '"self.out_content = \'\'"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.out_content = \'\'"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.out_content = \'\'"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 56, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Returns the output buffer as string."""', 'command': '@doc', 'args_str': '"""Returns the output buffer as string."""', 'args': ['"""Returns', 'the', 'output', 'buffer', 'as', 'string."""'], 'file_path': '@stdlib.io', 'line_number': 57, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns the output buffer as string."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Returns the output buffer as string."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Returns the output buffer as string."'], ['s', '""']]}, {'str': 'func out_get()', 'command': 'func', 'args_str': 'out_get()', 'args': ['out_get()'], 'file_path': '@stdlib.io', 'line_number': 58, 'strings': [[False, 'func out_get()']], 'eval': [['o', 'func'], ['o', 'out_get'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_get'], ['l', '('], ['l', ')']]}, {'str': 'python ("self.mem = self.out_content")', 'command': 'python', 'args_str': '("self.mem = self.out_content")', 'args': ['("self.mem', '=', 'self.out_content")'], 'file_path': '@stdlib.io', 'line_number': 59, 'strings': [[False, 'python ('], [True, '"self.mem = self.out_content"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.mem = self.out_content"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.mem = self.out_content"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 60, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Returns output buffer and clears that."""', 'command': '@doc', 'args_str': '"""Returns output buffer and clears that."""', 'args': ['"""Returns', 'output', 'buffer', 'and', 'clears', 'that."""'], 'file_path': '@stdlib.io', 'line_number': 61, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Returns output buffer and clears that."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Returns output buffer and clears that."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Returns output buffer and clears that."'], ['s', '""']]}, {'str': 'func out_get_clean()', 'command': 'func', 'args_str': 'out_get_clean()', 'args': ['out_get_clean()'], 'file_path': '@stdlib.io', 'line_number': 62, 'strings': [[False, 'func out_get_clean()']], 'eval': [['o', 'func'], ['o', 'out_get_clean'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'out_get_clean'], ['l', '('], ['l', ')']]}, {'str': '$content = out_get()', 'command': '$content', 'args_str': '= out_get()', 'args': ['=', 'out_get()'], 'file_path': '@stdlib.io', 'line_number': 63, 'strings': [[False, '$content = out_get()']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['o', 'out_get'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'out_get'], ['l', '('], ['l', ')']]}, {'str': 'out_clean ()', 'command': 'out_clean', 'args_str': '()', 'args': ['()'], 'file_path': '@stdlib.io', 'line_number': 64, 'strings': [[False, 'out_clean ()']], 'eval': [['o', 'out_clean'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@stdlib.io', 'line_number': 65, 'strings': [[False, 'return $content']], 'eval': [['o', 'return'], ['v', 'content', 'self.get_var("content")']], 'args_eval': [['v', 'content', 'self.get_var("content")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 66, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'command': '@doc', 'args_str': '"""Exits program.\\nThe argument is the exit code(is optional, default is 0)."""', 'args': ['"""Exits', 'program.\\nThe', 'argument', 'is', 'the', 'exit', 'code(is', 'optional,', 'default', 'is', '0)."""'], 'file_path': '@stdlib.io', 'line_number': 67, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Exits program.\\nThe argument is the exit code(is optional, default is 0)."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Exits program.\\nThe argument is the exit code(is optional, default is 0)."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Exits program.\\nThe argument is the exit code(is optional, default is 0)."'], ['s', '""']]}, {'str': 'func exit(int $code=0)', 'command': 'func', 'args_str': 'exit(int $code=0)', 'args': ['exit(int', '$code=0)'], 'file_path': '@stdlib.io', 'line_number': 68, 'strings': [[False, 'func exit(int $code=0)']], 'eval': [['o', 'func'], ['o', 'exit'], ['l', '('], ['o', 'int'], ['v', 'code', 'self.get_var("code")'], ['l', '='], ['o', '0'], ['l', ')']], 'args_eval': [['o', 'exit'], ['l', '('], ['o', 'int'], ['v', 'code', 'self.get_var("code")'], ['l', '='], ['o', '0'], ['l', ')']]}, {'str': 'python ("self.exit_program(self.get_var(\'code\'))")', 'command': 'python', 'args_str': '("self.exit_program(self.get_var(\'code\'))")', 'args': ['("self.exit_program(self.get_var(\'code\'))")'], 'file_path': '@stdlib.io', 'line_number': 69, 'strings': [[False, 'python ('], [True, '"self.exit_program(self.get_var(\'code\'))"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.exit_program(self.get_var(\'code\'))"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.exit_program(self.get_var(\'code\'))"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 70, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Reads a input from user from stdin."""', 'command': '@doc', 'args_str': '"""Reads a input from user from stdin."""', 'args': ['"""Reads', 'a', 'input', 'from', 'user', 'from', 'stdin."""'], 'file_path': '@stdlib.io', 'line_number': 71, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Reads a input from user from stdin."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Reads a input from user from stdin."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Reads a input from user from stdin."'], ['s', '""']]}, {'str': "func string::read(string $message='')", 'command': 'func', 'args_str': "string::read(string $message='')", 'args': ['string::read(string', "$message='')"], 'file_path': '@stdlib.io', 'line_number': 72, 'strings': [[False, 'func string::read(string $message='], [True, "''"], [False, ')']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'read'], ['l', '('], ['o', 'string'], ['v', 'message', 'self.get_var("message")'], ['l', '='], ['s', "''"], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'read'], ['l', '('], ['o', 'string'], ['v', 'message', 'self.get_var("message")'], ['l', '='], ['s', "''"], ['l', ')']]}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 73, 'strings': [[False, 'print ($message)']], 'eval': [['o', 'print'], ['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', ')']]}, {'str': 'python ("self.io_read()")', 'command': 'python', 'args_str': '("self.io_read()")', 'args': ['("self.io_read()")'], 'file_path': '@stdlib.io', 'line_number': 74, 'strings': [[False, 'python ('], [True, '"self.io_read()"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.io_read()"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.io_read()"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 75, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Dumps a object."""', 'command': '@doc', 'args_str': '"""Dumps a object."""', 'args': ['"""Dumps', 'a', 'object."""'], 'file_path': '@stdlib.io', 'line_number': 76, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Dumps a object."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Dumps a object."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Dumps a object."'], ['s', '""']]}, {'str': 'func var_dump($obj)', 'command': 'func', 'args_str': 'var_dump($obj)', 'args': ['var_dump($obj)'], 'file_path': '@stdlib.io', 'line_number': 77, 'strings': [[False, 'func var_dump($obj)']], 'eval': [['o', 'func'], ['o', 'var_dump'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']], 'args_eval': [['o', 'var_dump'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']]}, {'str': 'python ("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'command': 'python', 'args_str': '("class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())")', 'args': ['("class', 'Tmp:\\n', 'def', 'write(self,', 'value):\\n', "current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var('obj'),", 'Tmp())")'], 'file_path': '@stdlib.io', 'line_number': 78, 'strings': [[False, 'python ('], [True, '"class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"class Tmp:\\n    def write(self, value):\\n        current_prog.current_prog.print(str(value))\\npprint.pprint(self.get_var(\'obj\'), Tmp())"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 79, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'command': '@doc', 'args_str': '"""Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."""', 'args': ['"""Prints', 'something', 'and', 'exits', 'program.\\nThe', 'first', 'argument', 'is', 'that', 'thing', 'you', 'want', 'to', 'print(Optional,default', 'is', 'null).\\nThe', 'second', 'argument', 'is', 'exit', 'code(is', 'optional,', 'default', 'is', '1)."""'], 'file_path': '@stdlib.io', 'line_number': 80, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Prints something and exits program.\\nThe first argument is that thing you want to print(Optional,default is null).\\nThe second argument is exit code(is optional, default is 1)."'], ['s', '""']]}, {'str': "func die($message='', int $exit_code=1)", 'command': 'func', 'args_str': "die($message='', int $exit_code=1)", 'args': ["die($message='',", 'int', '$exit_code=1)'], 'file_path': '@stdlib.io', 'line_number': 81, 'strings': [[False, 'func die($message='], [True, "''"], [False, ', int $exit_code=1)']], 'eval': [['o', 'func'], ['o', 'die'], ['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', '='], ['s', "''"], ['l', ','], ['o', 'int'], ['v', 'exit_code', 'self.get_var("exit_code")'], ['l', '='], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'die'], ['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', '='], ['s', "''"], ['l', ','], ['o', 'int'], ['v', 'exit_code', 'self.get_var("exit_code")'], ['l', '='], ['o', '1'], ['l', ')']]}, {'str': 'print ($message)', 'command': 'print', 'args_str': '($message)', 'args': ['($message)'], 'file_path': '@stdlib.io', 'line_number': 82, 'strings': [[False, 'print ($message)']], 'eval': [['o', 'print'], ['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'message', 'self.get_var("message")'], ['l', ')']]}, {'str': 'exit ($exit_code)', 'command': 'exit', 'args_str': '($exit_code)', 'args': ['($exit_code)'], 'file_path': '@stdlib.io', 'line_number': 83, 'strings': [[False, 'exit ($exit_code)']], 'eval': [['o', 'exit'], ['l', '('], ['v', 'exit_code', 'self.get_var("exit_code")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'exit_code', 'self.get_var("exit_code")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.io', 'line_number': 84, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}]
modules["stdlib.obj"] = [{'str': '@doc """Is parent of all of classes."""', 'command': '@doc', 'args_str': '"""Is parent of all of classes."""', 'args': ['"""Is', 'parent', 'of', 'all', 'of', 'classes."""'], 'file_path': '@stdlib.obj', 'line_number': 22, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Is parent of all of classes."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Is parent of all of classes."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Is parent of all of classes."'], ['s', '""']]}, {'str': 'class Object', 'command': 'class', 'args_str': 'Object', 'args': ['Object'], 'file_path': '@stdlib.obj', 'line_number': 23, 'strings': [[False, 'class Object']], 'eval': [['o', 'class'], ['o', 'Object']], 'args_eval': [['o', 'Object']]}, {'str': 'func __init__()', 'command': 'func', 'args_str': '__init__()', 'args': ['__init__()'], 'file_path': '@stdlib.obj', 'line_number': 24, 'strings': [[False, 'func __init__()']], 'eval': [['o', 'func'], ['o', '__init__'], ['l', '('], ['l', ')']], 'args_eval': [['o', '__init__'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::__str__()', 'command': 'func', 'args_str': 'string::__str__()', 'args': ['string::__str__()'], 'file_path': '@stdlib.obj', 'line_number': 26, 'strings': [[False, 'func string::__str__()']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__str__'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', '__str__'], ['l', '('], ['l', ')']]}, {'str': 'return \'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'command': 'return', 'args_str': '\'[PashmakObject name="\' + $this->__name__ + \'"]\'', 'args': ["'[PashmakObject", 'name="\'', '+', '$this->__name__', '+', '\'"]\''], 'file_path': '@stdlib.obj', 'line_number': 27, 'strings': [[False, 'return '], [True, '\'[PashmakObject name="\''], [False, ' + $this->__name__ + '], [True, '\'"]\''], [False, '']], 'eval': [['o', 'return'], ['s', '\'[PashmakObject name="\''], ['l', '+'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', '__name__'], ['l', '+'], ['s', '\'"]\'']], 'args_eval': [['s', '\'[PashmakObject name="\''], ['l', '+'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', '__name__'], ['l', '+'], ['s', '\'"]\'']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'command': '@doc', 'args_str': '"""    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    """', 'args': ['"""', 'Checks', 'is', 'this', 'object', 'instance', 'of', 'a', 'class.\\n', 'Gets', 'that', 'class', 'as', 'argument(You', 'can', 'pass', 'class', 'name', 'as', 'string', 'or', 'class', 'object).', '"""'], 'file_path': '@stdlib.obj', 'line_number': 29, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"    Checks is this object instance of a class.\\n    Gets that class as argument(You can pass class name as string or class object).    "'], ['s', '""']]}, {'str': 'func bool::isinstanceof($class)', 'command': 'func', 'args_str': 'bool::isinstanceof($class)', 'args': ['bool::isinstanceof($class)'], 'file_path': '@stdlib.obj', 'line_number': 30, 'strings': [[False, 'func bool::isinstanceof($class)']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isinstanceof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isinstanceof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')']]}, {'str': 'if typeof($class) != str', 'command': 'if', 'args_str': 'typeof($class) != str', 'args': ['typeof($class)', '!=', 'str'], 'file_path': '@stdlib.obj', 'line_number': 31, 'strings': [[False, 'if typeof($class) != str']], 'eval': [['o', 'if'], ['o', 'typeof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'str']], 'args_eval': [['o', 'typeof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'str']]}, {'str': 'mem not (typeof($class) != str)', 'command': 'mem', 'args_str': 'not (typeof($class) != str)', 'args': ['not', '(typeof($class)', '!=', 'str)'], 'file_path': '<system>', 'line_number': 9, 'strings': [[False, 'mem not (typeof($class) != str)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'typeof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'str'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'typeof'], ['l', '('], ['v', 'class', 'self.get_var("class")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', 'str'], ['l', ')']]}, {'str': 'gotoif tmplabelif40_2', 'command': 'gotoif', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 9, 'strings': [[False, 'gotoif tmplabelif40_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif40_2']], 'args_eval': [['o', 'tmplabelif40_2']]}, {'str': '$class = $class->__name__', 'command': '$class', 'args_str': '= $class->__name__', 'args': ['=', '$class->__name__'], 'file_path': '@stdlib.obj', 'line_number': 32, 'strings': [[False, '$class = $class->__name__']], 'eval': [['v', 'class', 'self.get_var("class")'], ['l', '='], ['v', 'class', 'self.get_var("class")'], ['l', '.'], ['n', '__name__']], 'args_eval': [['l', '='], ['v', 'class', 'self.get_var("class")'], ['l', '.'], ['n', '__name__']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 33, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif40_2', 'command': 'label', 'args_str': 'tmplabelif40_2', 'args': ['tmplabelif40_2'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif40_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif40_2']], 'args_eval': [['o', 'tmplabelif40_2']]}, {'str': 'label tmplabelif40_end', 'command': 'label', 'args_str': 'tmplabelif40_end', 'args': ['tmplabelif40_end'], 'file_path': '<system>', 'line_number': 13, 'strings': [[False, 'label tmplabelif40_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif40_end']], 'args_eval': [['o', 'tmplabelif40_end']]}, {'str': 'return $class in $this->__inheritance_tree__', 'command': 'return', 'args_str': '$class in $this->__inheritance_tree__', 'args': ['$class', 'in', '$this->__inheritance_tree__'], 'file_path': '@stdlib.obj', 'line_number': 34, 'strings': [[False, 'return $class in $this->__inheritance_tree__']], 'eval': [['o', 'return'], ['v', 'class', 'self.get_var("class")'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', '__inheritance_tree__']], 'args_eval': [['v', 'class', 'self.get_var("class")'], ['o', 'in'], ['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', '__inheritance_tree__']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 35, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 36, 'strings': [[False, 'endclass']], 'eval': [['o', 'endclass']], 'args_eval': []}, {'str': '@doc "Returns value of a variable by name of variable as string"', 'command': '@doc', 'args_str': '"Returns value of a variable by name of variable as string"', 'args': ['"Returns', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'string"'], 'file_path': '@stdlib.obj', 'line_number': 37, 'strings': [[False, '@doc '], [True, '"Returns value of a variable by name of variable as string"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Returns value of a variable by name of variable as string"']], 'args_eval': [['s', '"Returns value of a variable by name of variable as string"']]}, {'str': 'func get()', 'command': 'func', 'args_str': 'get()', 'args': ['get()'], 'file_path': '@stdlib.obj', 'line_number': 38, 'strings': [[False, 'func get()']], 'eval': [['o', 'func'], ['o', 'get'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'get'], ['l', '('], ['l', ')']]}, {'str': 'return python("self.mem = self.get_var(" + repr(^) + ")")', 'command': 'return', 'args_str': 'python("self.mem = self.get_var(" + repr(^) + ")")', 'args': ['python("self.mem', '=', 'self.get_var("', '+', 'repr(^)', '+', '")")'], 'file_path': '@stdlib.obj', 'line_number': 39, 'strings': [[False, 'return python('], [True, '"self.mem = self.get_var("'], [False, ' + repr(^) + '], [True, '")"'], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', '"self.mem = self.get_var("'], ['l', '+'], ['o', 'repr'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')'], ['l', '+'], ['s', '")"'], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', '"self.mem = self.get_var("'], ['l', '+'], ['o', 'repr'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')'], ['l', '+'], ['s', '")"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 40, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'command': '@doc', 'args_str': '"""Sets value of a variable by name of variable as first argument as stringAnd value as second argument"""', 'args': ['"""Sets', 'value', 'of', 'a', 'variable', 'by', 'name', 'of', 'variable', 'as', 'first', 'argument', 'as', 'stringAnd', 'value', 'as', 'second', 'argument"""'], 'file_path': '@stdlib.obj', 'line_number': 41, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets value of a variable by name of variable as first argument as stringAnd value as second argument"'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Sets value of a variable by name of variable as first argument as stringAnd value as second argument"'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Sets value of a variable by name of variable as first argument as stringAnd value as second argument"'], ['s', '""']]}, {'str': 'func set(string $name, $value=null)', 'command': 'func', 'args_str': 'set(string $name, $value=null)', 'args': ['set(string', '$name,', '$value=null)'], 'file_path': '@stdlib.obj', 'line_number': 42, 'strings': [[False, 'func set(string $name, $value=null)']], 'eval': [['o', 'func'], ['o', 'set'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'set'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'python ("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'command': 'python', 'args_str': '("self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')")', 'args': ['("self.frames[-3][\'vars\'][self.get_var(\'name\')]', '=', 'self.get_var(\'value\')")'], 'file_path': '@stdlib.obj', 'line_number': 43, 'strings': [[False, 'python ('], [True, '"self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.frames[-3][\'vars\'][self.get_var(\'name\')] = self.get_var(\'value\')"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 44, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func bool::isset()', 'command': 'func', 'args_str': 'bool::isset()', 'args': ['bool::isset()'], 'file_path': '@stdlib.obj', 'line_number': 45, 'strings': [[False, 'func bool::isset()']], 'eval': [['o', 'func'], ['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isset'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'bool'], ['l', ':'], ['l', ':'], ['o', 'isset'], ['l', '('], ['l', ')']]}, {'str': "return python('self.mem = self.variable_exists(' + repr(^) + ')')", 'command': 'return', 'args_str': "python('self.mem = self.variable_exists(' + repr(^) + ')')", 'args': ["python('self.mem", '=', "self.variable_exists('", '+', 'repr(^)', '+', "')')"], 'file_path': '@stdlib.obj', 'line_number': 46, 'strings': [[False, 'return python('], [True, "'self.mem = self.variable_exists('"], [False, ' + repr(^) + '], [True, "')'"], [False, ')']], 'eval': [['o', 'return'], ['o', 'python'], ['l', '('], ['s', "'self.mem = self.variable_exists('"], ['l', '+'], ['o', 'repr'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')'], ['l', '+'], ['s', "')'"], ['l', ')']], 'args_eval': [['o', 'python'], ['l', '('], ['s', "'self.mem = self.variable_exists('"], ['l', '+'], ['o', 'repr'], ['l', '('], ['o', 'self.get_mem()'], ['l', ')'], ['l', '+'], ['s', "')'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 47, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Makes a copy from an object and returns the copy"', 'command': '@doc', 'args_str': '"Makes a copy from an object and returns the copy"', 'args': ['"Makes', 'a', 'copy', 'from', 'an', 'object', 'and', 'returns', 'the', 'copy"'], 'file_path': '@stdlib.obj', 'line_number': 48, 'strings': [[False, '@doc '], [True, '"Makes a copy from an object and returns the copy"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Makes a copy from an object and returns the copy"']], 'args_eval': [['s', '"Makes a copy from an object and returns the copy"']]}, {'str': 'func clone($obj)', 'command': 'func', 'args_str': 'clone($obj)', 'args': ['clone($obj)'], 'file_path': '@stdlib.obj', 'line_number': 49, 'strings': [[False, 'func clone($obj)']], 'eval': [['o', 'func'], ['o', 'clone'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']], 'args_eval': [['o', 'clone'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']]}, {'str': 'return copy.deepcopy($obj)', 'command': 'return', 'args_str': 'copy.deepcopy($obj)', 'args': ['copy.deepcopy($obj)'], 'file_path': '@stdlib.obj', 'line_number': 50, 'strings': [[False, 'return copy.deepcopy($obj)']], 'eval': [['o', 'return'], ['o', 'copy.deepcopy'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']], 'args_eval': [['o', 'copy.deepcopy'], ['l', '('], ['v', 'obj', 'self.get_var("obj")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@stdlib.obj', 'line_number': 51, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}]
modules["string"] = [{'str': 'ns string', 'command': 'ns', 'args_str': 'string', 'args': ['string'], 'file_path': '@string', 'line_number': 23, 'strings': [[False, 'ns string']], 'eval': [['o', 'ns'], ['o', 'string']], 'args_eval': [['o', 'string']]}, {'str': 'func string::concat(string $a, string $b)', 'command': 'func', 'args_str': 'string::concat(string $a, string $b)', 'args': ['string::concat(string', '$a,', 'string', '$b)'], 'file_path': '@string', 'line_number': 24, 'strings': [[False, 'func string::concat(string $a, string $b)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'concat'], ['l', '('], ['o', 'string'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'string'], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'concat'], ['l', '('], ['o', 'string'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'string'], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'return $a + $b', 'command': 'return', 'args_str': '$a + $b', 'args': ['$a', '+', '$b'], 'file_path': '@string', 'line_number': 25, 'strings': [[False, 'return $a + $b']], 'eval': [['o', 'return'], ['v', 'a', 'self.get_var("a")'], ['l', '+'], ['v', 'b', 'self.get_var("b")']], 'args_eval': [['v', 'a', 'self.get_var("a")'], ['l', '+'], ['v', 'b', 'self.get_var("b")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 26, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::remove_last(string $str)', 'command': 'func', 'args_str': 'string::remove_last(string $str)', 'args': ['string::remove_last(string', '$str)'], 'file_path': '@string', 'line_number': 27, 'strings': [[False, 'func string::remove_last(string $str)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'remove_last'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'remove_last'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return $str[:-1]', 'command': 'return', 'args_str': '$str[:-1]', 'args': ['$str[:-1]'], 'file_path': '@string', 'line_number': 28, 'strings': [[False, 'return $str[:-1]']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '['], ['l', ':'], ['l', '-'], ['o', '1'], ['l', ']']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '['], ['l', ':'], ['l', '-'], ['o', '1'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 29, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::remove_first(string $str)', 'command': 'func', 'args_str': 'string::remove_first(string $str)', 'args': ['string::remove_first(string', '$str)'], 'file_path': '@string', 'line_number': 30, 'strings': [[False, 'func string::remove_first(string $str)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'remove_first'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'remove_first'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return $str[1:]', 'command': 'return', 'args_str': '$str[1:]', 'args': ['$str[1:]'], 'file_path': '@string', 'line_number': 31, 'strings': [[False, 'return $str[1:]']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '['], ['o', '1'], ['l', ':'], ['l', ']']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '['], ['o', '1'], ['l', ':'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 32, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::add_last(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_last(string $str, string $new)', 'args': ['string::add_last(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 33, 'strings': [[False, 'func string::add_last(string $str, string $new)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'add_last'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'string'], ['v', 'new', 'self.get_var("new")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'add_last'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'string'], ['v', 'new', 'self.get_var("new")'], ['l', ')']]}, {'str': 'return $str + $new', 'command': 'return', 'args_str': '$str + $new', 'args': ['$str', '+', '$new'], 'file_path': '@string', 'line_number': 34, 'strings': [[False, 'return $str + $new']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '+'], ['v', 'new', 'self.get_var("new")']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '+'], ['v', 'new', 'self.get_var("new")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 35, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::add_first(string $str, string $new)', 'command': 'func', 'args_str': 'string::add_first(string $str, string $new)', 'args': ['string::add_first(string', '$str,', 'string', '$new)'], 'file_path': '@string', 'line_number': 36, 'strings': [[False, 'func string::add_first(string $str, string $new)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'add_first'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'string'], ['v', 'new', 'self.get_var("new")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'add_first'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'string'], ['v', 'new', 'self.get_var("new")'], ['l', ')']]}, {'str': 'return $new + $str', 'command': 'return', 'args_str': '$new + $str', 'args': ['$new', '+', '$str'], 'file_path': '@string', 'line_number': 37, 'strings': [[False, 'return $new + $str']], 'eval': [['o', 'return'], ['v', 'new', 'self.get_var("new")'], ['l', '+'], ['v', 'str', 'self.get_var("str")']], 'args_eval': [['v', 'new', 'self.get_var("new")'], ['l', '+'], ['v', 'str', 'self.get_var("str")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 38, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func int::length(string $str)', 'command': 'func', 'args_str': 'int::length(string $str)', 'args': ['int::length(string', '$str)'], 'file_path': '@string', 'line_number': 39, 'strings': [[False, 'func int::length(string $str)']], 'eval': [['o', 'func'], ['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'length'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'int'], ['l', ':'], ['l', ':'], ['o', 'length'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return len($str)', 'command': 'return', 'args_str': 'len($str)', 'args': ['len($str)'], 'file_path': '@string', 'line_number': 40, 'strings': [[False, 'return len($str)']], 'eval': [['o', 'return'], ['o', 'len'], ['l', '('], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 41, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::cut(string $str, int $a, int $b)', 'command': 'func', 'args_str': 'string::cut(string $str, int $a, int $b)', 'args': ['string::cut(string', '$str,', 'int', '$a,', 'int', '$b)'], 'file_path': '@string', 'line_number': 42, 'strings': [[False, 'func string::cut(string $str, int $a, int $b)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'cut'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'int'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'int'], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'cut'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ','], ['o', 'int'], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['o', 'int'], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'return $str[$a:$b]', 'command': 'return', 'args_str': '$str[$a:$b]', 'args': ['$str[$a:$b]'], 'file_path': '@string', 'line_number': 43, 'strings': [[False, 'return $str[$a:$b]']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '['], ['v', 'a', 'self.get_var("a")'], ['l', ':'], ['v', 'b', 'self.get_var("b")'], ['l', ']']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '['], ['v', 'a', 'self.get_var("a")'], ['l', ':'], ['v', 'b', 'self.get_var("b")'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 44, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::upcase(string $str)', 'command': 'func', 'args_str': 'string::upcase(string $str)', 'args': ['string::upcase(string', '$str)'], 'file_path': '@string', 'line_number': 45, 'strings': [[False, 'func string::upcase(string $str)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'upcase'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'upcase'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return $str->upper()', 'command': 'return', 'args_str': '$str->upper()', 'args': ['$str->upper()'], 'file_path': '@string', 'line_number': 46, 'strings': [[False, 'return $str->upper()']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 47, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::lowcase(string $str)', 'command': 'func', 'args_str': 'string::lowcase(string $str)', 'args': ['string::lowcase(string', '$str)'], 'file_path': '@string', 'line_number': 48, 'strings': [[False, 'func string::lowcase(string $str)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'lowcase'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'lowcase'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return $str->lower()', 'command': 'return', 'args_str': '$str->lower()', 'args': ['$str->lower()'], 'file_path': '@string', 'line_number': 49, 'strings': [[False, 'return $str->lower()']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '.'], ['n', 'lower'], ['l', '('], ['l', ')']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '.'], ['n', 'lower'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 50, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::reverse(string $str)', 'command': 'func', 'args_str': 'string::reverse(string $str)', 'args': ['string::reverse(string', '$str)'], 'file_path': '@string', 'line_number': 51, 'strings': [[False, 'func string::reverse(string $str)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'reverse'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'reverse'], ['l', '('], ['o', 'string'], ['v', 'str', 'self.get_var("str")'], ['l', ')']]}, {'str': 'return $str[::-1]', 'command': 'return', 'args_str': '$str[::-1]', 'args': ['$str[::-1]'], 'file_path': '@string', 'line_number': 52, 'strings': [[False, 'return $str[::-1]']], 'eval': [['o', 'return'], ['v', 'str', 'self.get_var("str")'], ['l', '['], ['l', ':'], ['l', ':'], ['l', '-'], ['o', '1'], ['l', ']']], 'args_eval': [['v', 'str', 'self.get_var("str")'], ['l', '['], ['l', ':'], ['l', ':'], ['l', '-'], ['o', '1'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 53, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func string::to_str($var)', 'command': 'func', 'args_str': 'string::to_str($var)', 'args': ['string::to_str($var)'], 'file_path': '@string', 'line_number': 54, 'strings': [[False, 'func string::to_str($var)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'to_str'], ['l', '('], ['v', 'var', 'self.get_var("var")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'to_str'], ['l', '('], ['v', 'var', 'self.get_var("var")'], ['l', ')']]}, {'str': 'return repr($var)', 'command': 'return', 'args_str': 'repr($var)', 'args': ['repr($var)'], 'file_path': '@string', 'line_number': 55, 'strings': [[False, 'return repr($var)']], 'eval': [['o', 'return'], ['o', 'repr'], ['l', '('], ['v', 'var', 'self.get_var("var")'], ['l', ')']], 'args_eval': [['o', 'repr'], ['l', '('], ['v', 'var', 'self.get_var("var")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 56, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@string', 'line_number': 57, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["sys"] = [{'str': 'import "@sys.path"', 'command': 'import', 'args_str': '"@sys.path"', 'args': ['"@sys.path"'], 'file_path': '@sys', 'line_number': 22, 'strings': [[False, 'import '], [True, '"@sys.path"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@sys.path"']], 'args_eval': [['s', '"@sys.path"']]}, {'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys', 'line_number': 23, 'strings': [[False, 'namespace sys']], 'eval': [['o', 'namespace'], ['o', 'sys']], 'args_eval': [['o', 'sys']]}, {'str': '$pashmakinfo = {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'command': '$pashmakinfo', 'args_str': '= {"version": version.version, "pythoninfo": sys.version.replace("\\\\n", "")}', 'args': ['=', '{"version":', 'version.version,', '"pythoninfo":', 'sys.version.replace("\\\\n",', '"")}'], 'file_path': '@sys', 'line_number': 24, 'strings': [[False, '$pashmakinfo = {'], [True, '"version"'], [False, ': version.version, '], [True, '"pythoninfo"'], [False, ': sys.version.replace('], [True, '"\\\\n"'], [False, ', '], [True, '""'], [False, ')}']], 'eval': [['v', 'pashmakinfo', 'self.get_var("pashmakinfo")'], ['l', '='], ['l', '{'], ['s', '"version"'], ['l', ':'], ['o', 'version.version'], ['l', ','], ['s', '"pythoninfo"'], ['l', ':'], ['o', 'sys.version.replace'], ['l', '('], ['s', '"\\\\n"'], ['l', ','], ['s', '""'], ['l', ')'], ['l', '}']], 'args_eval': [['l', '='], ['l', '{'], ['s', '"version"'], ['l', ':'], ['o', 'version.version'], ['l', ','], ['s', '"pythoninfo"'], ['l', ':'], ['o', 'sys.version.replace'], ['l', '('], ['s', '"\\\\n"'], ['l', ','], ['s', '""'], ['l', ')'], ['l', '}']]}, {'str': '$pashmakexe = sys.argv[0]', 'command': '$pashmakexe', 'args_str': '= sys.argv[0]', 'args': ['=', 'sys.argv[0]'], 'file_path': '@sys', 'line_number': 25, 'strings': [[False, '$pashmakexe = sys.argv[0]']], 'eval': [['v', 'pashmakexe', 'self.get_var("pashmakexe")'], ['l', '='], ['o', 'sys.argv'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['o', 'sys.argv'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys', 'line_number': 26, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["sys.path"] = [{'str': 'namespace sys', 'command': 'namespace', 'args_str': 'sys', 'args': ['sys'], 'file_path': '@sys.path', 'line_number': 22, 'strings': [[False, 'namespace sys']], 'eval': [['o', 'namespace'], ['o', 'sys']], 'args_eval': [['o', 'sys']]}, {'str': 'namespace path', 'command': 'namespace', 'args_str': 'path', 'args': ['path'], 'file_path': '@sys.path', 'line_number': 23, 'strings': [[False, 'namespace path']], 'eval': [['o', 'namespace'], ['o', 'path']], 'args_eval': [['o', 'path']]}, {'str': '@doc """        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'command': '@doc', 'args_str': '"""        Adds a new path to pashmakpath.\\n        Gets new path as string.        """', 'args': ['"""', 'Adds', 'a', 'new', 'path', 'to', 'pashmakpath.\\n', 'Gets', 'new', 'path', 'as', 'string.', '"""'], 'file_path': '@sys.path', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"        Adds a new path to pashmakpath.\\n        Gets new path as string.        "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"        Adds a new path to pashmakpath.\\n        Gets new path as string.        "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"        Adds a new path to pashmakpath.\\n        Gets new path as string.        "'], ['s', '""']]}, {'str': 'func add(string $path)', 'command': 'func', 'args_str': 'add(string $path)', 'args': ['add(string', '$path)'], 'file_path': '@sys.path', 'line_number': 25, 'strings': [[False, 'func add(string $path)']], 'eval': [['o', 'func'], ['o', 'add'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'add'], ['l', '('], ['o', 'string'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'python (\'os.environ["PASHMAKPATH"] += ";\' + str($path) + \';"\')', 'command': 'python', 'args_str': '(\'os.environ["PASHMAKPATH"] += ";\' + str($path) + \';"\')', 'args': ['(\'os.environ["PASHMAKPATH"]', '+=', '";\'', '+', 'str($path)', '+', '\';"\')'], 'file_path': '@sys.path', 'line_number': 26, 'strings': [[False, 'python ('], [True, '\'os.environ["PASHMAKPATH"] += ";\''], [False, ' + str($path) + '], [True, '\';"\''], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '\'os.environ["PASHMAKPATH"] += ";\''], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '+'], ['s', '\';"\''], ['l', ')']], 'args_eval': [['l', '('], ['s', '\'os.environ["PASHMAKPATH"] += ";\''], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '+'], ['s', '\';"\''], ['l', ')']]}, {'str': 'python ("self.bootstrap_modules()")', 'command': 'python', 'args_str': '("self.bootstrap_modules()")', 'args': ['("self.bootstrap_modules()")'], 'file_path': '@sys.path', 'line_number': 27, 'strings': [[False, 'python ('], [True, '"self.bootstrap_modules()"'], [False, ')']], 'eval': [['o', 'python'], ['l', '('], ['s', '"self.bootstrap_modules()"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"self.bootstrap_modules()"'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """        Returns pashmakpath as list of strings.        """', 'command': '@doc', 'args_str': '"""        Returns pashmakpath as list of strings.        """', 'args': ['"""', 'Returns', 'pashmakpath', 'as', 'list', 'of', 'strings.', '"""'], 'file_path': '@sys.path', 'line_number': 29, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"        Returns pashmakpath as list of strings.        "'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"        Returns pashmakpath as list of strings.        "'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"        Returns pashmakpath as list of strings.        "'], ['s', '""']]}, {'str': 'func array[string]::list()', 'command': 'func', 'args_str': 'array[string]::list()', 'args': ['array[string]::list()'], 'file_path': '@sys.path', 'line_number': 30, 'strings': [[False, 'func array[string]::list()']], 'eval': [['o', 'func'], ['o', 'array'], ['l', '['], ['o', 'string'], ['l', ']'], ['l', ':'], ['l', ':'], ['o', 'list'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'array'], ['l', '['], ['o', 'string'], ['l', ']'], ['l', ':'], ['l', ':'], ['o', 'list'], ['l', '('], ['l', ')']]}, {'str': "$paths_list = py_load_module('os')->environ['PASHMAKPATH']->strip()->split(';')", 'command': '$paths_list', 'args_str': "= py_load_module('os')->environ['PASHMAKPATH']->strip()->split(';')", 'args': ['=', "py_load_module('os')->environ['PASHMAKPATH']->strip()->split(';')"], 'file_path': '@sys.path', 'line_number': 31, 'strings': [[False, '$paths_list = py_load_module('], [True, "'os'"], [False, ')->environ['], [True, "'PASHMAKPATH'"], [False, ']->strip()->split('], [True, "';'"], [False, ')']], 'eval': [['v', 'paths_list', 'self.get_var("paths_list")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'environ'], ['l', '['], ['s', "'PASHMAKPATH'"], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "';'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'os'"], ['l', ')'], ['l', '.'], ['n', 'environ'], ['l', '['], ['s', "'PASHMAKPATH'"], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "';'"], ['l', ')']]}, {'str': "$paths_list = [item.strip() for item in $paths_list if item != '']", 'command': '$paths_list', 'args_str': "= [item.strip() for item in $paths_list if item != '']", 'args': ['=', '[item.strip()', 'for', 'item', 'in', '$paths_list', 'if', 'item', '!=', "'']"], 'file_path': '@sys.path', 'line_number': 32, 'strings': [[False, '$paths_list = [item.strip() for item in $paths_list if item != '], [True, "''"], [False, ']']], 'eval': [['v', 'paths_list', 'self.get_var("paths_list")'], ['l', '='], ['l', '['], ['o', 'item.strip'], ['l', '('], ['l', ')'], ['o', 'for'], ['o', 'item'], ['o', 'in'], ['v', 'paths_list', 'self.get_var("paths_list")'], ['o', 'if'], ['o', 'item'], ['l', '!'], ['l', '='], ['s', "''"], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['o', 'item.strip'], ['l', '('], ['l', ')'], ['o', 'for'], ['o', 'item'], ['o', 'in'], ['v', 'paths_list', 'self.get_var("paths_list")'], ['o', 'if'], ['o', 'item'], ['l', '!'], ['l', '='], ['s', "''"], ['l', ']']]}, {'str': 'return $paths_list', 'command': 'return', 'args_str': '$paths_list', 'args': ['$paths_list'], 'file_path': '@sys.path', 'line_number': 33, 'strings': [[False, 'return $paths_list']], 'eval': [['o', 'return'], ['v', 'paths_list', 'self.get_var("paths_list")']], 'args_eval': [['v', 'paths_list', 'self.get_var("paths_list")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 35, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@sys.path', 'line_number': 36, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["test"] = [{'str': 'namespace test', 'command': 'namespace', 'args_str': 'test', 'args': ['test'], 'file_path': '@test', 'line_number': 22, 'strings': [[False, 'namespace test']], 'eval': [['o', 'namespace'], ['o', 'test']], 'args_eval': [['o', 'test']]}, {'str': 'func doAssert($value)', 'command': 'func', 'args_str': 'doAssert($value)', 'args': ['doAssert($value)'], 'file_path': '@test', 'line_number': 23, 'strings': [[False, 'func doAssert($value)']], 'eval': [['o', 'func'], ['o', 'doAssert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'doAssert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'assert ($value)', 'command': 'assert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 24, 'strings': [[False, 'assert ($value)']], 'eval': [['o', 'assert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertTrue($value)', 'command': 'func', 'args_str': 'assertTrue($value)', 'args': ['assertTrue($value)'], 'file_path': '@test', 'line_number': 26, 'strings': [[False, 'func assertTrue($value)']], 'eval': [['o', 'func'], ['o', 'assertTrue'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'assertTrue'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'test.doAssert ($value)', 'command': 'test.doAssert', 'args_str': '($value)', 'args': ['($value)'], 'file_path': '@test', 'line_number': 27, 'strings': [[False, 'test.doAssert ($value)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertFalse($value)', 'command': 'func', 'args_str': 'assertFalse($value)', 'args': ['assertFalse($value)'], 'file_path': '@test', 'line_number': 29, 'strings': [[False, 'func assertFalse($value)']], 'eval': [['o', 'func'], ['o', 'assertFalse'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'assertFalse'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'test.doAssert (not $value)', 'command': 'test.doAssert', 'args_str': '(not $value)', 'args': ['(not', '$value)'], 'file_path': '@test', 'line_number': 30, 'strings': [[False, 'test.doAssert (not $value)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['o', 'not'], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'not'], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 31, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertEquals($a, $b)', 'command': 'func', 'args_str': 'assertEquals($a, $b)', 'args': ['assertEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 32, 'strings': [[False, 'func assertEquals($a, $b)']], 'eval': [['o', 'func'], ['o', 'assertEquals'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'assertEquals'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'test.doAssert ($a == $b)', 'command': 'test.doAssert', 'args_str': '($a == $b)', 'args': ['($a', '==', '$b)'], 'file_path': '@test', 'line_number': 33, 'strings': [[False, 'test.doAssert ($a == $b)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', '='], ['l', '='], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', '='], ['l', '='], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertNotEquals($a, $b)', 'command': 'func', 'args_str': 'assertNotEquals($a, $b)', 'args': ['assertNotEquals($a,', '$b)'], 'file_path': '@test', 'line_number': 35, 'strings': [[False, 'func assertNotEquals($a, $b)']], 'eval': [['o', 'func'], ['o', 'assertNotEquals'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['o', 'assertNotEquals'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', ','], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'test.doAssert ($a != $b)', 'command': 'test.doAssert', 'args_str': '($a != $b)', 'args': ['($a', '!=', '$b)'], 'file_path': '@test', 'line_number': 36, 'strings': [[False, 'test.doAssert ($a != $b)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', '!'], ['l', '='], ['v', 'b', 'self.get_var("b")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'a', 'self.get_var("a")'], ['l', '!'], ['l', '='], ['v', 'b', 'self.get_var("b")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertEmpty($value)', 'command': 'func', 'args_str': 'assertEmpty($value)', 'args': ['assertEmpty($value)'], 'file_path': '@test', 'line_number': 38, 'strings': [[False, 'func assertEmpty($value)']], 'eval': [['o', 'func'], ['o', 'assertEmpty'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'assertEmpty'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'test.doAssert ($valie == null)', 'command': 'test.doAssert', 'args_str': '($valie == null)', 'args': ['($valie', '==', 'null)'], 'file_path': '@test', 'line_number': 39, 'strings': [[False, 'test.doAssert ($valie == null)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['v', 'valie', 'self.get_var("valie")'], ['l', '='], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'valie', 'self.get_var("valie")'], ['l', '='], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 40, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func assertNotEmpty($value)', 'command': 'func', 'args_str': 'assertNotEmpty($value)', 'args': ['assertNotEmpty($value)'], 'file_path': '@test', 'line_number': 41, 'strings': [[False, 'func assertNotEmpty($value)']], 'eval': [['o', 'func'], ['o', 'assertNotEmpty'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'assertNotEmpty'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'test.doAssert ($valie != null)', 'command': 'test.doAssert', 'args_str': '($valie != null)', 'args': ['($valie', '!=', 'null)'], 'file_path': '@test', 'line_number': 42, 'strings': [[False, 'test.doAssert ($valie != null)']], 'eval': [['o', 'test.doAssert'], ['l', '('], ['v', 'valie', 'self.get_var("valie")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'valie', 'self.get_var("valie")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 43, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@test', 'line_number': 44, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["time"] = [{'str': 'namespace time', 'command': 'namespace', 'args_str': 'time', 'args': ['time'], 'file_path': '@time', 'line_number': 22, 'strings': [[False, 'namespace time']], 'eval': [['o', 'namespace'], ['o', 'time']], 'args_eval': [['o', 'time']]}, {'str': 'func float::time()', 'command': 'func', 'args_str': 'float::time()', 'args': ['float::time()'], 'file_path': '@time', 'line_number': 23, 'strings': [[False, 'func float::time()']], 'eval': [['o', 'func'], ['o', 'float'], ['l', ':'], ['l', ':'], ['o', 'time'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'float'], ['l', ':'], ['l', ':'], ['o', 'time'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('time')->time()", 'command': 'return', 'args_str': "py_load_module('time')->time()", 'args': ["py_load_module('time')->time()"], 'file_path': '@time', 'line_number': 24, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->time()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'time'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'time'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 25, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func sleep(float|int $time_to_sleep)', 'command': 'func', 'args_str': 'sleep(float|int $time_to_sleep)', 'args': ['sleep(float|int', '$time_to_sleep)'], 'file_path': '@time', 'line_number': 26, 'strings': [[False, 'func sleep(float|int $time_to_sleep)']], 'eval': [['o', 'func'], ['o', 'sleep'], ['l', '('], ['o', 'float|int'], ['v', 'time_to_sleep', 'self.get_var("time_to_sleep")'], ['l', ')']], 'args_eval': [['o', 'sleep'], ['l', '('], ['o', 'float|int'], ['v', 'time_to_sleep', 'self.get_var("time_to_sleep")'], ['l', ')']]}, {'str': "py_load_module ('time')->sleep($time_to_sleep)", 'command': 'py_load_module', 'args_str': "('time')->sleep($time_to_sleep)", 'args': ["('time')->sleep($time_to_sleep)"], 'file_path': '@time', 'line_number': 27, 'strings': [[False, 'py_load_module ('], [True, "'time'"], [False, ')->sleep($time_to_sleep)']], 'eval': [['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'sleep'], ['l', '('], ['v', 'time_to_sleep', 'self.get_var("time_to_sleep")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'sleep'], ['l', '('], ['v', 'time_to_sleep', 'self.get_var("time_to_sleep")'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 28, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func ctime()', 'command': 'func', 'args_str': 'ctime()', 'args': ['ctime()'], 'file_path': '@time', 'line_number': 29, 'strings': [[False, 'func ctime()']], 'eval': [['o', 'func'], ['o', 'ctime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'ctime'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('time')->ctime()", 'command': 'return', 'args_str': "py_load_module('time')->ctime()", 'args': ["py_load_module('time')->ctime()"], 'file_path': '@time', 'line_number': 30, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->ctime()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'ctime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'ctime'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 31, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func gmtime()', 'command': 'func', 'args_str': 'gmtime()', 'args': ['gmtime()'], 'file_path': '@time', 'line_number': 32, 'strings': [[False, 'func gmtime()']], 'eval': [['o', 'func'], ['o', 'gmtime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'gmtime'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('time')->gmtime()", 'command': 'return', 'args_str': "py_load_module('time')->gmtime()", 'args': ["py_load_module('time')->gmtime()"], 'file_path': '@time', 'line_number': 33, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->gmtime()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'gmtime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'gmtime'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 34, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func localtime()', 'command': 'func', 'args_str': 'localtime()', 'args': ['localtime()'], 'file_path': '@time', 'line_number': 35, 'strings': [[False, 'func localtime()']], 'eval': [['o', 'func'], ['o', 'localtime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'localtime'], ['l', '('], ['l', ')']]}, {'str': "return py_load_module('time')->localtime()", 'command': 'return', 'args_str': "py_load_module('time')->localtime()", 'args': ["py_load_module('time')->localtime()"], 'file_path': '@time', 'line_number': 36, 'strings': [[False, 'return py_load_module('], [True, "'time'"], [False, ')->localtime()']], 'eval': [['o', 'return'], ['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'localtime'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'py_load_module'], ['l', '('], ['s', "'time'"], ['l', ')'], ['l', '.'], ['n', 'localtime'], ['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endnamespace ', 'command': 'endnamespace', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 38, 'strings': [[False, 'endnamespace']], 'eval': [['o', 'endnamespace']], 'args_eval': []}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@time', 'line_number': 39, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif41_2', 'command': 'gotoif', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 17, 'strings': [[False, 'gotoif tmplabelif41_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif41_2']], 'args_eval': [['o', 'tmplabelif41_2']]}, {'str': 'println ("Current UNIX timestamp: " + str(time.time()))', 'command': 'println', 'args_str': '("Current UNIX timestamp: " + str(time.time()))', 'args': ['("Current', 'UNIX', 'timestamp:', '"', '+', 'str(time.time()))'], 'file_path': '@time', 'line_number': 40, 'strings': [[False, 'println ('], [True, '"Current UNIX timestamp: "'], [False, ' + str(time.time()))']], 'eval': [['o', 'println'], ['l', '('], ['s', '"Current UNIX timestamp: "'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"Current UNIX timestamp: "'], ['l', '+'], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@time', 'line_number': 41, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif41_2', 'command': 'label', 'args_str': 'tmplabelif41_2', 'args': ['tmplabelif41_2'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif41_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif41_2']], 'args_eval': [['o', 'tmplabelif41_2']]}, {'str': 'label tmplabelif41_end', 'command': 'label', 'args_str': 'tmplabelif41_end', 'args': ['tmplabelif41_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif41_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif41_end']], 'args_eval': [['o', 'tmplabelif41_end']]}]
modules["web"] = [{'str': 'import "@os",  "@web.session"', 'command': 'import', 'args_str': '"@os",  "@web.session"', 'args': ['"@os",', '"@web.session"'], 'file_path': '@web', 'line_number': 22, 'strings': [[False, 'import '], [True, '"@os"'], [False, ',  '], [True, '"@web.session"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@os"'], ['l', ','], ['s', '"@web.session"']], 'args_eval': [['s', '"@os"'], ['l', ','], ['s', '"@web.session"']]}, {'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web', 'line_number': 23, 'strings': [[False, 'namespace web']], 'eval': [['o', 'namespace'], ['o', 'web']], 'args_eval': [['o', 'web']]}, {'str': '@doc """Initializes the web environment."""', 'command': '@doc', 'args_str': '"""Initializes the web environment."""', 'args': ['"""Initializes', 'the', 'web', 'environment."""'], 'file_path': '@web', 'line_number': 24, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Initializes the web environment."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Initializes the web environment."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Initializes the web environment."'], ['s', '""']]}, {'str': 'func init()', 'command': 'func', 'args_str': 'init()', 'args': ['init()'], 'file_path': '@web', 'line_number': 25, 'strings': [[False, 'func init()']], 'eval': [['o', 'func'], ['o', 'init'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'init'], ['l', '('], ['l', ')']]}, {'str': "if 'HTTP_COOKIE' in list($os.env->keys())", 'command': 'if', 'args_str': "'HTTP_COOKIE' in list($os.env->keys())", 'args': ["'HTTP_COOKIE'", 'in', 'list($os.env->keys())'], 'file_path': '@web', 'line_number': 27, 'strings': [[False, 'if '], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys())']], 'eval': [['o', 'if'], ['s', "'HTTP_COOKIE'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']], 'args_eval': [['s', "'HTTP_COOKIE'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']]}, {'str': "mem not ('HTTP_COOKIE' in list($os.env->keys()))", 'command': 'mem', 'args_str': "not ('HTTP_COOKIE' in list($os.env->keys()))", 'args': ['not', "('HTTP_COOKIE'", 'in', 'list($os.env->keys()))'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'mem not ('], [True, "'HTTP_COOKIE'"], [False, ' in list($os.env->keys()))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['s', "'HTTP_COOKIE'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['s', "'HTTP_COOKIE'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif42_2', 'command': 'gotoif', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 4, 'strings': [[False, 'gotoif tmplabelif42_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif42_2']], 'args_eval': [['o', 'tmplabelif42_2']]}, {'str': "$items = urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'command': '$items', 'args_str': "= urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])", 'args': ['=', "urllib.parse.parse_qsl($os.env['HTTP_COOKIE'])"], 'file_path': '@web', 'line_number': 28, 'strings': [[False, '$items = urllib.parse.parse_qsl($os.env['], [True, "'HTTP_COOKIE'"], [False, '])']], 'eval': [['v', 'items', 'self.get_var("items")'], ['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'HTTP_COOKIE'"], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'HTTP_COOKIE'"], ['l', ']'], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 29, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$cookies = {}', 'command': '$cookies', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 30, 'strings': [[False, '$cookies = {}']], 'eval': [['v', 'cookies', 'self.get_var("cookies")'], ['l', '='], ['l', '{'], ['l', '}']], 'args_eval': [['l', '='], ['l', '{'], ['l', '}']]}, {'str': 'while $i < len($items)', 'command': 'while', 'args_str': '$i < len($items)', 'args': ['$i', '<', 'len($items)'], 'file_path': '@web', 'line_number': 31, 'strings': [[False, 'while $i < len($items)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'items', 'self.get_var("items")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'items', 'self.get_var("items")'], ['l', ')']]}, {'str': '$cookies[$items[$i][0]] = $items[$i][1]', 'command': '$cookies[$items[$i][0]]', 'args_str': '= $items[$i][1]', 'args': ['=', '$items[$i][1]'], 'file_path': '@web', 'line_number': 32, 'strings': [[False, '$cookies[$items[$i][0]] = $items[$i][1]']], 'eval': [['v', 'cookies', 'self.get_var("cookies")'], ['l', '['], ['v', 'items', 'self.get_var("items")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'items', 'self.get_var("items")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'items', 'self.get_var("items")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 33, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 34, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': "gset ('web.cookies', $cookies)", 'command': 'gset', 'args_str': "('web.cookies', $cookies)", 'args': ["('web.cookies',", '$cookies)'], 'file_path': '@web', 'line_number': 35, 'strings': [[False, 'gset ('], [True, "'web.cookies'"], [False, ', $cookies)']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.cookies'"], ['l', ','], ['v', 'cookies', 'self.get_var("cookies")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.cookies'"], ['l', ','], ['v', 'cookies', 'self.get_var("cookies")'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 36, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif42_end', 'command': 'goto', 'args_str': 'tmplabelif42_end', 'args': ['tmplabelif42_end'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'goto tmplabelif42_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif42_end']], 'args_eval': [['o', 'tmplabelif42_end']]}, {'str': 'label tmplabelif42_2', 'command': 'label', 'args_str': 'tmplabelif42_2', 'args': ['tmplabelif42_2'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'label tmplabelif42_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif42_2']], 'args_eval': [['o', 'tmplabelif42_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif42_3', 'command': 'gotoif', 'args_str': 'tmplabelif42_3', 'args': ['tmplabelif42_3'], 'file_path': '<system>', 'line_number': 15, 'strings': [[False, 'gotoif tmplabelif42_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif42_3']], 'args_eval': [['o', 'tmplabelif42_3']]}, {'str': "gset ('web.cookies', {})", 'command': 'gset', 'args_str': "('web.cookies', {})", 'args': ["('web.cookies',", '{})'], 'file_path': '@web', 'line_number': 37, 'strings': [[False, 'gset ('], [True, "'web.cookies'"], [False, ', {})']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.cookies'"], ['l', ','], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.cookies'"], ['l', ','], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 38, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif42_3', 'command': 'label', 'args_str': 'tmplabelif42_3', 'args': ['tmplabelif42_3'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif42_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif42_3']], 'args_eval': [['o', 'tmplabelif42_3']]}, {'str': 'label tmplabelif42_end', 'command': 'label', 'args_str': 'tmplabelif42_end', 'args': ['tmplabelif42_end'], 'file_path': '<system>', 'line_number': 21, 'strings': [[False, 'label tmplabelif42_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif42_end']], 'args_eval': [['o', 'tmplabelif42_end']]}, {'str': "$os.env->setdefault ('QUERY_STRING', '')", 'command': '$os.env->setdefault', 'args_str': "('QUERY_STRING', '')", 'args': ["('QUERY_STRING',", "'')"], 'file_path': '@web', 'line_number': 40, 'strings': [[False, '$os.env->setdefault ('], [True, "'QUERY_STRING'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'setdefault'], ['l', '('], ['s', "'QUERY_STRING'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'QUERY_STRING'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': "$os.env->setdefault ('REQUEST_METHOD', 'GET')", 'command': '$os.env->setdefault', 'args_str': "('REQUEST_METHOD', 'GET')", 'args': ["('REQUEST_METHOD',", "'GET')"], 'file_path': '@web', 'line_number': 41, 'strings': [[False, '$os.env->setdefault ('], [True, "'REQUEST_METHOD'"], [False, ', '], [True, "'GET'"], [False, ')']], 'eval': [['v', 'os.env', 'self.get_var("os.env")'], ['l', '.'], ['n', 'setdefault'], ['l', '('], ['s', "'REQUEST_METHOD'"], ['l', ','], ['s', "'GET'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'REQUEST_METHOD'"], ['l', ','], ['s', "'GET'"], ['l', ')']]}, {'str': "$raw_get = $os.env['QUERY_STRING']", 'command': '$raw_get', 'args_str': "= $os.env['QUERY_STRING']", 'args': ['=', "$os.env['QUERY_STRING']"], 'file_path': '@web', 'line_number': 43, 'strings': [[False, '$raw_get = $os.env['], [True, "'QUERY_STRING'"], [False, ']']], 'eval': [['v', 'raw_get', 'self.get_var("raw_get")'], ['l', '='], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'QUERY_STRING'"], ['l', ']']], 'args_eval': [['l', '='], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'QUERY_STRING'"], ['l', ']']]}, {'str': '$tmp_get = urllib.parse.parse_qsl($raw_get)', 'command': '$tmp_get', 'args_str': '= urllib.parse.parse_qsl($raw_get)', 'args': ['=', 'urllib.parse.parse_qsl($raw_get)'], 'file_path': '@web', 'line_number': 44, 'strings': [[False, '$tmp_get = urllib.parse.parse_qsl($raw_get)']], 'eval': [['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'raw_get', 'self.get_var("raw_get")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'raw_get', 'self.get_var("raw_get")'], ['l', ')']]}, {'str': '$get = {}', 'command': '$get', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 45, 'strings': [[False, '$get = {}']], 'eval': [['v', 'get', 'self.get_var("get")'], ['l', '='], ['l', '{'], ['l', '}']], 'args_eval': [['l', '='], ['l', '{'], ['l', '}']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 46, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($tmp_get)', 'command': 'while', 'args_str': '$i < len($tmp_get)', 'args': ['$i', '<', 'len($tmp_get)'], 'file_path': '@web', 'line_number': 47, 'strings': [[False, 'while $i < len($tmp_get)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', ')']]}, {'str': '$get[$tmp_get[$i][0]] = $tmp_get[$i][1]', 'command': '$get[$tmp_get[$i][0]]', 'args_str': '= $tmp_get[$i][1]', 'args': ['=', '$tmp_get[$i][1]'], 'file_path': '@web', 'line_number': 48, 'strings': [[False, '$get[$tmp_get[$i][0]] = $tmp_get[$i][1]']], 'eval': [['v', 'get', 'self.get_var("get")'], ['l', '['], ['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'tmp_get', 'self.get_var("tmp_get")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 49, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 50, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$post = {}', 'command': '$post', 'args_str': '= {}', 'args': ['=', '{}'], 'file_path': '@web', 'line_number': 51, 'strings': [[False, '$post = {}']], 'eval': [['v', 'post', 'self.get_var("post")'], ['l', '='], ['l', '{'], ['l', '}']], 'args_eval': [['l', '='], ['l', '{'], ['l', '}']]}, {'str': "if $os.env['REQUEST_METHOD'] == 'POST'", 'command': 'if', 'args_str': "$os.env['REQUEST_METHOD'] == 'POST'", 'args': ["$os.env['REQUEST_METHOD']", '==', "'POST'"], 'file_path': '@web', 'line_number': 52, 'strings': [[False, 'if $os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, '']], 'eval': [['o', 'if'], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'REQUEST_METHOD'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'POST'"]], 'args_eval': [['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'REQUEST_METHOD'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'POST'"]]}, {'str': "mem not ($os.env['REQUEST_METHOD'] == 'POST')", 'command': 'mem', 'args_str': "not ($os.env['REQUEST_METHOD'] == 'POST')", 'args': ['not', "($os.env['REQUEST_METHOD']", '==', "'POST')"], 'file_path': '<system>', 'line_number': 35, 'strings': [[False, 'mem not ($os.env['], [True, "'REQUEST_METHOD'"], [False, '] == '], [True, "'POST'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'REQUEST_METHOD'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'POST'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'REQUEST_METHOD'"], ['l', ']'], ['l', '='], ['l', '='], ['s', "'POST'"], ['l', ')']]}, {'str': 'gotoif tmplabelif43_2', 'command': 'gotoif', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 35, 'strings': [[False, 'gotoif tmplabelif43_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif43_2']], 'args_eval': [['o', 'tmplabelif43_2']]}, {'str': '$raw_post = read()', 'command': '$raw_post', 'args_str': '= read()', 'args': ['=', 'read()'], 'file_path': '@web', 'line_number': 53, 'strings': [[False, '$raw_post = read()']], 'eval': [['v', 'raw_post', 'self.get_var("raw_post")'], ['l', '='], ['o', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'read'], ['l', '('], ['l', ')']]}, {'str': "$os.env['POST_RAW_DATA'] = $raw_post", 'command': "$os.env['POST_RAW_DATA']", 'args_str': '= $raw_post', 'args': ['=', '$raw_post'], 'file_path': '@web', 'line_number': 55, 'strings': [[False, '$os.env['], [True, "'POST_RAW_DATA'"], [False, '] = $raw_post']], 'eval': [['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'POST_RAW_DATA'"], ['l', ']'], ['l', '='], ['v', 'raw_post', 'self.get_var("raw_post")']], 'args_eval': [['l', '='], ['v', 'raw_post', 'self.get_var("raw_post")']]}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 57, 'strings': [[False, '$is_json = false']], 'eval': [['v', 'is_json', 'self.get_var("is_json")'], ['l', '='], ['o', 'false']], 'args_eval': [['l', '='], ['o', 'false']]}, {'str': 'try web_init_check_json_error', 'command': 'try', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 58, 'strings': [[False, 'try web_init_check_json_error']], 'eval': [['o', 'try'], ['o', 'web_init_check_json_error']], 'args_eval': [['o', 'web_init_check_json_error']]}, {'str': 'json.loads ($raw_post)', 'command': 'json.loads', 'args_str': '($raw_post)', 'args': ['($raw_post)'], 'file_path': '@web', 'line_number': 59, 'strings': [[False, 'json.loads ($raw_post)']], 'eval': [['o', 'json.loads'], ['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']]}, {'str': '$is_json = true', 'command': '$is_json', 'args_str': '= true', 'args': ['=', 'true'], 'file_path': '@web', 'line_number': 60, 'strings': [[False, '$is_json = true']], 'eval': [['v', 'is_json', 'self.get_var("is_json")'], ['l', '='], ['o', 'true']], 'args_eval': [['l', '='], ['o', 'true']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 61, 'strings': [[False, 'endtry']], 'eval': [['o', 'endtry']], 'args_eval': []}, {'str': 'goto after_web_init_check_json_error', 'command': 'goto', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 62, 'strings': [[False, 'goto after_web_init_check_json_error']], 'eval': [['o', 'goto'], ['o', 'after_web_init_check_json_error']], 'args_eval': [['o', 'after_web_init_check_json_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label web_init_check_json_error', 'command': 'label', 'args_str': 'web_init_check_json_error', 'args': ['web_init_check_json_error'], 'file_path': '@web', 'line_number': 62, 'strings': [[False, 'label web_init_check_json_error']], 'eval': [['o', 'label'], ['o', 'web_init_check_json_error']], 'args_eval': [['o', 'web_init_check_json_error']]}, {'str': '$is_json = false', 'command': '$is_json', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web', 'line_number': 63, 'strings': [[False, '$is_json = false']], 'eval': [['v', 'is_json', 'self.get_var("is_json")'], ['l', '='], ['o', 'false']], 'args_eval': [['l', '='], ['o', 'false']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label after_web_init_check_json_error', 'command': 'label', 'args_str': 'after_web_init_check_json_error', 'args': ['after_web_init_check_json_error'], 'file_path': '@web', 'line_number': 64, 'strings': [[False, 'label after_web_init_check_json_error']], 'eval': [['o', 'label'], ['o', 'after_web_init_check_json_error']], 'args_eval': [['o', 'after_web_init_check_json_error']]}, {'str': 'if $is_json', 'command': 'if', 'args_str': '$is_json', 'args': ['$is_json'], 'file_path': '@web', 'line_number': 65, 'strings': [[False, 'if $is_json']], 'eval': [['o', 'if'], ['v', 'is_json', 'self.get_var("is_json")']], 'args_eval': [['v', 'is_json', 'self.get_var("is_json")']]}, {'str': 'mem not ($is_json)', 'command': 'mem', 'args_str': 'not ($is_json)', 'args': ['not', '($is_json)'], 'file_path': '<system>', 'line_number': 51, 'strings': [[False, 'mem not ($is_json)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'is_json', 'self.get_var("is_json")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'is_json', 'self.get_var("is_json")'], ['l', ')']]}, {'str': 'gotoif tmplabelif44_2', 'command': 'gotoif', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 51, 'strings': [[False, 'gotoif tmplabelif44_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif44_2']], 'args_eval': [['o', 'tmplabelif44_2']]}, {'str': '$post = json.loads($raw_post)', 'command': '$post', 'args_str': '= json.loads($raw_post)', 'args': ['=', 'json.loads($raw_post)'], 'file_path': '@web', 'line_number': 66, 'strings': [[False, '$post = json.loads($raw_post)']], 'eval': [['v', 'post', 'self.get_var("post")'], ['l', '='], ['o', 'json.loads'], ['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'json.loads'], ['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 67, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif44_end', 'command': 'goto', 'args_str': 'tmplabelif44_end', 'args': ['tmplabelif44_end'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'goto tmplabelif44_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif44_end']], 'args_eval': [['o', 'tmplabelif44_end']]}, {'str': 'label tmplabelif44_2', 'command': 'label', 'args_str': 'tmplabelif44_2', 'args': ['tmplabelif44_2'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'label tmplabelif44_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif44_2']], 'args_eval': [['o', 'tmplabelif44_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif44_3', 'command': 'gotoif', 'args_str': 'tmplabelif44_3', 'args': ['tmplabelif44_3'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'gotoif tmplabelif44_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif44_3']], 'args_eval': [['o', 'tmplabelif44_3']]}, {'str': '$tmp_post = urllib.parse.parse_qsl($raw_post)', 'command': '$tmp_post', 'args_str': '= urllib.parse.parse_qsl($raw_post)', 'args': ['=', 'urllib.parse.parse_qsl($raw_post)'], 'file_path': '@web', 'line_number': 68, 'strings': [[False, '$tmp_post = urllib.parse.parse_qsl($raw_post)']], 'eval': [['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'raw_post', 'self.get_var("raw_post")'], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 69, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($tmp_post)', 'command': 'while', 'args_str': '$i < len($tmp_post)', 'args': ['$i', '<', 'len($tmp_post)'], 'file_path': '@web', 'line_number': 70, 'strings': [[False, 'while $i < len($tmp_post)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', ')']]}, {'str': '$post[$tmp_post[$i][0]] = $tmp_post[$i][1]', 'command': '$post[$tmp_post[$i][0]]', 'args_str': '= $tmp_post[$i][1]', 'args': ['=', '$tmp_post[$i][1]'], 'file_path': '@web', 'line_number': 71, 'strings': [[False, '$post[$tmp_post[$i][0]] = $tmp_post[$i][1]']], 'eval': [['v', 'post', 'self.get_var("post")'], ['l', '['], ['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'tmp_post', 'self.get_var("tmp_post")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 72, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 73, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 74, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif44_3', 'command': 'label', 'args_str': 'tmplabelif44_3', 'args': ['tmplabelif44_3'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif44_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif44_3']], 'args_eval': [['o', 'tmplabelif44_3']]}, {'str': 'label tmplabelif44_end', 'command': 'label', 'args_str': 'tmplabelif44_end', 'args': ['tmplabelif44_end'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif44_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif44_end']], 'args_eval': [['o', 'tmplabelif44_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 75, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif43_2', 'command': 'label', 'args_str': 'tmplabelif43_2', 'args': ['tmplabelif43_2'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif43_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif43_2']], 'args_eval': [['o', 'tmplabelif43_2']]}, {'str': 'label tmplabelif43_end', 'command': 'label', 'args_str': 'tmplabelif43_end', 'args': ['tmplabelif43_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif43_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif43_end']], 'args_eval': [['o', 'tmplabelif43_end']]}, {'str': "gset ('web.get', $get)", 'command': 'gset', 'args_str': "('web.get', $get)", 'args': ["('web.get',", '$get)'], 'file_path': '@web', 'line_number': 76, 'strings': [[False, 'gset ('], [True, "'web.get'"], [False, ', $get)']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.get'"], ['l', ','], ['v', 'get', 'self.get_var("get")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.get'"], ['l', ','], ['v', 'get', 'self.get_var("get")'], ['l', ')']]}, {'str': "gset ('web.post', $post)", 'command': 'gset', 'args_str': "('web.post', $post)", 'args': ["('web.post',", '$post)'], 'file_path': '@web', 'line_number': 77, 'strings': [[False, 'gset ('], [True, "'web.post'"], [False, ', $post)']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.post'"], ['l', ','], ['v', 'post', 'self.get_var("post")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.post'"], ['l', ','], ['v', 'post', 'self.get_var("post")'], ['l', ')']]}, {'str': "define ('WEB_INITED', true)", 'command': 'define', 'args_str': "('WEB_INITED', true)", 'args': ["('WEB_INITED',", 'true)'], 'file_path': '@web', 'line_number': 78, 'strings': [[False, 'define ('], [True, "'WEB_INITED'"], [False, ', true)']], 'eval': [['o', 'define'], ['l', '('], ['s', "'WEB_INITED'"], ['l', ','], ['o', 'true'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'WEB_INITED'"], ['l', ','], ['o', 'true'], ['l', ')']]}, {'str': "set_header ('Content-type', 'text/html')", 'command': 'set_header', 'args_str': "('Content-type', 'text/html')", 'args': ["('Content-type',", "'text/html')"], 'file_path': '@web', 'line_number': 79, 'strings': [[False, 'set_header ('], [True, "'Content-type'"], [False, ', '], [True, "'text/html'"], [False, ')']], 'eval': [['o', 'set_header'], ['l', '('], ['s', "'Content-type'"], ['l', ','], ['s', "'text/html'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Content-type'"], ['l', ','], ['s', "'text/html'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 80, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'command': '@doc', 'args_str': '"""Sets a http header.\\nFirst argument is name of header and last is value(both string)."""', 'args': ['"""Sets', 'a', 'http', 'header.\\nFirst', 'argument', 'is', 'name', 'of', 'header', 'and', 'last', 'is', 'value(both', 'string)."""'], 'file_path': '@web', 'line_number': 81, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a http header.\\nFirst argument is name of header and last is value(both string)."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Sets a http header.\\nFirst argument is name of header and last is value(both string)."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Sets a http header.\\nFirst argument is name of header and last is value(both string)."'], ['s', '""']]}, {'str': 'func set_header(string $name, $value)', 'command': 'func', 'args_str': 'set_header(string $name, $value)', 'args': ['set_header(string', '$name,', '$value)'], 'file_path': '@web', 'line_number': 82, 'strings': [[False, 'func set_header(string $name, $value)']], 'eval': [['o', 'func'], ['o', 'set_header'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['o', 'set_header'], ['l', '('], ['o', 'string'], ['v', 'name', 'self.get_var("name")'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': "if is_defined('WEB_END_HEADERS')", 'command': 'if', 'args_str': "is_defined('WEB_END_HEADERS')", 'args': ["is_defined('WEB_END_HEADERS')"], 'file_path': '@web', 'line_number': 83, 'strings': [[False, 'if is_defined('], [True, "'WEB_END_HEADERS'"], [False, ')']], 'eval': [['o', 'if'], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ')']], 'args_eval': [['o', 'is_defined'], ['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ')']]}, {'str': "mem not (is_defined('WEB_END_HEADERS'))", 'command': 'mem', 'args_str': "not (is_defined('WEB_END_HEADERS'))", 'args': ['not', "(is_defined('WEB_END_HEADERS'))"], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'mem not (is_defined('], [True, "'WEB_END_HEADERS'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif45_2', 'command': 'gotoif', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 79, 'strings': [[False, 'gotoif tmplabelif45_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif45_2']], 'args_eval': [['o', 'tmplabelif45_2']]}, {'str': "raise (Error('HeaderError', 'headers already sent'))", 'command': 'raise', 'args_str': "(Error('HeaderError', 'headers already sent'))", 'args': ["(Error('HeaderError',", "'headers", 'already', "sent'))"], 'file_path': '@web', 'line_number': 86, 'strings': [[False, 'raise (Error('], [True, "'HeaderError'"], [False, ', '], [True, "'headers already sent'"], [False, '))']], 'eval': [['o', 'raise'], ['l', '('], ['o', 'Error'], ['l', '('], ['s', "'HeaderError'"], ['l', ','], ['s', "'headers already sent'"], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'Error'], ['l', '('], ['s', "'HeaderError'"], ['l', ','], ['s', "'headers already sent'"], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 87, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 88, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif45_2', 'command': 'label', 'args_str': 'tmplabelif45_2', 'args': ['tmplabelif45_2'], 'file_path': '<system>', 'line_number': 84, 'strings': [[False, 'label tmplabelif45_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif45_2']], 'args_eval': [['o', 'tmplabelif45_2']]}, {'str': 'label tmplabelif45_end', 'command': 'label', 'args_str': 'tmplabelif45_end', 'args': ['tmplabelif45_end'], 'file_path': '<system>', 'line_number': 84, 'strings': [[False, 'label tmplabelif45_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif45_end']], 'args_eval': [['o', 'tmplabelif45_end']]}, {'str': "print (str($name) + ': ' + str($value) + '\\n')", 'command': 'print', 'args_str': "(str($name) + ': ' + str($value) + '\\n')", 'args': ['(str($name)', '+', "':", "'", '+', 'str($value)', '+', "'\\n')"], 'file_path': '@web', 'line_number': 90, 'strings': [[False, 'print (str($name) + '], [True, "': '"], [False, ' + str($value) + '], [True, "'\\n'"], [False, ')']], 'eval': [['o', 'print'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', "': '"], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['l', '+'], ['s', "'\\n'"], ['l', ')']], 'args_eval': [['l', '('], ['o', 'str'], ['l', '('], ['v', 'name', 'self.get_var("name")'], ['l', ')'], ['l', '+'], ['s', "': '"], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')'], ['l', '+'], ['s', "'\\n'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 91, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Sets http response code.\\nGets code as int."""', 'command': '@doc', 'args_str': '"""Sets http response code.\\nGets code as int."""', 'args': ['"""Sets', 'http', 'response', 'code.\\nGets', 'code', 'as', 'int."""'], 'file_path': '@web', 'line_number': 92, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets http response code.\\nGets code as int."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Sets http response code.\\nGets code as int."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Sets http response code.\\nGets code as int."'], ['s', '""']]}, {'str': 'func status(int $code)', 'command': 'func', 'args_str': 'status(int $code)', 'args': ['status(int', '$code)'], 'file_path': '@web', 'line_number': 93, 'strings': [[False, 'func status(int $code)']], 'eval': [['o', 'func'], ['o', 'status'], ['l', '('], ['o', 'int'], ['v', 'code', 'self.get_var("code")'], ['l', ')']], 'args_eval': [['o', 'status'], ['l', '('], ['o', 'int'], ['v', 'code', 'self.get_var("code")'], ['l', ')']]}, {'str': "set_header ('Status', str($code))", 'command': 'set_header', 'args_str': "('Status', str($code))", 'args': ["('Status',", 'str($code))'], 'file_path': '@web', 'line_number': 95, 'strings': [[False, 'set_header ('], [True, "'Status'"], [False, ', str($code))']], 'eval': [['o', 'set_header'], ['l', '('], ['s', "'Status'"], ['l', ','], ['o', 'str'], ['l', '('], ['v', 'code', 'self.get_var("code")'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Status'"], ['l', ','], ['o', 'str'], ['l', '('], ['v', 'code', 'self.get_var("code")'], ['l', ')'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 96, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc """Sets a HTTP cookie.\\nGets options as dictionary."""', 'command': '@doc', 'args_str': '"""Sets a HTTP cookie.\\nGets options as dictionary."""', 'args': ['"""Sets', 'a', 'HTTP', 'cookie.\\nGets', 'options', 'as', 'dictionary."""'], 'file_path': '@web', 'line_number': 97, 'strings': [[False, '@doc '], [True, '""'], [False, ''], [True, '"Sets a HTTP cookie.\\nGets options as dictionary."'], [False, ''], [True, '""'], [False, '']], 'eval': [['o', '@doc'], ['s', '""'], ['s', '"Sets a HTTP cookie.\\nGets options as dictionary."'], ['s', '""']], 'args_eval': [['s', '""'], ['s', '"Sets a HTTP cookie.\\nGets options as dictionary."'], ['s', '""']]}, {'str': 'func set_cookie(dict $options)', 'command': 'func', 'args_str': 'set_cookie(dict $options)', 'args': ['set_cookie(dict', '$options)'], 'file_path': '@web', 'line_number': 98, 'strings': [[False, 'func set_cookie(dict $options)']], 'eval': [['o', 'func'], ['o', 'set_cookie'], ['l', '('], ['o', 'dict'], ['v', 'options', 'self.get_var("options")'], ['l', ')']], 'args_eval': [['o', 'set_cookie'], ['l', '('], ['o', 'dict'], ['v', 'options', 'self.get_var("options")'], ['l', ')']]}, {'str': "$options->setdefault ('value', '')", 'command': '$options->setdefault', 'args_str': "('value', '')", 'args': ["('value',", "'')"], 'file_path': '@web', 'line_number': 99, 'strings': [[False, '$options->setdefault ('], [True, "'value'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 'options', 'self.get_var("options")'], ['l', '.'], ['n', 'setdefault'], ['l', '('], ['s', "'value'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'value'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': "$tmp = urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'command': '$tmp', 'args_str': "= urllib.parse.urlencode([        ($options['name'], $options['value'])    ])->split('=', 1)", 'args': ['=', 'urllib.parse.urlencode([', "($options['name'],", "$options['value'])", "])->split('=',", '1)'], 'file_path': '@web', 'line_number': 103, 'strings': [[False, '$tmp = urllib.parse.urlencode([        ($options['], [True, "'name'"], [False, '], $options['], [True, "'value'"], [False, '])    ])->split('], [True, "'='"], [False, ', 1)']], 'eval': [['v', 'tmp', 'self.get_var("tmp")'], ['l', '='], ['o', 'urllib.parse.urlencode'], ['l', '('], ['l', '['], ['l', '('], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'name'"], ['l', ']'], ['l', ','], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'value'"], ['l', ']'], ['l', ')'], ['l', ']'], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'='"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'urllib.parse.urlencode'], ['l', '('], ['l', '['], ['l', '('], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'name'"], ['l', ']'], ['l', ','], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'value'"], ['l', ']'], ['l', ')'], ['l', ']'], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'='"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': "$options['name'] = $tmp[0]->strip()", 'command': "$options['name']", 'args_str': '= $tmp[0]->strip()', 'args': ['=', '$tmp[0]->strip()'], 'file_path': '@web', 'line_number': 104, 'strings': [[False, '$options['], [True, "'name'"], [False, '] = $tmp[0]->strip()']], 'eval': [['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'name'"], ['l', ']'], ['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']]}, {'str': "$options['value'] = $tmp[1]", 'command': "$options['value']", 'args_str': '= $tmp[1]', 'args': ['=', '$tmp[1]'], 'file_path': '@web', 'line_number': 105, 'strings': [[False, '$options['], [True, "'value'"], [False, '] = $tmp[1]']], 'eval': [['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'value'"], ['l', ']'], ['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': '$base_cookie = http.cookies.BaseCookie()', 'command': '$base_cookie', 'args_str': '= http.cookies.BaseCookie()', 'args': ['=', 'http.cookies.BaseCookie()'], 'file_path': '@web', 'line_number': 107, 'strings': [[False, '$base_cookie = http.cookies.BaseCookie()']], 'eval': [['v', 'base_cookie', 'self.get_var("base_cookie")'], ['l', '='], ['o', 'http.cookies.BaseCookie'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'http.cookies.BaseCookie'], ['l', '('], ['l', ')']]}, {'str': "$base_cookie[$options['name']] = $options['value']", 'command': "$base_cookie[$options['name']]", 'args_str': "= $options['value']", 'args': ['=', "$options['value']"], 'file_path': '@web', 'line_number': 108, 'strings': [[False, '$base_cookie[$options['], [True, "'name'"], [False, ']] = $options['], [True, "'value'"], [False, ']']], 'eval': [['v', 'base_cookie', 'self.get_var("base_cookie")'], ['l', '['], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'name'"], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'value'"], ['l', ']']], 'args_eval': [['l', '='], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'value'"], ['l', ']']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web', 'line_number': 109, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$keys = list($options->keys())', 'command': '$keys', 'args_str': '= list($options->keys())', 'args': ['=', 'list($options->keys())'], 'file_path': '@web', 'line_number': 110, 'strings': [[False, '$keys = list($options->keys())']], 'eval': [['v', 'keys', 'self.get_var("keys")'], ['l', '='], ['o', 'list'], ['l', '('], ['v', 'options', 'self.get_var("options")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'list'], ['l', '('], ['v', 'options', 'self.get_var("options")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']]}, {'str': 'while $i < len($keys)', 'command': 'while', 'args_str': '$i < len($keys)', 'args': ['$i', '<', 'len($keys)'], 'file_path': '@web', 'line_number': 111, 'strings': [[False, 'while $i < len($keys)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'keys', 'self.get_var("keys")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'keys', 'self.get_var("keys")'], ['l', ')']]}, {'str': "if $keys[$i] not in ['name', 'value']", 'command': 'if', 'args_str': "$keys[$i] not in ['name', 'value']", 'args': ['$keys[$i]', 'not', 'in', "['name',", "'value']"], 'file_path': '@web', 'line_number': 112, 'strings': [[False, 'if $keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, ']']], 'eval': [['o', 'if'], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['l', '['], ['s', "'name'"], ['l', ','], ['s', "'value'"], ['l', ']']], 'args_eval': [['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['l', '['], ['s', "'name'"], ['l', ','], ['s', "'value'"], ['l', ']']]}, {'str': "mem not ($keys[$i] not in ['name', 'value'])", 'command': 'mem', 'args_str': "not ($keys[$i] not in ['name', 'value'])", 'args': ['not', '($keys[$i]', 'not', 'in', "['name',", "'value'])"], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'mem not ($keys[$i] not in ['], [True, "'name'"], [False, ', '], [True, "'value'"], [False, '])']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['l', '['], ['s', "'name'"], ['l', ','], ['s', "'value'"], ['l', ']'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['o', 'not'], ['o', 'in'], ['l', '['], ['s', "'name'"], ['l', ','], ['s', "'value'"], ['l', ']'], ['l', ')']]}, {'str': 'gotoif tmplabelif46_2', 'command': 'gotoif', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'gotoif tmplabelif46_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif46_2']], 'args_eval': [['o', 'tmplabelif46_2']]}, {'str': "$base_cookie[$options['name']][$keys[$i]] = $options[$keys[$i]]", 'command': "$base_cookie[$options['name']][$keys[$i]]", 'args_str': '= $options[$keys[$i]]', 'args': ['=', '$options[$keys[$i]]'], 'file_path': '@web', 'line_number': 113, 'strings': [[False, '$base_cookie[$options['], [True, "'name'"], [False, ']][$keys[$i]] = $options[$keys[$i]]']], 'eval': [['v', 'base_cookie', 'self.get_var("base_cookie")'], ['l', '['], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['s', "'name'"], ['l', ']'], ['l', ']'], ['l', '['], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'options', 'self.get_var("options")'], ['l', '['], ['v', 'keys', 'self.get_var("keys")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', ']']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 114, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif46_2', 'command': 'label', 'args_str': 'tmplabelif46_2', 'args': ['tmplabelif46_2'], 'file_path': '<system>', 'line_number': 108, 'strings': [[False, 'label tmplabelif46_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif46_2']], 'args_eval': [['o', 'tmplabelif46_2']]}, {'str': 'label tmplabelif46_end', 'command': 'label', 'args_str': 'tmplabelif46_end', 'args': ['tmplabelif46_end'], 'file_path': '<system>', 'line_number': 108, 'strings': [[False, 'label tmplabelif46_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif46_end']], 'args_eval': [['o', 'tmplabelif46_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web', 'line_number': 115, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 116, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$output = $base_cookie->output()', 'command': '$output', 'args_str': '= $base_cookie->output()', 'args': ['=', '$base_cookie->output()'], 'file_path': '@web', 'line_number': 118, 'strings': [[False, '$output = $base_cookie->output()']], 'eval': [['v', 'output', 'self.get_var("output")'], ['l', '='], ['v', 'base_cookie', 'self.get_var("base_cookie")'], ['l', '.'], ['n', 'output'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'base_cookie', 'self.get_var("base_cookie")'], ['l', '.'], ['n', 'output'], ['l', '('], ['l', ')']]}, {'str': "$output = $output->split(':', 1)[-1]->strip()->split('=', 1)", 'command': '$output', 'args_str': "= $output->split(':', 1)[-1]->strip()->split('=', 1)", 'args': ['=', "$output->split(':',", "1)[-1]->strip()->split('=',", '1)'], 'file_path': '@web', 'line_number': 119, 'strings': [[False, '$output = $output->split('], [True, "':'"], [False, ', 1)[-1]->strip()->split('], [True, "'='"], [False, ', 1)']], 'eval': [['v', 'output', 'self.get_var("output")'], ['l', '='], ['v', 'output', 'self.get_var("output")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'='"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'output', 'self.get_var("output")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'='"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': "set_header ('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'command': 'set_header', 'args_str': "('Set-Cookie', $output[0]->strip() + '=' + $output[-1])", 'args': ["('Set-Cookie',", '$output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 121, 'strings': [[False, 'set_header ('], [True, "'Set-Cookie'"], [False, ', $output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']], 'eval': [['o', 'set_header'], ['l', '('], ['s', "'Set-Cookie'"], ['l', ','], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '+'], ['s', "'='"], ['l', '+'], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Set-Cookie'"], ['l', ','], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '+'], ['s', "'='"], ['l', '+'], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': "$real_cookies = gget('web.cookies')", 'command': '$real_cookies', 'args_str': "= gget('web.cookies')", 'args': ['=', "gget('web.cookies')"], 'file_path': '@web', 'line_number': 123, 'strings': [[False, '$real_cookies = gget('], [True, "'web.cookies'"], [False, ')']], 'eval': [['v', 'real_cookies', 'self.get_var("real_cookies")'], ['l', '='], ['o', 'gget'], ['l', '('], ['s', "'web.cookies'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'gget'], ['l', '('], ['s', "'web.cookies'"], ['l', ')']]}, {'str': "$tmp = urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'command': '$tmp', 'args_str': "= urllib.parse.parse_qsl($output[0]->strip() + '=' + $output[-1])", 'args': ['=', 'urllib.parse.parse_qsl($output[0]->strip()', '+', "'='", '+', '$output[-1])'], 'file_path': '@web', 'line_number': 124, 'strings': [[False, '$tmp = urllib.parse.parse_qsl($output[0]->strip() + '], [True, "'='"], [False, ' + $output[-1])']], 'eval': [['v', 'tmp', 'self.get_var("tmp")'], ['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '+'], ['s', "'='"], ['l', '+'], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'urllib.parse.parse_qsl'], ['l', '('], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '+'], ['s', "'='"], ['l', '+'], ['v', 'output', 'self.get_var("output")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': '$real_cookies[$tmp[0][0]] = $tmp[0][1]', 'command': '$real_cookies[$tmp[0][0]]', 'args_str': '= $tmp[0][1]', 'args': ['=', '$tmp[0][1]'], 'file_path': '@web', 'line_number': 125, 'strings': [[False, '$real_cookies[$tmp[0][0]] = $tmp[0][1]']], 'eval': [['v', 'real_cookies', 'self.get_var("real_cookies")'], ['l', '['], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ']'], ['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'tmp', 'self.get_var("tmp")'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 126, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Ends the headers"', 'command': '@doc', 'args_str': '"Ends the headers"', 'args': ['"Ends', 'the', 'headers"'], 'file_path': '@web', 'line_number': 127, 'strings': [[False, '@doc '], [True, '"Ends the headers"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Ends the headers"']], 'args_eval': [['s', '"Ends the headers"']]}, {'str': 'func end_headers()', 'command': 'func', 'args_str': 'end_headers()', 'args': ['end_headers()'], 'file_path': '@web', 'line_number': 128, 'strings': [[False, 'func end_headers()']], 'eval': [['o', 'func'], ['o', 'end_headers'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'end_headers'], ['l', '('], ['l', ')']]}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web', 'line_number': 130, 'strings': [[False, 'println ('], [True, "''"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "''"], ['l', ')']], 'args_eval': [['l', '('], ['s', "''"], ['l', ')']]}, {'str': "define ('WEB_END_HEADERS', true)", 'command': 'define', 'args_str': "('WEB_END_HEADERS', true)", 'args': ["('WEB_END_HEADERS',", 'true)'], 'file_path': '@web', 'line_number': 131, 'strings': [[False, 'define ('], [True, "'WEB_END_HEADERS'"], [False, ', true)']], 'eval': [['o', 'define'], ['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ','], ['o', 'true'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'WEB_END_HEADERS'"], ['l', ','], ['o', 'true'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 132, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web', 'line_number': 133, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
modules["web.server"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.server', 'line_number': 22, 'strings': [[False, 'namespace web']], 'eval': [['o', 'namespace'], ['o', 'web']], 'args_eval': [['o', 'web']]}, {'str': 'namespace server', 'command': 'namespace', 'args_str': 'server', 'args': ['server'], 'file_path': '@web.server', 'line_number': 22, 'strings': [[False, 'namespace server']], 'eval': [['o', 'namespace'], ['o', 'server']], 'args_eval': [['o', 'server']]}, {'str': 'class WebServer', 'command': 'class', 'args_str': 'WebServer', 'args': ['WebServer'], 'file_path': '@web.server', 'line_number': 23, 'strings': [[False, 'class WebServer']], 'eval': [['o', 'class'], ['o', 'WebServer']], 'args_eval': [['o', 'WebServer']]}, {'str': 'func __init__(string $host, int $port=8000)', 'command': 'func', 'args_str': '__init__(string $host, int $port=8000)', 'args': ['__init__(string', '$host,', 'int', '$port=8000)'], 'file_path': '@web.server', 'line_number': 24, 'strings': [[False, 'func __init__(string $host, int $port=8000)']], 'eval': [['o', 'func'], ['o', '__init__'], ['l', '('], ['o', 'string'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['o', 'int'], ['v', 'port', 'self.get_var("port")'], ['l', '='], ['o', '8000'], ['l', ')']], 'args_eval': [['o', '__init__'], ['l', '('], ['o', 'string'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['o', 'int'], ['v', 'port', 'self.get_var("port")'], ['l', '='], ['o', '8000'], ['l', ')']]}, {'str': '$this->host = $host', 'command': '$this->host', 'args_str': '= $host', 'args': ['=', '$host'], 'file_path': '@web.server', 'line_number': 25, 'strings': [[False, '$this->host = $host']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'host'], ['l', '='], ['v', 'host', 'self.get_var("host")']], 'args_eval': [['l', '='], ['v', 'host', 'self.get_var("host")']]}, {'str': '$this->port = $port', 'command': '$this->port', 'args_str': '= $port', 'args': ['=', '$port'], 'file_path': '@web.server', 'line_number': 26, 'strings': [[False, '$this->port = $port']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'port'], ['l', '='], ['v', 'port', 'self.get_var("port")']], 'args_eval': [['l', '='], ['v', 'port', 'self.get_var("port")']]}, {'str': '$this->do_get = null', 'command': '$this->do_get', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 27, 'strings': [[False, '$this->do_get = null']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'do_get'], ['l', '='], ['o', 'null']], 'args_eval': [['l', '='], ['o', 'null']]}, {'str': '$this->do_post = null', 'command': '$this->do_post', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 28, 'strings': [[False, '$this->do_post = null']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'do_post'], ['l', '='], ['o', 'null']], 'args_eval': [['l', '='], ['o', 'null']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 29, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func web.server.WebServer::set_get($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_get($func)', 'args': ['web.server.WebServer::set_get($func)'], 'file_path': '@web.server', 'line_number': 30, 'strings': [[False, 'func web.server.WebServer::set_get($func)']], 'eval': [['o', 'func'], ['o', 'web.server.WebServer'], ['l', ':'], ['l', ':'], ['o', 'set_get'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']], 'args_eval': [['o', 'web.server.WebServer'], ['l', ':'], ['l', ':'], ['o', 'set_get'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']]}, {'str': '$this->do_get = $func', 'command': '$this->do_get', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 31, 'strings': [[False, '$this->do_get = $func']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'do_get'], ['l', '='], ['v', 'func', 'self.get_var("func")']], 'args_eval': [['l', '='], ['v', 'func', 'self.get_var("func")']]}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 32, 'strings': [[False, 'return $this']], 'eval': [['o', 'return'], ['v', 'this', 'self.get_var("this")']], 'args_eval': [['v', 'this', 'self.get_var("this")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 33, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func web.server.WebServer::set_post($func)', 'command': 'func', 'args_str': 'web.server.WebServer::set_post($func)', 'args': ['web.server.WebServer::set_post($func)'], 'file_path': '@web.server', 'line_number': 34, 'strings': [[False, 'func web.server.WebServer::set_post($func)']], 'eval': [['o', 'func'], ['o', 'web.server.WebServer'], ['l', ':'], ['l', ':'], ['o', 'set_post'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']], 'args_eval': [['o', 'web.server.WebServer'], ['l', ':'], ['l', ':'], ['o', 'set_post'], ['l', '('], ['v', 'func', 'self.get_var("func")'], ['l', ')']]}, {'str': '$this->do_post = $func', 'command': '$this->do_post', 'args_str': '= $func', 'args': ['=', '$func'], 'file_path': '@web.server', 'line_number': 35, 'strings': [[False, '$this->do_post = $func']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'do_post'], ['l', '='], ['v', 'func', 'self.get_var("func")']], 'args_eval': [['l', '='], ['v', 'func', 'self.get_var("func")']]}, {'str': 'return $this', 'command': 'return', 'args_str': '$this', 'args': ['$this'], 'file_path': '@web.server', 'line_number': 36, 'strings': [[False, 'return $this']], 'eval': [['o', 'return'], ['v', 'this', 'self.get_var("this")']], 'args_eval': [['v', 'this', 'self.get_var("this")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 37, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func serve()', 'command': 'func', 'args_str': 'serve()', 'args': ['serve()'], 'file_path': '@web.server', 'line_number': 38, 'strings': [[False, 'func serve()']], 'eval': [['o', 'func'], ['o', 'serve'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'serve'], ['l', '('], ['l', ')']]}, {'str': '$py_code = \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'command': '$py_code', 'args_str': '= \'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'', 'args': ['=', "'def", 'serve(host,', 'port,', 'do_get=None,', 'do_post=None):\\n', 'class', 'TheServer(http.server.BaseHTTPRequestHandler):\\n', 'def', 'do_GET(self):\\n', 'if', 'self.get_event', '!=', 'None:\\n', 'self.get_event(self)\\n', 'def', 'do_POST(self):\\n', 'if', 'self.post_event', '!=', 'None:\\n', 'self.post_event(self)\\n', 'tmp_TheServer', '=', 'copy.deepcopy(TheServer)\\n', 'tmp_TheServer.get_event', '=', 'do_get\\n', 'tmp_TheServer.post_event', '=', 'do_post\\n', 'webServer', '=', 'http.server.HTTPServer((host,', 'port),', 'tmp_TheServer)\\n', 'return', 'webServer\\nself.mem', '=', 'serve(self.get_var("this").host,', 'self.get_var("this").port,', 'self.get_var("this").do_get,', 'self.get_var("this").do_post)\\n', "'"], 'file_path': '@web.server', 'line_number': 39, 'strings': [[False, '$py_code = '], [True, '\'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \''], [False, '']], 'eval': [['v', 'py_code', 'self.get_var("py_code")'], ['l', '='], ['s', '\'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'']], 'args_eval': [['l', '='], ['s', '\'def serve(host, port, do_get=None, do_post=None):\\n    class TheServer(http.server.BaseHTTPRequestHandler):\\n        def do_GET(self):\\n            if self.get_event != None:\\n                self.get_event(self)\\n        def do_POST(self):\\n            if self.post_event != None:\\n                self.post_event(self)\\n    tmp_TheServer = copy.deepcopy(TheServer)\\n    tmp_TheServer.get_event = do_get\\n    tmp_TheServer.post_event = do_post\\n    webServer = http.server.HTTPServer((host, port), tmp_TheServer)\\n    return webServer\\nself.mem = serve(self.get_var("this").host, self.get_var("this").port, self.get_var("this").do_get, self.get_var("this").do_post)\\n            \'']]}, {'str': '$this->server = python($py_code)', 'command': '$this->server', 'args_str': '= python($py_code)', 'args': ['=', 'python($py_code)'], 'file_path': '@web.server', 'line_number': 40, 'strings': [[False, '$this->server = python($py_code)']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'server'], ['l', '='], ['o', 'python'], ['l', '('], ['v', 'py_code', 'self.get_var("py_code")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'python'], ['l', '('], ['v', 'py_code', 'self.get_var("py_code")'], ['l', ')']]}, {'str': '$this->server->serve_forever ()', 'command': '$this->server->serve_forever', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 41, 'strings': [[False, '$this->server->serve_forever ()']], 'eval': [['v', 'this', 'self.get_var("this")'], ['l', '.'], ['n', 'server'], ['l', '.'], ['n', 'serve_forever'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 42, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endclass ', 'command': 'endclass', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 43, 'strings': [[False, 'endclass']], 'eval': [['o', 'endclass']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 44, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 44, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}, {'str': 'if $__ismain__', 'command': 'if', 'args_str': '$__ismain__', 'args': ['$__ismain__'], 'file_path': '@web.server', 'line_number': 45, 'strings': [[False, 'if $__ismain__']], 'eval': [['o', 'if'], ['v', '__ismain__', 'self.get_var("__ismain__")']], 'args_eval': [['v', '__ismain__', 'self.get_var("__ismain__")']]}, {'str': 'mem not ($__ismain__)', 'command': 'mem', 'args_str': 'not ($__ismain__)', 'args': ['not', '($__ismain__)'], 'file_path': '<system>', 'line_number': 25, 'strings': [[False, 'mem not ($__ismain__)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', '__ismain__', 'self.get_var("__ismain__")'], ['l', ')']]}, {'str': 'gotoif tmplabelif47_2', 'command': 'gotoif', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 25, 'strings': [[False, 'gotoif tmplabelif47_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif47_2']], 'args_eval': [['o', 'tmplabelif47_2']]}, {'str': 'import "@sys",  "@os"', 'command': 'import', 'args_str': '"@sys",  "@os"', 'args': ['"@sys",', '"@os"'], 'file_path': '@web.server', 'line_number': 46, 'strings': [[False, 'import '], [True, '"@sys"'], [False, ',  '], [True, '"@os"'], [False, '']], 'eval': [['o', 'import'], ['s', '"@sys"'], ['l', ','], ['s', '"@os"']], 'args_eval': [['s', '"@sys"'], ['l', ','], ['s', '"@os"']]}, {'str': "if '--help' in $argv", 'command': 'if', 'args_str': "'--help' in $argv", 'args': ["'--help'", 'in', '$argv'], 'file_path': '@web.server', 'line_number': 47, 'strings': [[False, 'if '], [True, "'--help'"], [False, ' in $argv']], 'eval': [['o', 'if'], ['s', "'--help'"], ['o', 'in'], ['v', 'argv', 'self.get_var("argv")']], 'args_eval': [['s', "'--help'"], ['o', 'in'], ['v', 'argv', 'self.get_var("argv")']]}, {'str': "mem not ('--help' in $argv)", 'command': 'mem', 'args_str': "not ('--help' in $argv)", 'args': ['not', "('--help'", 'in', '$argv)'], 'file_path': '<system>', 'line_number': 29, 'strings': [[False, 'mem not ('], [True, "'--help'"], [False, ' in $argv)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['s', "'--help'"], ['o', 'in'], ['v', 'argv', 'self.get_var("argv")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['s', "'--help'"], ['o', 'in'], ['v', 'argv', 'self.get_var("argv")'], ['l', ')']]}, {'str': 'gotoif tmplabelif48_2', 'command': 'gotoif', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 29, 'strings': [[False, 'gotoif tmplabelif48_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif48_2']], 'args_eval': [['o', 'tmplabelif48_2']]}, {'str': "println ('Serve a simple webserver for development environment')", 'command': 'println', 'args_str': "('Serve a simple webserver for development environment')", 'args': ["('Serve", 'a', 'simple', 'webserver', 'for', 'development', "environment')"], 'file_path': '@web.server', 'line_number': 48, 'strings': [[False, 'println ('], [True, "'Serve a simple webserver for development environment'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'Serve a simple webserver for development environment'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Serve a simple webserver for development environment'"], ['l', ')']]}, {'str': "println ('')", 'command': 'println', 'args_str': "('')", 'args': ["('')"], 'file_path': '@web.server', 'line_number': 49, 'strings': [[False, 'println ('], [True, "''"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "''"], ['l', ')']], 'args_eval': [['l', '('], ['s', "''"], ['l', ')']]}, {'str': "println ('Usage:   pashmak @serve <port>')", 'command': 'println', 'args_str': "('Usage:   pashmak @serve <port>')", 'args': ["('Usage:", 'pashmak', '@serve', "<port>')"], 'file_path': '@web.server', 'line_number': 50, 'strings': [[False, 'println ('], [True, "'Usage:   pashmak @serve <port>'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'Usage:   pashmak @serve <port>'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Usage:   pashmak @serve <port>'"], ['l', ')']]}, {'str': "println ('         pashmak @serve <host> <port>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port>')", 'args': ["('", 'pashmak', '@serve', '<host>', "<port>')"], 'file_path': '@web.server', 'line_number': 51, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port>'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve <host> <port>'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve <host> <port>'"], ['l', ')']]}, {'str': "println ('         pashmak @serve <host> <port> <directory>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', "<directory>')"], 'file_path': '@web.server', 'line_number': 52, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port> <directory>'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve <host> <port> <directory>'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve <host> <port> <directory>'"], ['l', ')']]}, {'str': "println ('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'command': 'println', 'args_str': "('         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>')", 'args': ["('", 'pashmak', '@serve', '<host>', '<port>', '<directory>', '<main-script:', 'main', 'file', 'is', 'request', "handler>')"], 'file_path': '@web.server', 'line_number': 53, 'strings': [[False, 'println ('], [True, "'         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve <host> <port> <directory> <main-script: main file is request handler>'"], ['l', ')']]}, {'str': "println ('Example: pashmak @serve 8080')", 'command': 'println', 'args_str': "('Example: pashmak @serve 8080')", 'args': ["('Example:", 'pashmak', '@serve', "8080')"], 'file_path': '@web.server', 'line_number': 54, 'strings': [[False, 'println ('], [True, "'Example: pashmak @serve 8080'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'Example: pashmak @serve 8080'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Example: pashmak @serve 8080'"], ['l', ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', "8080')"], 'file_path': '@web.server', 'line_number': 55, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080'"], ['l', ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', "path/to/public/html')"], 'file_path': '@web.server', 'line_number': 56, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080 path/to/public/html'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080 path/to/public/html'"], ['l', ')']]}, {'str': "println ('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'command': 'println', 'args_str': "('         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm')", 'args': ["('", 'pashmak', '@serve', '0.0.0.0', '8080', 'path/to/public/html', "path/to/public/html/server.pashm')"], 'file_path': '@web.server', 'line_number': 57, 'strings': [[False, 'println ('], [True, "'         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'         pashmak @serve 0.0.0.0 8080 path/to/public/html path/to/public/html/server.pashm'"], ['l', ')']]}, {'str': 'exit ()', 'command': 'exit', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 58, 'strings': [[False, 'exit ()']], 'eval': [['o', 'exit'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 59, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif48_2', 'command': 'label', 'args_str': 'tmplabelif48_2', 'args': ['tmplabelif48_2'], 'file_path': '<system>', 'line_number': 43, 'strings': [[False, 'label tmplabelif48_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif48_2']], 'args_eval': [['o', 'tmplabelif48_2']]}, {'str': 'label tmplabelif48_end', 'command': 'label', 'args_str': 'tmplabelif48_end', 'args': ['tmplabelif48_end'], 'file_path': '<system>', 'line_number': 43, 'strings': [[False, 'label tmplabelif48_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif48_end']], 'args_eval': [['o', 'tmplabelif48_end']]}, {'str': '$port = 8000', 'command': '$port', 'args_str': '= 8000', 'args': ['=', '8000'], 'file_path': '@web.server', 'line_number': 60, 'strings': [[False, '$port = 8000']], 'eval': [['v', 'port', 'self.get_var("port")'], ['l', '='], ['o', '8000']], 'args_eval': [['l', '='], ['o', '8000']]}, {'str': "$host = 'localhost'", 'command': '$host', 'args_str': "= 'localhost'", 'args': ['=', "'localhost'"], 'file_path': '@web.server', 'line_number': 61, 'strings': [[False, '$host = '], [True, "'localhost'"], [False, '']], 'eval': [['v', 'host', 'self.get_var("host")'], ['l', '='], ['s', "'localhost'"]], 'args_eval': [['l', '='], ['s', "'localhost'"]]}, {'str': '$dir = os.getcwd()', 'command': '$dir', 'args_str': '= os.getcwd()', 'args': ['=', 'os.getcwd()'], 'file_path': '@web.server', 'line_number': 62, 'strings': [[False, '$dir = os.getcwd()']], 'eval': [['v', 'dir', 'self.get_var("dir")'], ['l', '='], ['o', 'os.getcwd'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.getcwd'], ['l', '('], ['l', ')']]}, {'str': '$main = null', 'command': '$main', 'args_str': '= null', 'args': ['=', 'null'], 'file_path': '@web.server', 'line_number': 63, 'strings': [[False, '$main = null']], 'eval': [['v', 'main', 'self.get_var("main")'], ['l', '='], ['o', 'null']], 'args_eval': [['l', '='], ['o', 'null']]}, {'str': 'if len($argv) > 2', 'command': 'if', 'args_str': 'len($argv) > 2', 'args': ['len($argv)', '>', '2'], 'file_path': '@web.server', 'line_number': 64, 'strings': [[False, 'if len($argv) > 2']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '2']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '2']]}, {'str': 'mem not (len($argv) > 2)', 'command': 'mem', 'args_str': 'not (len($argv) > 2)', 'args': ['not', '(len($argv)', '>', '2)'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'mem not (len($argv) > 2)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '2'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '2'], ['l', ')']]}, {'str': 'gotoif tmplabelif49_2', 'command': 'gotoif', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 50, 'strings': [[False, 'gotoif tmplabelif49_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif49_2']], 'args_eval': [['o', 'tmplabelif49_2']]}, {'str': '$host = $argv[1]', 'command': '$host', 'args_str': '= $argv[1]', 'args': ['=', '$argv[1]'], 'file_path': '@web.server', 'line_number': 65, 'strings': [[False, '$host = $argv[1]']], 'eval': [['v', 'host', 'self.get_var("host")'], ['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': '$port = int($argv[2])', 'command': '$port', 'args_str': '= int($argv[2])', 'args': ['=', 'int($argv[2])'], 'file_path': '@web.server', 'line_number': 66, 'strings': [[False, '$port = int($argv[2])']], 'eval': [['v', 'port', 'self.get_var("port")'], ['l', '='], ['o', 'int'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '2'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'int'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '2'], ['l', ']'], ['l', ')']]}, {'str': 'if len($argv) > 3', 'command': 'if', 'args_str': 'len($argv) > 3', 'args': ['len($argv)', '>', '3'], 'file_path': '@web.server', 'line_number': 67, 'strings': [[False, 'if len($argv) > 3']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '3']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '3']]}, {'str': 'mem not (len($argv) > 3)', 'command': 'mem', 'args_str': 'not (len($argv) > 3)', 'args': ['not', '(len($argv)', '>', '3)'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'mem not (len($argv) > 3)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '3'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '3'], ['l', ')']]}, {'str': 'gotoif tmplabelif50_2', 'command': 'gotoif', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 55, 'strings': [[False, 'gotoif tmplabelif50_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif50_2']], 'args_eval': [['o', 'tmplabelif50_2']]}, {'str': '$dir = $argv[3]', 'command': '$dir', 'args_str': '= $argv[3]', 'args': ['=', '$argv[3]'], 'file_path': '@web.server', 'line_number': 68, 'strings': [[False, '$dir = $argv[3]']], 'eval': [['v', 'dir', 'self.get_var("dir")'], ['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '3'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '3'], ['l', ']']]}, {'str': 'if len($argv) > 4', 'command': 'if', 'args_str': 'len($argv) > 4', 'args': ['len($argv)', '>', '4'], 'file_path': '@web.server', 'line_number': 69, 'strings': [[False, 'if len($argv) > 4']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '4']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '4']]}, {'str': 'mem not (len($argv) > 4)', 'command': 'mem', 'args_str': 'not (len($argv) > 4)', 'args': ['not', '(len($argv)', '>', '4)'], 'file_path': '<system>', 'line_number': 59, 'strings': [[False, 'mem not (len($argv) > 4)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '4'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '4'], ['l', ')']]}, {'str': 'gotoif tmplabelif51_2', 'command': 'gotoif', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 59, 'strings': [[False, 'gotoif tmplabelif51_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif51_2']], 'args_eval': [['o', 'tmplabelif51_2']]}, {'str': '$main = $argv[4]', 'command': '$main', 'args_str': '= $argv[4]', 'args': ['=', '$argv[4]'], 'file_path': '@web.server', 'line_number': 70, 'strings': [[False, '$main = $argv[4]']], 'eval': [['v', 'main', 'self.get_var("main")'], ['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '4'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '4'], ['l', ']']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 71, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif51_2', 'command': 'label', 'args_str': 'tmplabelif51_2', 'args': ['tmplabelif51_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif51_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif51_2']], 'args_eval': [['o', 'tmplabelif51_2']]}, {'str': 'label tmplabelif51_end', 'command': 'label', 'args_str': 'tmplabelif51_end', 'args': ['tmplabelif51_end'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'label tmplabelif51_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif51_end']], 'args_eval': [['o', 'tmplabelif51_end']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 72, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif50_2', 'command': 'label', 'args_str': 'tmplabelif50_2', 'args': ['tmplabelif50_2'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif50_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif50_2']], 'args_eval': [['o', 'tmplabelif50_2']]}, {'str': 'label tmplabelif50_end', 'command': 'label', 'args_str': 'tmplabelif50_end', 'args': ['tmplabelif50_end'], 'file_path': '<system>', 'line_number': 66, 'strings': [[False, 'label tmplabelif50_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif50_end']], 'args_eval': [['o', 'tmplabelif50_end']]}, {'str': 'elif len($argv) > 1', 'command': 'elif', 'args_str': 'len($argv) > 1', 'args': ['len($argv)', '>', '1'], 'file_path': '@web.server', 'line_number': 73, 'strings': [[False, 'elif len($argv) > 1']], 'eval': [['o', 'elif'], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1']]}, {'str': 'goto tmplabelif49_end', 'command': 'goto', 'args_str': 'tmplabelif49_end', 'args': ['tmplabelif49_end'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'goto tmplabelif49_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif49_end']], 'args_eval': [['o', 'tmplabelif49_end']]}, {'str': 'label tmplabelif49_2', 'command': 'label', 'args_str': 'tmplabelif49_2', 'args': ['tmplabelif49_2'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'label tmplabelif49_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif49_2']], 'args_eval': [['o', 'tmplabelif49_2']]}, {'str': 'mem not (len($argv) > 1)', 'command': 'mem', 'args_str': 'not (len($argv) > 1)', 'args': ['not', '(len($argv)', '>', '1)'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'mem not (len($argv) > 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif49_3', 'command': 'gotoif', 'args_str': 'tmplabelif49_3', 'args': ['tmplabelif49_3'], 'file_path': '<system>', 'line_number': 69, 'strings': [[False, 'gotoif tmplabelif49_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif49_3']], 'args_eval': [['o', 'tmplabelif49_3']]}, {'str': '$port = int($argv[1])', 'command': '$port', 'args_str': '= int($argv[1])', 'args': ['=', 'int($argv[1])'], 'file_path': '@web.server', 'line_number': 74, 'strings': [[False, '$port = int($argv[1])']], 'eval': [['v', 'port', 'self.get_var("port")'], ['l', '='], ['o', 'int'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'int'], ['l', '('], ['v', 'argv', 'self.get_var("argv")'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 75, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif49_3', 'command': 'label', 'args_str': 'tmplabelif49_3', 'args': ['tmplabelif49_3'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif49_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif49_3']], 'args_eval': [['o', 'tmplabelif49_3']]}, {'str': 'label tmplabelif49_end', 'command': 'label', 'args_str': 'tmplabelif49_end', 'args': ['tmplabelif49_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif49_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif49_end']], 'args_eval': [['o', 'tmplabelif49_end']]}, {'str': '$server = web.server.WebServer($host, $port)', 'command': '$server', 'args_str': '= web.server.WebServer($host, $port)', 'args': ['=', 'web.server.WebServer($host,', '$port)'], 'file_path': '@web.server', 'line_number': 76, 'strings': [[False, '$server = web.server.WebServer($host, $port)']], 'eval': [['v', 'server', 'self.get_var("server")'], ['l', '='], ['o', 'web.server.WebServer'], ['l', '('], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['v', 'port', 'self.get_var("port")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'web.server.WebServer'], ['l', '('], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['v', 'port', 'self.get_var("port")'], ['l', ')']]}, {'str': 'func get_handler($handler)', 'command': 'func', 'args_str': 'get_handler($handler)', 'args': ['get_handler($handler)'], 'file_path': '@web.server', 'line_number': 77, 'strings': [[False, 'func get_handler($handler)']], 'eval': [['o', 'func'], ['o', 'get_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ')']], 'args_eval': [['o', 'get_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ')']]}, {'str': "the_handler ($handler, 'GET')", 'command': 'the_handler', 'args_str': "($handler, 'GET')", 'args': ['($handler,', "'GET')"], 'file_path': '@web.server', 'line_number': 78, 'strings': [[False, 'the_handler ($handler, '], [True, "'GET'"], [False, ')']], 'eval': [['o', 'the_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['s', "'GET'"], ['l', ')']], 'args_eval': [['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['s', "'GET'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 79, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func post_handler($handler)', 'command': 'func', 'args_str': 'post_handler($handler)', 'args': ['post_handler($handler)'], 'file_path': '@web.server', 'line_number': 80, 'strings': [[False, 'func post_handler($handler)']], 'eval': [['o', 'func'], ['o', 'post_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ')']], 'args_eval': [['o', 'post_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ')']]}, {'str': "the_handler ($handler, 'POST')", 'command': 'the_handler', 'args_str': "($handler, 'POST')", 'args': ['($handler,', "'POST')"], 'file_path': '@web.server', 'line_number': 81, 'strings': [[False, 'the_handler ($handler, '], [True, "'POST'"], [False, ')']], 'eval': [['o', 'the_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['s', "'POST'"], ['l', ')']], 'args_eval': [['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['s', "'POST'"], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 82, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'func the_handler($handler, string $request_method)', 'command': 'func', 'args_str': 'the_handler($handler, string $request_method)', 'args': ['the_handler($handler,', 'string', '$request_method)'], 'file_path': '@web.server', 'line_number': 84, 'strings': [[False, 'func the_handler($handler, string $request_method)']], 'eval': [['o', 'func'], ['o', 'the_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['o', 'string'], ['v', 'request_method', 'self.get_var("request_method")'], ['l', ')']], 'args_eval': [['o', 'the_handler'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', ','], ['o', 'string'], ['v', 'request_method', 'self.get_var("request_method")'], ['l', ')']]}, {'str': '$path = str($handler->path)', 'command': '$path', 'args_str': '= str($handler->path)', 'args': ['=', 'str($handler->path)'], 'file_path': '@web.server', 'line_number': 85, 'strings': [[False, '$path = str($handler->path)']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'path'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'path'], ['l', ')']]}, {'str': "$path = $path->split('?', 1)", 'command': '$path', 'args_str': "= $path->split('?', 1)", 'args': ['=', "$path->split('?',", '1)'], 'file_path': '@web.server', 'line_number': 86, 'strings': [[False, '$path = $path->split('], [True, "'?'"], [False, ', 1)']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'?'"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'?'"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': "$query_string = ''", 'command': '$query_string', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 87, 'strings': [[False, '$query_string = '], [True, "''"], [False, '']], 'eval': [['v', 'query_string', 'self.get_var("query_string")'], ['l', '='], ['s', "''"]], 'args_eval': [['l', '='], ['s', "''"]]}, {'str': 'if len($path) > 1', 'command': 'if', 'args_str': 'len($path) > 1', 'args': ['len($path)', '>', '1'], 'file_path': '@web.server', 'line_number': 88, 'strings': [[False, 'if len($path) > 1']], 'eval': [['o', 'if'], ['o', 'len'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '>'], ['o', '1']], 'args_eval': [['o', 'len'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '>'], ['o', '1']]}, {'str': 'mem not (len($path) > 1)', 'command': 'mem', 'args_str': 'not (len($path) > 1)', 'args': ['not', '(len($path)', '>', '1)'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'mem not (len($path) > 1)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', '>'], ['o', '1'], ['l', ')']]}, {'str': 'gotoif tmplabelif52_2', 'command': 'gotoif', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 89, 'strings': [[False, 'gotoif tmplabelif52_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif52_2']], 'args_eval': [['o', 'tmplabelif52_2']]}, {'str': '$query_string = $path[1]', 'command': '$query_string', 'args_str': '= $path[1]', 'args': ['=', '$path[1]'], 'file_path': '@web.server', 'line_number': 89, 'strings': [[False, '$query_string = $path[1]']], 'eval': [['v', 'query_string', 'self.get_var("query_string")'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '['], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '['], ['o', '1'], ['l', ']']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 90, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif52_2', 'command': 'label', 'args_str': 'tmplabelif52_2', 'args': ['tmplabelif52_2'], 'file_path': '<system>', 'line_number': 93, 'strings': [[False, 'label tmplabelif52_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif52_2']], 'args_eval': [['o', 'tmplabelif52_2']]}, {'str': 'label tmplabelif52_end', 'command': 'label', 'args_str': 'tmplabelif52_end', 'args': ['tmplabelif52_end'], 'file_path': '<system>', 'line_number': 93, 'strings': [[False, 'label tmplabelif52_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif52_end']], 'args_eval': [['o', 'tmplabelif52_end']]}, {'str': '$path = $path[0]', 'command': '$path', 'args_str': '= $path[0]', 'args': ['=', '$path[0]'], 'file_path': '@web.server', 'line_number': 91, 'strings': [[False, '$path = $path[0]']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'path', 'self.get_var("path")'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': '$has_index = false', 'command': '$has_index', 'args_str': '= false', 'args': ['=', 'false'], 'file_path': '@web.server', 'line_number': 92, 'strings': [[False, '$has_index = false']], 'eval': [['v', 'has_index', 'self.get_var("has_index")'], ['l', '='], ['o', 'false']], 'args_eval': [['l', '='], ['o', 'false']]}, {'str': "if os.path.isdir($dir + '/' + $path)", 'command': 'if', 'args_str': "os.path.isdir($dir + '/' + $path)", 'args': ['os.path.isdir($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 93, 'strings': [[False, 'if os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path)']], 'eval': [['o', 'if'], ['o', 'os.path.isdir'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['o', 'os.path.isdir'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': "mem not (os.path.isdir($dir + '/' + $path))", 'command': 'mem', 'args_str': "not (os.path.isdir($dir + '/' + $path))", 'args': ['not', '(os.path.isdir($dir', '+', "'/'", '+', '$path))'], 'file_path': '<system>', 'line_number': 98, 'strings': [[False, 'mem not (os.path.isdir($dir + '], [True, "'/'"], [False, ' + $path))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'os.path.isdir'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'os.path.isdir'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif53_2', 'command': 'gotoif', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 98, 'strings': [[False, 'gotoif tmplabelif53_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif53_2']], 'args_eval': [['o', 'tmplabelif53_2']]}, {'str': "$allowed_indexes = ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'command': '$allowed_indexes', 'args_str': "= ['index.pashm', 'index.pit', 'index.pashm.html', 'html']", 'args': ['=', "['index.pashm',", "'index.pit',", "'index.pashm.html',", "'html']"], 'file_path': '@web.server', 'line_number': 94, 'strings': [[False, '$allowed_indexes = ['], [True, "'index.pashm'"], [False, ', '], [True, "'index.pit'"], [False, ', '], [True, "'index.pashm.html'"], [False, ', '], [True, "'html'"], [False, ']']], 'eval': [['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '='], ['l', '['], ['s', "'index.pashm'"], ['l', ','], ['s', "'index.pit'"], ['l', ','], ['s', "'index.pashm.html'"], ['l', ','], ['s', "'html'"], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['s', "'index.pashm'"], ['l', ','], ['s', "'index.pit'"], ['l', ','], ['s', "'index.pashm.html'"], ['l', ','], ['s', "'html'"], ['l', ']']]}, {'str': '$z = 0', 'command': '$z', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 95, 'strings': [[False, '$z = 0']], 'eval': [['v', 'z', 'self.get_var("z")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $z < len($allowed_indexes)', 'command': 'while', 'args_str': '$z < len($allowed_indexes)', 'args': ['$z', '<', 'len($allowed_indexes)'], 'file_path': '@web.server', 'line_number': 96, 'strings': [[False, 'while $z < len($allowed_indexes)']], 'eval': [['o', 'while'], ['v', 'z', 'self.get_var("z")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', ')']], 'args_eval': [['v', 'z', 'self.get_var("z")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', ')']]}, {'str': "if os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z])", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z])'], 'file_path': '@web.server', 'line_number': 97, 'strings': [[False, 'if os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z])']], 'eval': [['o', 'if'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']'], ['l', ')']], 'args_eval': [['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']'], ['l', ')']]}, {'str': "mem not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path + '/' + $allowed_indexes[$z]))", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]))'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'mem not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif54_2', 'command': 'gotoif', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 104, 'strings': [[False, 'gotoif tmplabelif54_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif54_2']], 'args_eval': [['o', 'tmplabelif54_2']]}, {'str': "$has_index = $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'command': '$has_index', 'args_str': "= $dir + '/' + $path + '/' + $allowed_indexes[$z]", 'args': ['=', '$dir', '+', "'/'", '+', '$path', '+', "'/'", '+', '$allowed_indexes[$z]'], 'file_path': '@web.server', 'line_number': 98, 'strings': [[False, '$has_index = $dir + '], [True, "'/'"], [False, ' + $path + '], [True, "'/'"], [False, ' + $allowed_indexes[$z]']], 'eval': [['v', 'has_index', 'self.get_var("has_index")'], ['l', '='], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'allowed_indexes', 'self.get_var("allowed_indexes")'], ['l', '['], ['v', 'z', 'self.get_var("z")'], ['l', ']']]}, {'str': 'break ', 'command': 'break', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 99, 'strings': [[False, 'break']], 'eval': [['o', 'break']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 100, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif54_2', 'command': 'label', 'args_str': 'tmplabelif54_2', 'args': ['tmplabelif54_2'], 'file_path': '<system>', 'line_number': 109, 'strings': [[False, 'label tmplabelif54_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif54_2']], 'args_eval': [['o', 'tmplabelif54_2']]}, {'str': 'label tmplabelif54_end', 'command': 'label', 'args_str': 'tmplabelif54_end', 'args': ['tmplabelif54_end'], 'file_path': '<system>', 'line_number': 109, 'strings': [[False, 'label tmplabelif54_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif54_end']], 'args_eval': [['o', 'tmplabelif54_end']]}, {'str': '$z = $z + 1', 'command': '$z', 'args_str': '= $z + 1', 'args': ['=', '$z', '+', '1'], 'file_path': '@web.server', 'line_number': 101, 'strings': [[False, '$z = $z + 1']], 'eval': [['v', 'z', 'self.get_var("z")'], ['l', '='], ['v', 'z', 'self.get_var("z")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'z', 'self.get_var("z")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 102, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 103, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif53_2', 'command': 'label', 'args_str': 'tmplabelif53_2', 'args': ['tmplabelif53_2'], 'file_path': '<system>', 'line_number': 114, 'strings': [[False, 'label tmplabelif53_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif53_2']], 'args_eval': [['o', 'tmplabelif53_2']]}, {'str': 'label tmplabelif53_end', 'command': 'label', 'args_str': 'tmplabelif53_end', 'args': ['tmplabelif53_end'], 'file_path': '<system>', 'line_number': 114, 'strings': [[False, 'label tmplabelif53_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif53_end']], 'args_eval': [['o', 'tmplabelif53_end']]}, {'str': "if os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'command': 'if', 'args_str': "os.path.isfile($dir + '/' + $path) or $main != null or $has_index", 'args': ['os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index'], 'file_path': '@web.server', 'line_number': 104, 'strings': [[False, 'if os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index']], 'eval': [['o', 'if'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['o', 'or'], ['v', 'has_index', 'self.get_var("has_index")']], 'args_eval': [['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['o', 'or'], ['v', 'has_index', 'self.get_var("has_index")']]}, {'str': "mem not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'command': 'mem', 'args_str': "not (os.path.isfile($dir + '/' + $path) or $main != null or $has_index)", 'args': ['not', '(os.path.isfile($dir', '+', "'/'", '+', '$path)', 'or', '$main', '!=', 'null', 'or', '$has_index)'], 'file_path': '<system>', 'line_number': 117, 'strings': [[False, 'mem not (os.path.isfile($dir + '], [True, "'/'"], [False, ' + $path) or $main != null or $has_index)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['o', 'or'], ['v', 'has_index', 'self.get_var("has_index")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'os.path.isfile'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['o', 'or'], ['v', 'has_index', 'self.get_var("has_index")'], ['l', ')']]}, {'str': 'gotoif tmplabelif55_2', 'command': 'gotoif', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 117, 'strings': [[False, 'gotoif tmplabelif55_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif55_2']], 'args_eval': [['o', 'tmplabelif55_2']]}, {'str': 'if $has_index', 'command': 'if', 'args_str': '$has_index', 'args': ['$has_index'], 'file_path': '@web.server', 'line_number': 105, 'strings': [[False, 'if $has_index']], 'eval': [['o', 'if'], ['v', 'has_index', 'self.get_var("has_index")']], 'args_eval': [['v', 'has_index', 'self.get_var("has_index")']]}, {'str': 'mem not ($has_index)', 'command': 'mem', 'args_str': 'not ($has_index)', 'args': ['not', '($has_index)'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'mem not ($has_index)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'has_index', 'self.get_var("has_index")'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'has_index', 'self.get_var("has_index")'], ['l', ')']]}, {'str': 'gotoif tmplabelif56_2', 'command': 'gotoif', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 120, 'strings': [[False, 'gotoif tmplabelif56_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif56_2']], 'args_eval': [['o', 'tmplabelif56_2']]}, {'str': '$full_path = $has_index', 'command': '$full_path', 'args_str': '= $has_index', 'args': ['=', '$has_index'], 'file_path': '@web.server', 'line_number': 106, 'strings': [[False, '$full_path = $has_index']], 'eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '='], ['v', 'has_index', 'self.get_var("has_index")']], 'args_eval': [['l', '='], ['v', 'has_index', 'self.get_var("has_index")']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 107, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif56_end', 'command': 'goto', 'args_str': 'tmplabelif56_end', 'args': ['tmplabelif56_end'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'goto tmplabelif56_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif56_end']], 'args_eval': [['o', 'tmplabelif56_end']]}, {'str': 'label tmplabelif56_2', 'command': 'label', 'args_str': 'tmplabelif56_2', 'args': ['tmplabelif56_2'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'label tmplabelif56_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif56_2']], 'args_eval': [['o', 'tmplabelif56_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif56_3', 'command': 'gotoif', 'args_str': 'tmplabelif56_3', 'args': ['tmplabelif56_3'], 'file_path': '<system>', 'line_number': 124, 'strings': [[False, 'gotoif tmplabelif56_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif56_3']], 'args_eval': [['o', 'tmplabelif56_3']]}, {'str': "$full_path = os.path.abspath($dir + '/' + $path)", 'command': '$full_path', 'args_str': "= os.path.abspath($dir + '/' + $path)", 'args': ['=', 'os.path.abspath($dir', '+', "'/'", '+', '$path)'], 'file_path': '@web.server', 'line_number': 108, 'strings': [[False, '$full_path = os.path.abspath($dir + '], [True, "'/'"], [False, ' + $path)']], 'eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'os.path.abspath'], ['l', '('], ['v', 'dir', 'self.get_var("dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'path', 'self.get_var("path")'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 109, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif56_3', 'command': 'label', 'args_str': 'tmplabelif56_3', 'args': ['tmplabelif56_3'], 'file_path': '<system>', 'line_number': 130, 'strings': [[False, 'label tmplabelif56_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif56_3']], 'args_eval': [['o', 'tmplabelif56_3']]}, {'str': 'label tmplabelif56_end', 'command': 'label', 'args_str': 'tmplabelif56_end', 'args': ['tmplabelif56_end'], 'file_path': '<system>', 'line_number': 130, 'strings': [[False, 'label tmplabelif56_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif56_end']], 'args_eval': [['o', 'tmplabelif56_end']]}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 110, 'strings': [[False, '$full_path = $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']], 'eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '='], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'//'"], ['l', ','], ['s', "'/'"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'//'"], ['l', ','], ['s', "'/'"], ['l', ')']]}, {'str': "$full_path = $full_path->replace('//', '/')", 'command': '$full_path', 'args_str': "= $full_path->replace('//', '/')", 'args': ['=', "$full_path->replace('//',", "'/')"], 'file_path': '@web.server', 'line_number': 111, 'strings': [[False, '$full_path = $full_path->replace('], [True, "'//'"], [False, ', '], [True, "'/'"], [False, ')']], 'eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '='], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'//'"], ['l', ','], ['s', "'/'"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'//'"], ['l', ','], ['s', "'/'"], ['l', ')']]}, {'str': '$mime = mimetypes.guess_type($full_path)[0]', 'command': '$mime', 'args_str': '= mimetypes.guess_type($full_path)[0]', 'args': ['=', 'mimetypes.guess_type($full_path)[0]'], 'file_path': '@web.server', 'line_number': 112, 'strings': [[False, '$mime = mimetypes.guess_type($full_path)[0]']], 'eval': [['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['o', 'mimetypes.guess_type'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['o', 'mimetypes.guess_type'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': "if $full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'command': 'if', 'args_str': "$full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null", 'args': ["$full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 113, 'strings': [[False, 'if $full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null']], 'eval': [['o', 'if'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pit'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm.html'"], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null']], 'args_eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pit'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm.html'"], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null']]}, {'str': "mem not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'command': 'mem', 'args_str': "not ($full_path->endswith('.pashm') or $full_path->endswith('.pit') or $full_path->endswith('.pashm.html') or $main != null)", 'args': ['not', "($full_path->endswith('.pashm')", 'or', "$full_path->endswith('.pit')", 'or', "$full_path->endswith('.pashm.html')", 'or', '$main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 136, 'strings': [[False, 'mem not ($full_path->endswith('], [True, "'.pashm'"], [False, ') or $full_path->endswith('], [True, "'.pit'"], [False, ') or $full_path->endswith('], [True, "'.pashm.html'"], [False, ') or $main != null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pit'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm.html'"], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pit'"], ['l', ')'], ['o', 'or'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'.pashm.html'"], ['l', ')'], ['o', 'or'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif57_2', 'command': 'gotoif', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 136, 'strings': [[False, 'gotoif tmplabelif57_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif57_2']], 'args_eval': [['o', 'tmplabelif57_2']]}, {'str': 'if $main != null', 'command': 'if', 'args_str': '$main != null', 'args': ['$main', '!=', 'null'], 'file_path': '@web.server', 'line_number': 114, 'strings': [[False, 'if $main != null']], 'eval': [['o', 'if'], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null']], 'args_eval': [['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null']]}, {'str': 'mem not ($main != null)', 'command': 'mem', 'args_str': 'not ($main != null)', 'args': ['not', '($main', '!=', 'null)'], 'file_path': '<system>', 'line_number': 139, 'strings': [[False, 'mem not ($main != null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'main', 'self.get_var("main")'], ['l', '!'], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif58_2', 'command': 'gotoif', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 139, 'strings': [[False, 'gotoif tmplabelif58_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif58_2']], 'args_eval': [['o', 'tmplabelif58_2']]}, {'str': '$full_path = $main', 'command': '$full_path', 'args_str': '= $main', 'args': ['=', '$main'], 'file_path': '@web.server', 'line_number': 115, 'strings': [[False, '$full_path = $main']], 'eval': [['v', 'full_path', 'self.get_var("full_path")'], ['l', '='], ['v', 'main', 'self.get_var("main")']], 'args_eval': [['l', '='], ['v', 'main', 'self.get_var("main")']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 116, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif58_2', 'command': 'label', 'args_str': 'tmplabelif58_2', 'args': ['tmplabelif58_2'], 'file_path': '<system>', 'line_number': 143, 'strings': [[False, 'label tmplabelif58_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif58_2']], 'args_eval': [['o', 'tmplabelif58_2']]}, {'str': 'label tmplabelif58_end', 'command': 'label', 'args_str': 'tmplabelif58_end', 'args': ['tmplabelif58_end'], 'file_path': '<system>', 'line_number': 143, 'strings': [[False, 'label tmplabelif58_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif58_end']], 'args_eval': [['o', 'tmplabelif58_end']]}, {'str': '$command = [$sys.pashmakexe, repr($full_path)]', 'command': '$command', 'args_str': '= [$sys.pashmakexe, repr($full_path)]', 'args': ['=', '[$sys.pashmakexe,', 'repr($full_path)]'], 'file_path': '@web.server', 'line_number': 117, 'strings': [[False, '$command = [$sys.pashmakexe, repr($full_path)]']], 'eval': [['v', 'command', 'self.get_var("command")'], ['l', '='], ['l', '['], ['v', 'sys.pashmakexe', 'self.get_var("sys.pashmakexe")'], ['l', ','], ['o', 'repr'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ')'], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['v', 'sys.pashmakexe', 'self.get_var("sys.pashmakexe")'], ['l', ','], ['o', 'repr'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ')'], ['l', ']']]}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 118, 'strings': [[False, '$f = open($full_path, '], [True, "'r'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'r'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'r'"], ['l', ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 119, 'strings': [[False, '$content = $f->read()']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 120, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': "if $content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'command': 'if', 'args_str': "$content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/')", 'args': ["$content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/')"], 'file_path': '@web.server', 'line_number': 121, 'strings': [[False, 'if $content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, ')']], 'eval': [['o', 'if'], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'@pit'"], ['l', ')'], ['o', 'and'], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')']], 'args_eval': [['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'@pit'"], ['l', ')'], ['o', 'and'], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')']]}, {'str': "mem not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'command': 'mem', 'args_str': "not ($content->split('\\n', 1)[0]->endswith('@pit') and $content->split('\\n', 1)[0]->startswith('#!/'))", 'args': ['not', "($content->split('\\n',", "1)[0]->endswith('@pit')", 'and', "$content->split('\\n',", "1)[0]->startswith('#!/'))"], 'file_path': '<system>', 'line_number': 150, 'strings': [[False, 'mem not ($content->split('], [True, "'\\n'"], [False, ', 1)[0]->endswith('], [True, "'@pit'"], [False, ') and $content->split('], [True, "'\\n'"], [False, ', 1)[0]->startswith('], [True, "'#!/'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'@pit'"], ['l', ')'], ['o', 'and'], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'endswith'], ['l', '('], ['s', "'@pit'"], ['l', ')'], ['o', 'and'], ['v', 'content', 'self.get_var("content")'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'startswith'], ['l', '('], ['s', "'#!/'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif59_2', 'command': 'gotoif', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 150, 'strings': [[False, 'gotoif tmplabelif59_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif59_2']], 'args_eval': [['o', 'tmplabelif59_2']]}, {'str': "$command->insert (1, '@pit')", 'command': '$command->insert', 'args_str': "(1, '@pit')", 'args': ['(1,', "'@pit')"], 'file_path': '@web.server', 'line_number': 122, 'strings': [[False, '$command->insert (1, '], [True, "'@pit'"], [False, ')']], 'eval': [['v', 'command', 'self.get_var("command")'], ['l', '.'], ['n', 'insert'], ['l', '('], ['o', '1'], ['l', ','], ['s', "'@pit'"], ['l', ')']], 'args_eval': [['l', '('], ['o', '1'], ['l', ','], ['s', "'@pit'"], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 123, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif59_2', 'command': 'label', 'args_str': 'tmplabelif59_2', 'args': ['tmplabelif59_2'], 'file_path': '<system>', 'line_number': 154, 'strings': [[False, 'label tmplabelif59_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif59_2']], 'args_eval': [['o', 'tmplabelif59_2']]}, {'str': 'label tmplabelif59_end', 'command': 'label', 'args_str': 'tmplabelif59_end', 'args': ['tmplabelif59_end'], 'file_path': '<system>', 'line_number': 154, 'strings': [[False, 'label tmplabelif59_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif59_end']], 'args_eval': [['o', 'tmplabelif59_end']]}, {'str': '$env = {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'command': '$env', 'args_str': '= {                    "PASHMAKPATH": $os.env[\'PASHMAKPATH\'],                    "REQUEST_URI": $handler->path,                    "REQUEST_METHOD": $request_method,                    "REMOTE_ADDR": $handler->client_address[0],                    "REMOTE_PORT": str($handler->client_address[1]),                    "SERVER_PORT": str($handler->server->server_port),                    "SERVER_SOFTWARE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    "SERVER_SIGNATURE": \'Pashmak Builtin Web Server (\' + $sys.pashmakinfo[\'version\'] + \')\',                    \'DOCUMENT_ROOT\': $dir,                    \'CONTEXT_DOCUMENT_ROOT\': $dir,                    \'SCRIPT_FILENAME\': $full_path,                    \'SCRIPT_NAME\': $path,                    \'QUERY_STRING\': $query_string,                    "SERVER_PROTOCOL": $handler->protocol_version,                    "REQUEST_SCHEME": \'http\',                    "SERVER_NAME": $host,                    "SERVER_ADDR": \'127.0.0.1\' if $host == \'localhost\' else $host,                }', 'args': ['=', '{', '"PASHMAKPATH":', "$os.env['PASHMAKPATH'],", '"REQUEST_URI":', '$handler->path,', '"REQUEST_METHOD":', '$request_method,', '"REMOTE_ADDR":', '$handler->client_address[0],', '"REMOTE_PORT":', 'str($handler->client_address[1]),', '"SERVER_PORT":', 'str($handler->server->server_port),', '"SERVER_SOFTWARE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", '"SERVER_SIGNATURE":', "'Pashmak", 'Builtin', 'Web', 'Server', "('", '+', "$sys.pashmakinfo['version']", '+', "')',", "'DOCUMENT_ROOT':", '$dir,', "'CONTEXT_DOCUMENT_ROOT':", '$dir,', "'SCRIPT_FILENAME':", '$full_path,', "'SCRIPT_NAME':", '$path,', "'QUERY_STRING':", '$query_string,', '"SERVER_PROTOCOL":', '$handler->protocol_version,', '"REQUEST_SCHEME":', "'http',", '"SERVER_NAME":', '$host,', '"SERVER_ADDR":', "'127.0.0.1'", 'if', '$host', '==', "'localhost'", 'else', '$host,', '}'], 'file_path': '@web.server', 'line_number': 143, 'strings': [[False, '$env = {                    '], [True, '"PASHMAKPATH"'], [False, ': $os.env['], [True, "'PASHMAKPATH'"], [False, '],                    '], [True, '"REQUEST_URI"'], [False, ': $handler->path,                    '], [True, '"REQUEST_METHOD"'], [False, ': $request_method,                    '], [True, '"REMOTE_ADDR"'], [False, ': $handler->client_address[0],                    '], [True, '"REMOTE_PORT"'], [False, ': str($handler->client_address[1]),                    '], [True, '"SERVER_PORT"'], [False, ': str($handler->server->server_port),                    '], [True, '"SERVER_SOFTWARE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, '"SERVER_SIGNATURE"'], [False, ': '], [True, "'Pashmak Builtin Web Server ('"], [False, ' + $sys.pashmakinfo['], [True, "'version'"], [False, '] + '], [True, "')'"], [False, ',                    '], [True, "'DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'CONTEXT_DOCUMENT_ROOT'"], [False, ': $dir,                    '], [True, "'SCRIPT_FILENAME'"], [False, ': $full_path,                    '], [True, "'SCRIPT_NAME'"], [False, ': $path,                    '], [True, "'QUERY_STRING'"], [False, ': $query_string,                    '], [True, '"SERVER_PROTOCOL"'], [False, ': $handler->protocol_version,                    '], [True, '"REQUEST_SCHEME"'], [False, ': '], [True, "'http'"], [False, ',                    '], [True, '"SERVER_NAME"'], [False, ': $host,                    '], [True, '"SERVER_ADDR"'], [False, ': '], [True, "'127.0.0.1'"], [False, ' if $host == '], [True, "'localhost'"], [False, ' else $host,                }']], 'eval': [['v', 'env', 'self.get_var("env")'], ['l', '='], ['l', '{'], ['s', '"PASHMAKPATH"'], ['l', ':'], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'PASHMAKPATH'"], ['l', ']'], ['l', ','], ['s', '"REQUEST_URI"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'path'], ['l', ','], ['s', '"REQUEST_METHOD"'], ['l', ':'], ['v', 'request_method', 'self.get_var("request_method")'], ['l', ','], ['s', '"REMOTE_ADDR"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'client_address'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ','], ['s', '"REMOTE_PORT"'], ['l', ':'], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'client_address'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')'], ['l', ','], ['s', '"SERVER_PORT"'], ['l', ':'], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'server'], ['l', '.'], ['n', 'server_port'], ['l', ')'], ['l', ','], ['s', '"SERVER_SOFTWARE"'], ['l', ':'], ['s', "'Pashmak Builtin Web Server ('"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ','], ['s', '"SERVER_SIGNATURE"'], ['l', ':'], ['s', "'Pashmak Builtin Web Server ('"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ','], ['s', "'DOCUMENT_ROOT'"], ['l', ':'], ['v', 'dir', 'self.get_var("dir")'], ['l', ','], ['s', "'CONTEXT_DOCUMENT_ROOT'"], ['l', ':'], ['v', 'dir', 'self.get_var("dir")'], ['l', ','], ['s', "'SCRIPT_FILENAME'"], ['l', ':'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'SCRIPT_NAME'"], ['l', ':'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'QUERY_STRING'"], ['l', ':'], ['v', 'query_string', 'self.get_var("query_string")'], ['l', ','], ['s', '"SERVER_PROTOCOL"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'protocol_version'], ['l', ','], ['s', '"REQUEST_SCHEME"'], ['l', ':'], ['s', "'http'"], ['l', ','], ['s', '"SERVER_NAME"'], ['l', ':'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['s', '"SERVER_ADDR"'], ['l', ':'], ['s', "'127.0.0.1'"], ['o', 'if'], ['v', 'host', 'self.get_var("host")'], ['l', '='], ['l', '='], ['s', "'localhost'"], ['o', 'else'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['l', '}']], 'args_eval': [['l', '='], ['l', '{'], ['s', '"PASHMAKPATH"'], ['l', ':'], ['v', 'os.env', 'self.get_var("os.env")'], ['l', '['], ['s', "'PASHMAKPATH'"], ['l', ']'], ['l', ','], ['s', '"REQUEST_URI"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'path'], ['l', ','], ['s', '"REQUEST_METHOD"'], ['l', ':'], ['v', 'request_method', 'self.get_var("request_method")'], ['l', ','], ['s', '"REMOTE_ADDR"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'client_address'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ','], ['s', '"REMOTE_PORT"'], ['l', ':'], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'client_address'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')'], ['l', ','], ['s', '"SERVER_PORT"'], ['l', ':'], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'server'], ['l', '.'], ['n', 'server_port'], ['l', ')'], ['l', ','], ['s', '"SERVER_SOFTWARE"'], ['l', ':'], ['s', "'Pashmak Builtin Web Server ('"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ','], ['s', '"SERVER_SIGNATURE"'], ['l', ':'], ['s', "'Pashmak Builtin Web Server ('"], ['l', '+'], ['v', 'sys.pashmakinfo', 'self.get_var("sys.pashmakinfo")'], ['l', '['], ['s', "'version'"], ['l', ']'], ['l', '+'], ['s', "')'"], ['l', ','], ['s', "'DOCUMENT_ROOT'"], ['l', ':'], ['v', 'dir', 'self.get_var("dir")'], ['l', ','], ['s', "'CONTEXT_DOCUMENT_ROOT'"], ['l', ':'], ['v', 'dir', 'self.get_var("dir")'], ['l', ','], ['s', "'SCRIPT_FILENAME'"], ['l', ':'], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'SCRIPT_NAME'"], ['l', ':'], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'QUERY_STRING'"], ['l', ':'], ['v', 'query_string', 'self.get_var("query_string")'], ['l', ','], ['s', '"SERVER_PROTOCOL"'], ['l', ':'], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'protocol_version'], ['l', ','], ['s', '"REQUEST_SCHEME"'], ['l', ':'], ['s', "'http'"], ['l', ','], ['s', '"SERVER_NAME"'], ['l', ':'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['s', '"SERVER_ADDR"'], ['l', ':'], ['s', "'127.0.0.1'"], ['o', 'if'], ['v', 'host', 'self.get_var("host")'], ['l', '='], ['l', '='], ['s', "'localhost'"], ['o', 'else'], ['v', 'host', 'self.get_var("host")'], ['l', ','], ['l', '}']]}, {'str': "$request_headers = str($handler->headers)->strip()->split('\\n')", 'command': '$request_headers', 'args_str': "= str($handler->headers)->strip()->split('\\n')", 'args': ['=', "str($handler->headers)->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 145, 'strings': [[False, '$request_headers = str($handler->headers)->strip()->split('], [True, "'\\n'"], [False, ')']], 'eval': [['v', 'request_headers', 'self.get_var("request_headers")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'headers'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'headers'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 146, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': 'while $i < len($request_headers)', 'command': 'while', 'args_str': '$i < len($request_headers)', 'args': ['$i', '<', 'len($request_headers)'], 'file_path': '@web.server', 'line_number': 147, 'strings': [[False, 'while $i < len($request_headers)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'request_headers', 'self.get_var("request_headers")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'request_headers', 'self.get_var("request_headers")'], ['l', ')']]}, {'str': "$key = $request_headers[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $request_headers[$i]->split(':', 1)", 'args': ['=', "$request_headers[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 148, 'strings': [[False, '$key = $request_headers[$i]->split('], [True, "':'"], [False, ', 1)']], 'eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['v', 'request_headers', 'self.get_var("request_headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'request_headers', 'self.get_var("request_headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 149, 'strings': [[False, '$value = $key[-1]']], 'eval': [['v', 'value', 'self.get_var("value")'], ['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']']]}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 150, 'strings': [[False, '$key = $key[0]']], 'eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': "$key = 'HTTP_' + $key->replace('-', '_')->upper()", 'command': '$key', 'args_str': "= 'HTTP_' + $key->replace('-', '_')->upper()", 'args': ['=', "'HTTP_'", '+', "$key->replace('-',", "'_')->upper()"], 'file_path': '@web.server', 'line_number': 151, 'strings': [[False, '$key = '], [True, "'HTTP_'"], [False, ' + $key->replace('], [True, "'-'"], [False, ', '], [True, "'_'"], [False, ')->upper()']], 'eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['s', "'HTTP_'"], ['l', '+'], ['v', 'key', 'self.get_var("key")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "'_'"], ['l', ')'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['s', "'HTTP_'"], ['l', '+'], ['v', 'key', 'self.get_var("key")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "'_'"], ['l', ')'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']]}, {'str': '$env[$key] = $value->strip()', 'command': '$env[$key]', 'args_str': '= $value->strip()', 'args': ['=', '$value->strip()'], 'file_path': '@web.server', 'line_number': 152, 'strings': [[False, '$env[$key] = $value->strip()']], 'eval': [['v', 'env', 'self.get_var("env")'], ['l', '['], ['v', 'key', 'self.get_var("key")'], ['l', ']'], ['l', '='], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 153, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 154, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': "$post_data = ''", 'command': '$post_data', 'args_str': "= ''", 'args': ['=', "''"], 'file_path': '@web.server', 'line_number': 155, 'strings': [[False, '$post_data = '], [True, "''"], [False, '']], 'eval': [['v', 'post_data', 'self.get_var("post_data")'], ['l', '='], ['s', "''"]], 'args_eval': [['l', '='], ['s', "''"]]}, {'str': "if $request_method == 'POST'", 'command': 'if', 'args_str': "$request_method == 'POST'", 'args': ['$request_method', '==', "'POST'"], 'file_path': '@web.server', 'line_number': 156, 'strings': [[False, 'if $request_method == '], [True, "'POST'"], [False, '']], 'eval': [['o', 'if'], ['v', 'request_method', 'self.get_var("request_method")'], ['l', '='], ['l', '='], ['s', "'POST'"]], 'args_eval': [['v', 'request_method', 'self.get_var("request_method")'], ['l', '='], ['l', '='], ['s', "'POST'"]]}, {'str': "mem not ($request_method == 'POST')", 'command': 'mem', 'args_str': "not ($request_method == 'POST')", 'args': ['not', '($request_method', '==', "'POST')"], 'file_path': '<system>', 'line_number': 169, 'strings': [[False, 'mem not ($request_method == '], [True, "'POST'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'request_method', 'self.get_var("request_method")'], ['l', '='], ['l', '='], ['s', "'POST'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'request_method', 'self.get_var("request_method")'], ['l', '='], ['l', '='], ['s', "'POST'"], ['l', ')']]}, {'str': 'gotoif tmplabelif60_2', 'command': 'gotoif', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 169, 'strings': [[False, 'gotoif tmplabelif60_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif60_2']], 'args_eval': [['o', 'tmplabelif60_2']]}, {'str': "$post_data = $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'command': '$post_data', 'args_str': "= $handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))", 'args': ['=', "$handler->rfile->read(int($env['HTTP_CONTENT_LENGTH']))"], 'file_path': '@web.server', 'line_number': 157, 'strings': [[False, '$post_data = $handler->rfile->read(int($env['], [True, "'HTTP_CONTENT_LENGTH'"], [False, ']))']], 'eval': [['v', 'post_data', 'self.get_var("post_data")'], ['l', '='], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'rfile'], ['l', '.'], ['n', 'read'], ['l', '('], ['o', 'int'], ['l', '('], ['v', 'env', 'self.get_var("env")'], ['l', '['], ['s', "'HTTP_CONTENT_LENGTH'"], ['l', ']'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'rfile'], ['l', '.'], ['n', 'read'], ['l', '('], ['o', 'int'], ['l', '('], ['v', 'env', 'self.get_var("env")'], ['l', '['], ['s', "'HTTP_CONTENT_LENGTH'"], ['l', ']'], ['l', ')'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 158, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif60_2', 'command': 'label', 'args_str': 'tmplabelif60_2', 'args': ['tmplabelif60_2'], 'file_path': '<system>', 'line_number': 173, 'strings': [[False, 'label tmplabelif60_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif60_2']], 'args_eval': [['o', 'tmplabelif60_2']]}, {'str': 'label tmplabelif60_end', 'command': 'label', 'args_str': 'tmplabelif60_end', 'args': ['tmplabelif60_end'], 'file_path': '<system>', 'line_number': 173, 'strings': [[False, 'label tmplabelif60_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif60_end']], 'args_eval': [['o', 'tmplabelif60_end']]}, {'str': "$result = subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'command': '$result', 'args_str': "= subprocess.Popen(' '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)", 'args': ['=', "subprocess.Popen('", "'->join($command),", 'stdout=subprocess.PIPE,', 'stderr=subprocess.PIPE,', 'stdin=subprocess.PIPE,', 'env=$env,', 'shell=true)'], 'file_path': '@web.server', 'line_number': 159, 'strings': [[False, '$result = subprocess.Popen('], [True, "' '"], [False, '->join($command), stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE, env=$env, shell=true)']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['o', 'subprocess.Popen'], ['l', '('], ['s', "' '"], ['l', '.'], ['n', 'join'], ['l', '('], ['v', 'command', 'self.get_var("command")'], ['l', ')'], ['l', ','], ['o', 'stdout'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'stderr'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'stdin'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'env'], ['l', '='], ['v', 'env', 'self.get_var("env")'], ['l', ','], ['o', 'shell'], ['l', '='], ['o', 'true'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'subprocess.Popen'], ['l', '('], ['s', "' '"], ['l', '.'], ['n', 'join'], ['l', '('], ['v', 'command', 'self.get_var("command")'], ['l', ')'], ['l', ','], ['o', 'stdout'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'stderr'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'stdin'], ['l', '='], ['o', 'subprocess.PIPE'], ['l', ','], ['o', 'env'], ['l', '='], ['v', 'env', 'self.get_var("env")'], ['l', ','], ['o', 'shell'], ['l', '='], ['o', 'true'], ['l', ')']]}, {'str': '$result = $result->communicate(input=$post_data)', 'command': '$result', 'args_str': '= $result->communicate(input=$post_data)', 'args': ['=', '$result->communicate(input=$post_data)'], 'file_path': '@web.server', 'line_number': 160, 'strings': [[False, '$result = $result->communicate(input=$post_data)']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'communicate'], ['l', '('], ['o', 'input'], ['l', '='], ['v', 'post_data', 'self.get_var("post_data")'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'communicate'], ['l', '('], ['o', 'input'], ['l', '='], ['v', 'post_data', 'self.get_var("post_data")'], ['l', ')']]}, {'str': '$result = $result[0]', 'command': '$result', 'args_str': '= $result[0]', 'args': ['=', '$result[0]'], 'file_path': '@web.server', 'line_number': 161, 'strings': [[False, '$result = $result[0]']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': '$headers = []', 'command': '$headers', 'args_str': '= []', 'args': ['=', '[]'], 'file_path': '@web.server', 'line_number': 162, 'strings': [[False, '$headers = []']], 'eval': [['v', 'headers', 'self.get_var("headers")'], ['l', '='], ['l', '['], ['l', ']']], 'args_eval': [['l', '='], ['l', '['], ['l', ']']]}, {'str': "$tmp_cookies = str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'command': '$tmp_cookies', 'args_str': "= str($result->decode())->strip()->split('\\n\\n', 1)[0]->strip()->split('\\n')", 'args': ['=', "str($result->decode())->strip()->split('\\n\\n',", "1)[0]->strip()->split('\\n')"], 'file_path': '@web.server', 'line_number': 163, 'strings': [[False, '$tmp_cookies = str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[0]->strip()->split('], [True, "'\\n'"], [False, ')']], 'eval': [['v', 'tmp_cookies', 'self.get_var("tmp_cookies")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['o', '0'], ['l', ']'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n'"], ['l', ')']]}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 164, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$res_code = 200', 'command': '$res_code', 'args_str': '= 200', 'args': ['=', '200'], 'file_path': '@web.server', 'line_number': 165, 'strings': [[False, '$res_code = 200']], 'eval': [['v', 'res_code', 'self.get_var("res_code")'], ['l', '='], ['o', '200']], 'args_eval': [['l', '='], ['o', '200']]}, {'str': 'while $i < len($tmp_cookies)', 'command': 'while', 'args_str': '$i < len($tmp_cookies)', 'args': ['$i', '<', 'len($tmp_cookies)'], 'file_path': '@web.server', 'line_number': 166, 'strings': [[False, 'while $i < len($tmp_cookies)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_cookies', 'self.get_var("tmp_cookies")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'tmp_cookies', 'self.get_var("tmp_cookies")'], ['l', ')']]}, {'str': "$key = $tmp_cookies[$i]->split(':', 1)", 'command': '$key', 'args_str': "= $tmp_cookies[$i]->split(':', 1)", 'args': ['=', "$tmp_cookies[$i]->split(':',", '1)'], 'file_path': '@web.server', 'line_number': 167, 'strings': [[False, '$key = $tmp_cookies[$i]->split('], [True, "':'"], [False, ', 1)']], 'eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['v', 'tmp_cookies', 'self.get_var("tmp_cookies")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')']], 'args_eval': [['l', '='], ['v', 'tmp_cookies', 'self.get_var("tmp_cookies")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "':'"], ['l', ','], ['o', '1'], ['l', ')']]}, {'str': '$value = $key[-1]', 'command': '$value', 'args_str': '= $key[-1]', 'args': ['=', '$key[-1]'], 'file_path': '@web.server', 'line_number': 168, 'strings': [[False, '$value = $key[-1]']], 'eval': [['v', 'value', 'self.get_var("value")'], ['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']']]}, {'str': '$key = $key[0]', 'command': '$key', 'args_str': '= $key[0]', 'args': ['=', '$key[0]'], 'file_path': '@web.server', 'line_number': 169, 'strings': [[False, '$key = $key[0]']], 'eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['o', '0'], ['l', ']']], 'args_eval': [['l', '='], ['v', 'key', 'self.get_var("key")'], ['l', '['], ['o', '0'], ['l', ']']]}, {'str': "if $key == 'Status'", 'command': 'if', 'args_str': "$key == 'Status'", 'args': ['$key', '==', "'Status'"], 'file_path': '@web.server', 'line_number': 170, 'strings': [[False, 'if $key == '], [True, "'Status'"], [False, '']], 'eval': [['o', 'if'], ['v', 'key', 'self.get_var("key")'], ['l', '='], ['l', '='], ['s', "'Status'"]], 'args_eval': [['v', 'key', 'self.get_var("key")'], ['l', '='], ['l', '='], ['s', "'Status'"]]}, {'str': "mem not ($key == 'Status')", 'command': 'mem', 'args_str': "not ($key == 'Status')", 'args': ['not', '($key', '==', "'Status')"], 'file_path': '<system>', 'line_number': 187, 'strings': [[False, 'mem not ($key == '], [True, "'Status'"], [False, ')']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'key', 'self.get_var("key")'], ['l', '='], ['l', '='], ['s', "'Status'"], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'key', 'self.get_var("key")'], ['l', '='], ['l', '='], ['s', "'Status'"], ['l', ')']]}, {'str': 'gotoif tmplabelif61_2', 'command': 'gotoif', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 187, 'strings': [[False, 'gotoif tmplabelif61_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif61_2']], 'args_eval': [['o', 'tmplabelif61_2']]}, {'str': '$res_code = int($value)', 'command': '$res_code', 'args_str': '= int($value)', 'args': ['=', 'int($value)'], 'file_path': '@web.server', 'line_number': 171, 'strings': [[False, '$res_code = int($value)']], 'eval': [['v', 'res_code', 'self.get_var("res_code")'], ['l', '='], ['o', 'int'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'int'], ['l', '('], ['v', 'value', 'self.get_var("value")'], ['l', ')']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 172, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif61_end', 'command': 'goto', 'args_str': 'tmplabelif61_end', 'args': ['tmplabelif61_end'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'goto tmplabelif61_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif61_end']], 'args_eval': [['o', 'tmplabelif61_end']]}, {'str': 'label tmplabelif61_2', 'command': 'label', 'args_str': 'tmplabelif61_2', 'args': ['tmplabelif61_2'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'label tmplabelif61_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif61_2']], 'args_eval': [['o', 'tmplabelif61_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif61_3', 'command': 'gotoif', 'args_str': 'tmplabelif61_3', 'args': ['tmplabelif61_3'], 'file_path': '<system>', 'line_number': 191, 'strings': [[False, 'gotoif tmplabelif61_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif61_3']], 'args_eval': [['o', 'tmplabelif61_3']]}, {'str': '$headers->append ([$key->strip(), $value->strip()])', 'command': '$headers->append', 'args_str': '([$key->strip(), $value->strip()])', 'args': ['([$key->strip(),', '$value->strip()])'], 'file_path': '@web.server', 'line_number': 173, 'strings': [[False, '$headers->append ([$key->strip(), $value->strip()])']], 'eval': [['v', 'headers', 'self.get_var("headers")'], ['l', '.'], ['n', 'append'], ['l', '('], ['l', '['], ['v', 'key', 'self.get_var("key")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['l', '['], ['v', 'key', 'self.get_var("key")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', ','], ['v', 'value', 'self.get_var("value")'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', ']'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 174, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif61_3', 'command': 'label', 'args_str': 'tmplabelif61_3', 'args': ['tmplabelif61_3'], 'file_path': '<system>', 'line_number': 197, 'strings': [[False, 'label tmplabelif61_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif61_3']], 'args_eval': [['o', 'tmplabelif61_3']]}, {'str': 'label tmplabelif61_end', 'command': 'label', 'args_str': 'tmplabelif61_end', 'args': ['tmplabelif61_end'], 'file_path': '<system>', 'line_number': 197, 'strings': [[False, 'label tmplabelif61_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif61_end']], 'args_eval': [['o', 'tmplabelif61_end']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 175, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 176, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$i = 0', 'command': '$i', 'args_str': '= 0', 'args': ['=', '0'], 'file_path': '@web.server', 'line_number': 177, 'strings': [[False, '$i = 0']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['o', '0']], 'args_eval': [['l', '='], ['o', '0']]}, {'str': '$handler->send_response ($res_code)', 'command': '$handler->send_response', 'args_str': '($res_code)', 'args': ['($res_code)'], 'file_path': '@web.server', 'line_number': 178, 'strings': [[False, '$handler->send_response ($res_code)']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_response'], ['l', '('], ['v', 'res_code', 'self.get_var("res_code")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'res_code', 'self.get_var("res_code")'], ['l', ')']]}, {'str': 'while $i < len($headers)', 'command': 'while', 'args_str': '$i < len($headers)', 'args': ['$i', '<', 'len($headers)'], 'file_path': '@web.server', 'line_number': 179, 'strings': [[False, 'while $i < len($headers)']], 'eval': [['o', 'while'], ['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'headers', 'self.get_var("headers")'], ['l', ')']], 'args_eval': [['v', 'i', 'self.get_var("i")'], ['l', '<'], ['o', 'len'], ['l', '('], ['v', 'headers', 'self.get_var("headers")'], ['l', ')']]}, {'str': '$handler->send_header ($headers[$i][0], $headers[$i][1])', 'command': '$handler->send_header', 'args_str': '($headers[$i][0], $headers[$i][1])', 'args': ['($headers[$i][0],', '$headers[$i][1])'], 'file_path': '@web.server', 'line_number': 180, 'strings': [[False, '$handler->send_header ($headers[$i][0], $headers[$i][1])']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_header'], ['l', '('], ['v', 'headers', 'self.get_var("headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ','], ['v', 'headers', 'self.get_var("headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'headers', 'self.get_var("headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '0'], ['l', ']'], ['l', ','], ['v', 'headers', 'self.get_var("headers")'], ['l', '['], ['v', 'i', 'self.get_var("i")'], ['l', ']'], ['l', '['], ['o', '1'], ['l', ']'], ['l', ')']]}, {'str': '$i = $i + 1', 'command': '$i', 'args_str': '= $i + 1', 'args': ['=', '$i', '+', '1'], 'file_path': '@web.server', 'line_number': 181, 'strings': [[False, '$i = $i + 1']], 'eval': [['v', 'i', 'self.get_var("i")'], ['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']], 'args_eval': [['l', '='], ['v', 'i', 'self.get_var("i")'], ['l', '+'], ['o', '1']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 182, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 183, 'strings': [[False, '$handler->end_headers ()']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'end_headers'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': "$handler->wfile->write (                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'command': '$handler->wfile->write', 'args_str': "(                    str($result->decode())->strip()->split('\\n\\n', 1)[-1]->encode()                )", 'args': ['(', "str($result->decode())->strip()->split('\\n\\n',", '1)[-1]->encode()', ')'], 'file_path': '@web.server', 'line_number': 186, 'strings': [[False, '$handler->wfile->write (                    str($result->decode())->strip()->split('], [True, "'\\n\\n'"], [False, ', 1)[-1]->encode()                )']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'wfile'], ['l', '.'], ['n', 'write'], ['l', '('], ['o', 'str'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'str'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'decode'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'strip'], ['l', '('], ['l', ')'], ['l', '.'], ['n', 'split'], ['l', '('], ['s', "'\\n\\n'"], ['l', ','], ['o', '1'], ['l', ')'], ['l', '['], ['l', '-'], ['o', '1'], ['l', ']'], ['l', '.'], ['n', 'encode'], ['l', '('], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 187, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 188, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif57_2', 'command': 'label', 'args_str': 'tmplabelif57_2', 'args': ['tmplabelif57_2'], 'file_path': '<system>', 'line_number': 211, 'strings': [[False, 'label tmplabelif57_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif57_2']], 'args_eval': [['o', 'tmplabelif57_2']]}, {'str': 'label tmplabelif57_end', 'command': 'label', 'args_str': 'tmplabelif57_end', 'args': ['tmplabelif57_end'], 'file_path': '<system>', 'line_number': 211, 'strings': [[False, 'label tmplabelif57_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif57_end']], 'args_eval': [['o', 'tmplabelif57_end']]}, {'str': 'try handle_file_error', 'command': 'try', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 189, 'strings': [[False, 'try handle_file_error']], 'eval': [['o', 'try'], ['o', 'handle_file_error']], 'args_eval': [['o', 'handle_file_error']]}, {'str': "$f = open($full_path, 'r')", 'command': '$f', 'args_str': "= open($full_path, 'r')", 'args': ['=', 'open($full_path,', "'r')"], 'file_path': '@web.server', 'line_number': 190, 'strings': [[False, '$f = open($full_path, '], [True, "'r'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'r'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'full_path', 'self.get_var("full_path")'], ['l', ','], ['s', "'r'"], ['l', ')']]}, {'str': '$content = $f->read()', 'command': '$content', 'args_str': '= $f->read()', 'args': ['=', '$f->read()'], 'file_path': '@web.server', 'line_number': 191, 'strings': [[False, '$content = $f->read()']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']]}, {'str': '$f->read ()', 'command': '$f->read', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 192, 'strings': [[False, '$f->read ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'read'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endtry ', 'command': 'endtry', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 193, 'strings': [[False, 'endtry']], 'eval': [['o', 'endtry']], 'args_eval': []}, {'str': 'goto after_handle_file_error', 'command': 'goto', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 194, 'strings': [[False, 'goto after_handle_file_error']], 'eval': [['o', 'goto'], ['o', 'after_handle_file_error']], 'args_eval': [['o', 'after_handle_file_error']]}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label handle_file_error', 'command': 'label', 'args_str': 'handle_file_error', 'args': ['handle_file_error'], 'file_path': '@web.server', 'line_number': 194, 'strings': [[False, 'label handle_file_error']], 'eval': [['o', 'label'], ['o', 'handle_file_error']], 'args_eval': [['o', 'handle_file_error']]}, {'str': '$handler->send_response (403)', 'command': '$handler->send_response', 'args_str': '(403)', 'args': ['(403)'], 'file_path': '@web.server', 'line_number': 195, 'strings': [[False, '$handler->send_response (403)']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_response'], ['l', '('], ['o', '403'], ['l', ')']], 'args_eval': [['l', '('], ['o', '403'], ['l', ')']]}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 196, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_header'], ['l', '('], ['s', '"Content-type"'], ['l', ','], ['s', '"text/html"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"Content-type"'], ['l', ','], ['s', '"text/html"'], ['l', ')']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 197, 'strings': [[False, '$handler->end_headers ()']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'end_headers'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': '$handler->wfile->write (bytes(\'403 - Access Denied\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'403 - Access Denied\', "utf-8"))', 'args': ["(bytes('403", '-', 'Access', "Denied',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 198, 'strings': [[False, '$handler->wfile->write (bytes('], [True, "'403 - Access Denied'"], [False, ', '], [True, '"utf-8"'], [False, '))']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'wfile'], ['l', '.'], ['n', 'write'], ['l', '('], ['o', 'bytes'], ['l', '('], ['s', "'403 - Access Denied'"], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'bytes'], ['l', '('], ['s', "'403 - Access Denied'"], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 199, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'pass ', 'command': 'pass', 'args_str': '', 'args': [], 'file_path': '<system>', 'line_number': 0, 'strings': [[False, 'pass']], 'eval': [['o', 'pass']], 'args_eval': []}, {'str': 'label after_handle_file_error', 'command': 'label', 'args_str': 'after_handle_file_error', 'args': ['after_handle_file_error'], 'file_path': '@web.server', 'line_number': 200, 'strings': [[False, 'label after_handle_file_error']], 'eval': [['o', 'label'], ['o', 'after_handle_file_error']], 'args_eval': [['o', 'after_handle_file_error']]}, {'str': '$handler->send_response (200)', 'command': '$handler->send_response', 'args_str': '(200)', 'args': ['(200)'], 'file_path': '@web.server', 'line_number': 201, 'strings': [[False, '$handler->send_response (200)']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_response'], ['l', '('], ['o', '200'], ['l', ')']], 'args_eval': [['l', '('], ['o', '200'], ['l', ')']]}, {'str': 'if $mime == null', 'command': 'if', 'args_str': '$mime == null', 'args': ['$mime', '==', 'null'], 'file_path': '@web.server', 'line_number': 202, 'strings': [[False, 'if $mime == null']], 'eval': [['o', 'if'], ['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['l', '='], ['o', 'null']], 'args_eval': [['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['l', '='], ['o', 'null']]}, {'str': 'mem not ($mime == null)', 'command': 'mem', 'args_str': 'not ($mime == null)', 'args': ['not', '($mime', '==', 'null)'], 'file_path': '<system>', 'line_number': 230, 'strings': [[False, 'mem not ($mime == null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['l', '='], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['l', '='], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif62_2', 'command': 'gotoif', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 230, 'strings': [[False, 'gotoif tmplabelif62_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif62_2']], 'args_eval': [['o', 'tmplabelif62_2']]}, {'str': "$mime = 'text/plain'", 'command': '$mime', 'args_str': "= 'text/plain'", 'args': ['=', "'text/plain'"], 'file_path': '@web.server', 'line_number': 203, 'strings': [[False, '$mime = '], [True, "'text/plain'"], [False, '']], 'eval': [['v', 'mime', 'self.get_var("mime")'], ['l', '='], ['s', "'text/plain'"]], 'args_eval': [['l', '='], ['s', "'text/plain'"]]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 204, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif62_2', 'command': 'label', 'args_str': 'tmplabelif62_2', 'args': ['tmplabelif62_2'], 'file_path': '<system>', 'line_number': 234, 'strings': [[False, 'label tmplabelif62_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif62_2']], 'args_eval': [['o', 'tmplabelif62_2']]}, {'str': 'label tmplabelif62_end', 'command': 'label', 'args_str': 'tmplabelif62_end', 'args': ['tmplabelif62_end'], 'file_path': '<system>', 'line_number': 234, 'strings': [[False, 'label tmplabelif62_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif62_end']], 'args_eval': [['o', 'tmplabelif62_end']]}, {'str': '$handler->send_header ("Content-type", $mime)', 'command': '$handler->send_header', 'args_str': '("Content-type", $mime)', 'args': ['("Content-type",', '$mime)'], 'file_path': '@web.server', 'line_number': 205, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', $mime)']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_header'], ['l', '('], ['s', '"Content-type"'], ['l', ','], ['v', 'mime', 'self.get_var("mime")'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"Content-type"'], ['l', ','], ['v', 'mime', 'self.get_var("mime")'], ['l', ')']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 206, 'strings': [[False, '$handler->end_headers ()']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'end_headers'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': '$handler->wfile->write (bytes($content, "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes($content, "utf-8"))', 'args': ['(bytes($content,', '"utf-8"))'], 'file_path': '@web.server', 'line_number': 207, 'strings': [[False, '$handler->wfile->write (bytes($content, '], [True, '"utf-8"'], [False, '))']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'wfile'], ['l', '.'], ['n', 'write'], ['l', '('], ['o', 'bytes'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'bytes'], ['l', '('], ['v', 'content', 'self.get_var("content")'], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 208, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 209, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif55_end', 'command': 'goto', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'goto tmplabelif55_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif55_end']], 'args_eval': [['o', 'tmplabelif55_end']]}, {'str': 'label tmplabelif55_2', 'command': 'label', 'args_str': 'tmplabelif55_2', 'args': ['tmplabelif55_2'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'label tmplabelif55_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif55_2']], 'args_eval': [['o', 'tmplabelif55_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif55_3', 'command': 'gotoif', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 241, 'strings': [[False, 'gotoif tmplabelif55_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif55_3']], 'args_eval': [['o', 'tmplabelif55_3']]}, {'str': '$handler->send_response (404)', 'command': '$handler->send_response', 'args_str': '(404)', 'args': ['(404)'], 'file_path': '@web.server', 'line_number': 210, 'strings': [[False, '$handler->send_response (404)']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_response'], ['l', '('], ['o', '404'], ['l', ')']], 'args_eval': [['l', '('], ['o', '404'], ['l', ')']]}, {'str': '$handler->send_header ("Content-type", "text/html")', 'command': '$handler->send_header', 'args_str': '("Content-type", "text/html")', 'args': ['("Content-type",', '"text/html")'], 'file_path': '@web.server', 'line_number': 211, 'strings': [[False, '$handler->send_header ('], [True, '"Content-type"'], [False, ', '], [True, '"text/html"'], [False, ')']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'send_header'], ['l', '('], ['s', '"Content-type"'], ['l', ','], ['s', '"text/html"'], ['l', ')']], 'args_eval': [['l', '('], ['s', '"Content-type"'], ['l', ','], ['s', '"text/html"'], ['l', ')']]}, {'str': '$handler->end_headers ()', 'command': '$handler->end_headers', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 212, 'strings': [[False, '$handler->end_headers ()']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'end_headers'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': '$handler->wfile->write (bytes(\'404 - Not Found\', "utf-8"))', 'command': '$handler->wfile->write', 'args_str': '(bytes(\'404 - Not Found\', "utf-8"))', 'args': ["(bytes('404", '-', 'Not', "Found',", '"utf-8"))'], 'file_path': '@web.server', 'line_number': 213, 'strings': [[False, '$handler->wfile->write (bytes('], [True, "'404 - Not Found'"], [False, ', '], [True, '"utf-8"'], [False, '))']], 'eval': [['v', 'handler', 'self.get_var("handler")'], ['l', '.'], ['n', 'wfile'], ['l', '.'], ['n', 'write'], ['l', '('], ['o', 'bytes'], ['l', '('], ['s', "'404 - Not Found'"], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'bytes'], ['l', '('], ['s', "'404 - Not Found'"], ['l', ','], ['s', '"utf-8"'], ['l', ')'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 214, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 215, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif55_3', 'command': 'label', 'args_str': 'tmplabelif55_3', 'args': ['tmplabelif55_3'], 'file_path': '<system>', 'line_number': 251, 'strings': [[False, 'label tmplabelif55_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif55_3']], 'args_eval': [['o', 'tmplabelif55_3']]}, {'str': 'label tmplabelif55_end', 'command': 'label', 'args_str': 'tmplabelif55_end', 'args': ['tmplabelif55_end'], 'file_path': '<system>', 'line_number': 251, 'strings': [[False, 'label tmplabelif55_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif55_end']], 'args_eval': [['o', 'tmplabelif55_end']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 216, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '$server->set_get (get_handler)', 'command': '$server->set_get', 'args_str': '(get_handler)', 'args': ['(get_handler)'], 'file_path': '@web.server', 'line_number': 218, 'strings': [[False, '$server->set_get (get_handler)']], 'eval': [['v', 'server', 'self.get_var("server")'], ['l', '.'], ['n', 'set_get'], ['l', '('], ['o', 'get_handler'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'get_handler'], ['l', ')']]}, {'str': '$server->set_post (post_handler)', 'command': '$server->set_post', 'args_str': '(post_handler)', 'args': ['(post_handler)'], 'file_path': '@web.server', 'line_number': 219, 'strings': [[False, '$server->set_post (post_handler)']], 'eval': [['v', 'server', 'self.get_var("server")'], ['l', '.'], ['n', 'set_post'], ['l', '('], ['o', 'post_handler'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'post_handler'], ['l', ')']]}, {'str': "println ('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'command': 'println', 'args_str': "('Serving the development server on http://' + $host + ':' + str($port) + ' - Do not use this on production')", 'args': ["('Serving", 'the', 'development', 'server', 'on', "http://'", '+', '$host', '+', "':'", '+', 'str($port)', '+', "'", '-', 'Do', 'not', 'use', 'this', 'on', "production')"], 'file_path': '@web.server', 'line_number': 221, 'strings': [[False, 'println ('], [True, "'Serving the development server on http://'"], [False, ' + $host + '], [True, "':'"], [False, ' + str($port) + '], [True, "' - Do not use this on production'"], [False, ')']], 'eval': [['o', 'println'], ['l', '('], ['s', "'Serving the development server on http://'"], ['l', '+'], ['v', 'host', 'self.get_var("host")'], ['l', '+'], ['s', "':'"], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'port', 'self.get_var("port")'], ['l', ')'], ['l', '+'], ['s', "' - Do not use this on production'"], ['l', ')']], 'args_eval': [['l', '('], ['s', "'Serving the development server on http://'"], ['l', '+'], ['v', 'host', 'self.get_var("host")'], ['l', '+'], ['s', "':'"], ['l', '+'], ['o', 'str'], ['l', '('], ['v', 'port', 'self.get_var("port")'], ['l', ')'], ['l', '+'], ['s', "' - Do not use this on production'"], ['l', ')']]}, {'str': '$server->serve ()', 'command': '$server->serve', 'args_str': '()', 'args': ['()'], 'file_path': '@web.server', 'line_number': 222, 'strings': [[False, '$server->serve ()']], 'eval': [['v', 'server', 'self.get_var("server")'], ['l', '.'], ['n', 'serve'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.server', 'line_number': 223, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif47_2', 'command': 'label', 'args_str': 'tmplabelif47_2', 'args': ['tmplabelif47_2'], 'file_path': '<system>', 'line_number': 259, 'strings': [[False, 'label tmplabelif47_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif47_2']], 'args_eval': [['o', 'tmplabelif47_2']]}, {'str': 'label tmplabelif47_end', 'command': 'label', 'args_str': 'tmplabelif47_end', 'args': ['tmplabelif47_end'], 'file_path': '<system>', 'line_number': 259, 'strings': [[False, 'label tmplabelif47_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif47_end']], 'args_eval': [['o', 'tmplabelif47_end']]}]
modules["web.session"] = [{'str': 'namespace web', 'command': 'namespace', 'args_str': 'web', 'args': ['web'], 'file_path': '@web.session', 'line_number': 22, 'strings': [[False, 'namespace web']], 'eval': [['o', 'namespace'], ['o', 'web']], 'args_eval': [['o', 'web']]}, {'str': "$session_dir = '/tmp'", 'command': '$session_dir', 'args_str': "= '/tmp'", 'args': ['=', "'/tmp'"], 'file_path': '@web.session', 'line_number': 23, 'strings': [[False, '$session_dir = '], [True, "'/tmp'"], [False, '']], 'eval': [['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '='], ['s', "'/tmp'"]], 'args_eval': [['l', '='], ['s', "'/tmp'"]]}, {'str': '@doc "    Generates a random session Id and returns it.    "', 'command': '@doc', 'args_str': '"    Generates a random session Id and returns it.    "', 'args': ['"', 'Generates', 'a', 'random', 'session', 'Id', 'and', 'returns', 'it.', '"'], 'file_path': '@web.session', 'line_number': 24, 'strings': [[False, '@doc '], [True, '"    Generates a random session Id and returns it.    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"    Generates a random session Id and returns it.    "']], 'args_eval': [['s', '"    Generates a random session Id and returns it.    "']]}, {'str': 'func string::generate_random_session_id()', 'command': 'func', 'args_str': 'string::generate_random_session_id()', 'args': ['string::generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 25, 'strings': [[False, 'func string::generate_random_session_id()']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']]}, {'str': "$uuid = py_load_module('uuid')", 'command': '$uuid', 'args_str': "= py_load_module('uuid')", 'args': ['=', "py_load_module('uuid')"], 'file_path': '@web.session', 'line_number': 26, 'strings': [[False, '$uuid = py_load_module('], [True, "'uuid'"], [False, ')']], 'eval': [['v', 'uuid', 'self.get_var("uuid")'], ['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'uuid'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'py_load_module'], ['l', '('], ['s', "'uuid'"], ['l', ')']]}, {'str': "$abc = 'abcdefghijknmlopqrstuvwxyz'", 'command': '$abc', 'args_str': "= 'abcdefghijknmlopqrstuvwxyz'", 'args': ['=', "'abcdefghijknmlopqrstuvwxyz'"], 'file_path': '@web.session', 'line_number': 27, 'strings': [[False, '$abc = '], [True, "'abcdefghijknmlopqrstuvwxyz'"], [False, '']], 'eval': [['v', 'abc', 'self.get_var("abc")'], ['l', '='], ['s', "'abcdefghijknmlopqrstuvwxyz'"]], 'args_eval': [['l', '='], ['s', "'abcdefghijknmlopqrstuvwxyz'"]]}, {'str': '$abc = $abc + $abc->upper()', 'command': '$abc', 'args_str': '= $abc + $abc->upper()', 'args': ['=', '$abc', '+', '$abc->upper()'], 'file_path': '@web.session', 'line_number': 28, 'strings': [[False, '$abc = $abc + $abc->upper()']], 'eval': [['v', 'abc', 'self.get_var("abc")'], ['l', '='], ['v', 'abc', 'self.get_var("abc")'], ['l', '+'], ['v', 'abc', 'self.get_var("abc")'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['v', 'abc', 'self.get_var("abc")'], ['l', '+'], ['v', 'abc', 'self.get_var("abc")'], ['l', '.'], ['n', 'upper'], ['l', '('], ['l', ')']]}, {'str': "$abc = $abc + '0123456789'", 'command': '$abc', 'args_str': "= $abc + '0123456789'", 'args': ['=', '$abc', '+', "'0123456789'"], 'file_path': '@web.session', 'line_number': 29, 'strings': [[False, '$abc = $abc + '], [True, "'0123456789'"], [False, '']], 'eval': [['v', 'abc', 'self.get_var("abc")'], ['l', '='], ['v', 'abc', 'self.get_var("abc")'], ['l', '+'], ['s', "'0123456789'"]], 'args_eval': [['l', '='], ['v', 'abc', 'self.get_var("abc")'], ['l', '+'], ['s', "'0123456789'"]]}, {'str': "$a = str($uuid->uuid4())->replace('-', '')", 'command': '$a', 'args_str': "= str($uuid->uuid4())->replace('-', '')", 'args': ['=', "str($uuid->uuid4())->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 30, 'strings': [[False, '$a = str($uuid->uuid4())->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 'a', 'self.get_var("a")'], ['l', '='], ['o', 'str'], ['l', '('], ['v', 'uuid', 'self.get_var("uuid")'], ['l', '.'], ['n', 'uuid4'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['v', 'uuid', 'self.get_var("uuid")'], ['l', '.'], ['n', 'uuid4'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': "$t = str(time.time()).replace('.', '')", 'command': '$t', 'args_str': "= str(time.time()).replace('.', '')", 'args': ['=', "str(time.time()).replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 31, 'strings': [[False, '$t = str(time.time()).replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 't', 'self.get_var("t")'], ['l', '='], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.replace'], ['l', '('], ['s', "'.'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['o', 'time.time'], ['l', '('], ['l', ')'], ['l', ')'], ['o', '.replace'], ['l', '('], ['s', "'.'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': "$r = str(random.random())->replace('.', '')", 'command': '$r', 'args_str': "= str(random.random())->replace('.', '')", 'args': ['=', "str(random.random())->replace('.',", "'')"], 'file_path': '@web.session', 'line_number': 32, 'strings': [[False, '$r = str(random.random())->replace('], [True, "'.'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 'r', 'self.get_var("r")'], ['l', '='], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'.'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'str'], ['l', '('], ['o', 'random.random'], ['l', '('], ['l', ')'], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'.'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': '$result = $a + $t + $r + $abc', 'command': '$result', 'args_str': '= $a + $t + $r + $abc', 'args': ['=', '$a', '+', '$t', '+', '$r', '+', '$abc'], 'file_path': '@web.session', 'line_number': 33, 'strings': [[False, '$result = $a + $t + $r + $abc']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['v', 'a', 'self.get_var("a")'], ['l', '+'], ['v', 't', 'self.get_var("t")'], ['l', '+'], ['v', 'r', 'self.get_var("r")'], ['l', '+'], ['v', 'abc', 'self.get_var("abc")']], 'args_eval': [['l', '='], ['v', 'a', 'self.get_var("a")'], ['l', '+'], ['v', 't', 'self.get_var("t")'], ['l', '+'], ['v', 'r', 'self.get_var("r")'], ['l', '+'], ['v', 'abc', 'self.get_var("abc")']]}, {'str': '$result = $result * 5', 'command': '$result', 'args_str': '= $result * 5', 'args': ['=', '$result', '*', '5'], 'file_path': '@web.session', 'line_number': 34, 'strings': [[False, '$result = $result * 5']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '*'], ['o', '5']], 'args_eval': [['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '*'], ['o', '5']]}, {'str': "$result = ''->join(random.sample($result*3, len($result)*2))", 'command': '$result', 'args_str': "= ''->join(random.sample($result*3, len($result)*2))", 'args': ['=', "''->join(random.sample($result*3,", 'len($result)*2))'], 'file_path': '@web.session', 'line_number': 35, 'strings': [[False, '$result = '], [True, "''"], [False, '->join(random.sample($result*3, len($result)*2))']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['s', "''"], ['l', '.'], ['n', 'join'], ['l', '('], ['o', 'random.sample'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '*'], ['o', '3'], ['l', ','], ['o', 'len'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', ')'], ['l', '*'], ['o', '2'], ['l', ')'], ['l', ')']], 'args_eval': [['l', '='], ['s', "''"], ['l', '.'], ['n', 'join'], ['l', '('], ['o', 'random.sample'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', '*'], ['o', '3'], ['l', ','], ['o', 'len'], ['l', '('], ['v', 'result', 'self.get_var("result")'], ['l', ')'], ['l', '*'], ['o', '2'], ['l', ')'], ['l', ')']]}, {'str': "$result = $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'command': '$result', 'args_str': "= $result->replace(' ', '')->replace('<', '')->replace('>', '')->replace('-', '')", 'args': ['=', "$result->replace('", "',", "'')->replace('<',", "'')->replace('>',", "'')->replace('-',", "'')"], 'file_path': '@web.session', 'line_number': 36, 'strings': [[False, '$result = $result->replace('], [True, "' '"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'<'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'>'"], [False, ', '], [True, "''"], [False, ')->replace('], [True, "'-'"], [False, ', '], [True, "''"], [False, ')']], 'eval': [['v', 'result', 'self.get_var("result")'], ['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "' '"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'<'"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'>'"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "''"], ['l', ')']], 'args_eval': [['l', '='], ['v', 'result', 'self.get_var("result")'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "' '"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'<'"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'>'"], ['l', ','], ['s', "''"], ['l', ')'], ['l', '.'], ['n', 'replace'], ['l', '('], ['s', "'-'"], ['l', ','], ['s', "''"], ['l', ')']]}, {'str': "return 'pashmaksession' + $result[:200]", 'command': 'return', 'args_str': "'pashmaksession' + $result[:200]", 'args': ["'pashmaksession'", '+', '$result[:200]'], 'file_path': '@web.session', 'line_number': 37, 'strings': [[False, 'return '], [True, "'pashmaksession'"], [False, ' + $result[:200]']], 'eval': [['o', 'return'], ['s', "'pashmaksession'"], ['l', '+'], ['v', 'result', 'self.get_var("result")'], ['l', '['], ['l', ':'], ['o', '200'], ['l', ']']], 'args_eval': [['s', "'pashmaksession'"], ['l', '+'], ['v', 'result', 'self.get_var("result")'], ['l', '['], ['l', ':'], ['o', '200'], ['l', ']']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 38, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'command': '@doc', 'args_str': '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "', 'args': ['"Gets', 'a', 'session', 'id', 'and', 'validates', 'it.', 'if', 'it', 'is', 'valid,', 'returns', 'that.\\n', 'But', 'if', 'is', 'not', 'valid,', 'returns', 'a', 'new', 'id.', '"'], 'file_path': '@web.session', 'line_number': 39, 'strings': [[False, '@doc '], [True, '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "']], 'args_eval': [['s', '"Gets a session id and validates it. if it is valid, returns that.\\n    But if is not valid, returns a new id.    "']]}, {'str': 'func string::validate_session_id(string $id)', 'command': 'func', 'args_str': 'string::validate_session_id(string $id)', 'args': ['string::validate_session_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 40, 'strings': [[False, 'func string::validate_session_id(string $id)']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'validate_session_id'], ['l', '('], ['o', 'string'], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'validate_session_id'], ['l', '('], ['o', 'string'], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': "if (            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'command': 'if', 'args_str': "(            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        )", 'args': ['(', 'len($id)', '!=', '214', 'or', "'.'", 'in', '$id', 'or', "'/'", 'in', '$id', 'or', "'\\\\'", 'in', '$id', 'or', "'\\n'", 'in', '$id', ')'], 'file_path': '@web.session', 'line_number': 43, 'strings': [[False, 'if (            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        )']], 'eval': [['o', 'if'], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', '214'], ['o', 'or'], ['s', "'.'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'/'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\\\'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\n'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'len'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', '214'], ['o', 'or'], ['s', "'.'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'/'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\\\'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\n'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': "mem not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'command': 'mem', 'args_str': "not ((            len($id) != 214 or             '.' in $id or             '/' in $id or             '\\\\' in $id or             '\\n' in $id        ))", 'args': ['not', '((', '', '', '', '', '', '', '', '', '', '', '', 'len($id)', '!=', '214', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'.'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'/'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\\\'", 'in', '$id', 'or', '', '', '', '', '', '', '', '', '', '', '', '', "'\\n'", 'in', '$id', '', '', '', '', '', '', '', '))'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'mem not ((            len($id) != 214 or             '], [True, "'.'"], [False, ' in $id or             '], [True, "'/'"], [False, ' in $id or             '], [True, "'\\\\'"], [False, ' in $id or             '], [True, "'\\n'"], [False, ' in $id        ))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', '214'], ['o', 'or'], ['s', "'.'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'/'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\\\'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\n'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['l', '('], ['o', 'len'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', '!'], ['l', '='], ['o', '214'], ['o', 'or'], ['s', "'.'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'/'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\\\'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['o', 'or'], ['s', "'\\n'"], ['o', 'in'], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif63_2', 'command': 'gotoif', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 19, 'strings': [[False, 'gotoif tmplabelif63_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif63_2']], 'args_eval': [['o', 'tmplabelif63_2']]}, {'str': 'return generate_random_session_id()', 'command': 'return', 'args_str': 'generate_random_session_id()', 'args': ['generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 46, 'strings': [[False, 'return generate_random_session_id()']], 'eval': [['o', 'return'], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'generate_random_session_id'], ['l', '('], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 47, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif63_2', 'command': 'label', 'args_str': 'tmplabelif63_2', 'args': ['tmplabelif63_2'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif63_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif63_2']], 'args_eval': [['o', 'tmplabelif63_2']]}, {'str': 'label tmplabelif63_end', 'command': 'label', 'args_str': 'tmplabelif63_end', 'args': ['tmplabelif63_end'], 'file_path': '<system>', 'line_number': 23, 'strings': [[False, 'label tmplabelif63_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif63_end']], 'args_eval': [['o', 'tmplabelif63_end']]}, {'str': 'return $id', 'command': 'return', 'args_str': '$id', 'args': ['$id'], 'file_path': '@web.session', 'line_number': 49, 'strings': [[False, 'return $id']], 'eval': [['o', 'return'], ['v', 'id', 'self.get_var("id")']], 'args_eval': [['v', 'id', 'self.get_var("id")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 50, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'command': '@doc', 'args_str': '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "', 'args': ['"', 'Writes', 'a', 'new', 'session', 'and', 'returns', 'the', 'ID.\\n', 'Also', 'can', 'get', 'a', 'optional', 'custom', 'ID.', 'Also', 'can', 'get', 'a', 'optional', 'second', 'argument', 'named', 'default', 'value', 'for', 'session.', '"'], 'file_path': '@web.session', 'line_number': 51, 'strings': [[False, '@doc '], [True, '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "']], 'args_eval': [['s', '"    Writes a new session and returns the ID.\\n    Also can get a optional custom ID.    Also can get a optional second argument named default value for session.    "']]}, {'str': 'func string::write_session(string $custom_id=null, dict $default_value={})', 'command': 'func', 'args_str': 'string::write_session(string $custom_id=null, dict $default_value={})', 'args': ['string::write_session(string', '$custom_id=null,', 'dict', '$default_value={})'], 'file_path': '@web.session', 'line_number': 52, 'strings': [[False, 'func string::write_session(string $custom_id=null, dict $default_value={})']], 'eval': [['o', 'func'], ['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'write_session'], ['l', '('], ['o', 'string'], ['v', 'custom_id', 'self.get_var("custom_id")'], ['l', '='], ['o', 'null'], ['l', ','], ['o', 'dict'], ['v', 'default_value', 'self.get_var("default_value")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['o', 'string'], ['l', ':'], ['l', ':'], ['o', 'write_session'], ['l', '('], ['o', 'string'], ['v', 'custom_id', 'self.get_var("custom_id")'], ['l', '='], ['o', 'null'], ['l', ','], ['o', 'dict'], ['v', 'default_value', 'self.get_var("default_value")'], ['l', '='], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': 'if $custom_id is null', 'command': 'if', 'args_str': '$custom_id is null', 'args': ['$custom_id', 'is', 'null'], 'file_path': '@web.session', 'line_number': 53, 'strings': [[False, 'if $custom_id is null']], 'eval': [['o', 'if'], ['v', 'custom_id', 'self.get_var("custom_id")'], ['o', 'is'], ['o', 'null']], 'args_eval': [['v', 'custom_id', 'self.get_var("custom_id")'], ['o', 'is'], ['o', 'null']]}, {'str': 'mem not ($custom_id is null)', 'command': 'mem', 'args_str': 'not ($custom_id is null)', 'args': ['not', '($custom_id', 'is', 'null)'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'mem not ($custom_id is null)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['v', 'custom_id', 'self.get_var("custom_id")'], ['o', 'is'], ['o', 'null'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['v', 'custom_id', 'self.get_var("custom_id")'], ['o', 'is'], ['o', 'null'], ['l', ')']]}, {'str': 'gotoif tmplabelif64_2', 'command': 'gotoif', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 30, 'strings': [[False, 'gotoif tmplabelif64_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif64_2']], 'args_eval': [['o', 'tmplabelif64_2']]}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 54, 'strings': [[False, '$custom_id = generate_random_session_id()']], 'eval': [['v', 'custom_id', 'self.get_var("custom_id")'], ['l', '='], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']]}, {'str': "while os.path.isfile($session_dir + '/' + $custom_id)", 'command': 'while', 'args_str': "os.path.isfile($session_dir + '/' + $custom_id)", 'args': ['os.path.isfile($session_dir', '+', "'/'", '+', '$custom_id)'], 'file_path': '@web.session', 'line_number': 55, 'strings': [[False, 'while os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $custom_id)']], 'eval': [['o', 'while'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'custom_id', 'self.get_var("custom_id")'], ['l', ')']], 'args_eval': [['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'custom_id', 'self.get_var("custom_id")'], ['l', ')']]}, {'str': '$custom_id = generate_random_session_id()', 'command': '$custom_id', 'args_str': '= generate_random_session_id()', 'args': ['=', 'generate_random_session_id()'], 'file_path': '@web.session', 'line_number': 56, 'strings': [[False, '$custom_id = generate_random_session_id()']], 'eval': [['v', 'custom_id', 'self.get_var("custom_id")'], ['l', '='], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'generate_random_session_id'], ['l', '('], ['l', ')']]}, {'str': 'endwhile ', 'command': 'endwhile', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 57, 'strings': [[False, 'endwhile']], 'eval': [['o', 'endwhile']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 58, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif64_2', 'command': 'label', 'args_str': 'tmplabelif64_2', 'args': ['tmplabelif64_2'], 'file_path': '<system>', 'line_number': 37, 'strings': [[False, 'label tmplabelif64_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif64_2']], 'args_eval': [['o', 'tmplabelif64_2']]}, {'str': 'label tmplabelif64_end', 'command': 'label', 'args_str': 'tmplabelif64_end', 'args': ['tmplabelif64_end'], 'file_path': '<system>', 'line_number': 37, 'strings': [[False, 'label tmplabelif64_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif64_end']], 'args_eval': [['o', 'tmplabelif64_end']]}, {'str': "$path = $session_dir + '/' + $custom_id", 'command': '$path', 'args_str': "= $session_dir + '/' + $custom_id", 'args': ['=', '$session_dir', '+', "'/'", '+', '$custom_id'], 'file_path': '@web.session', 'line_number': 60, 'strings': [[False, '$path = $session_dir + '], [True, "'/'"], [False, ' + $custom_id']], 'eval': [['v', 'path', 'self.get_var("path")'], ['l', '='], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'custom_id', 'self.get_var("custom_id")']], 'args_eval': [['l', '='], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'custom_id', 'self.get_var("custom_id")']]}, {'str': "$f = open($path, 'wb')", 'command': '$f', 'args_str': "= open($path, 'wb')", 'args': ['=', 'open($path,', "'wb')"], 'file_path': '@web.session', 'line_number': 61, 'strings': [[False, '$f = open($path, '], [True, "'wb'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'wb'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'path', 'self.get_var("path")'], ['l', ','], ['s', "'wb'"], ['l', ')']]}, {'str': 'pickle.dump ($default_value, $f)', 'command': 'pickle.dump', 'args_str': '($default_value, $f)', 'args': ['($default_value,', '$f)'], 'file_path': '@web.session', 'line_number': 62, 'strings': [[False, 'pickle.dump ($default_value, $f)']], 'eval': [['o', 'pickle.dump'], ['l', '('], ['v', 'default_value', 'self.get_var("default_value")'], ['l', ','], ['v', 'f', 'self.get_var("f")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'default_value', 'self.get_var("default_value")'], ['l', ','], ['v', 'f', 'self.get_var("f")'], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 63, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'return $custom_id', 'command': 'return', 'args_str': '$custom_id', 'args': ['$custom_id'], 'file_path': '@web.session', 'line_number': 64, 'strings': [[False, 'return $custom_id']], 'eval': [['o', 'return'], ['v', 'custom_id', 'self.get_var("custom_id")']], 'args_eval': [['v', 'custom_id', 'self.get_var("custom_id")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 65, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "    Loads the session dictionary by unique id.    "', 'command': '@doc', 'args_str': '"    Loads the session dictionary by unique id.    "', 'args': ['"', 'Loads', 'the', 'session', 'dictionary', 'by', 'unique', 'id.', '"'], 'file_path': '@web.session', 'line_number': 66, 'strings': [[False, '@doc '], [True, '"    Loads the session dictionary by unique id.    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"    Loads the session dictionary by unique id.    "']], 'args_eval': [['s', '"    Loads the session dictionary by unique id.    "']]}, {'str': 'func dict::load_session_by_id(string $id)', 'command': 'func', 'args_str': 'dict::load_session_by_id(string $id)', 'args': ['dict::load_session_by_id(string', '$id)'], 'file_path': '@web.session', 'line_number': 67, 'strings': [[False, 'func dict::load_session_by_id(string $id)']], 'eval': [['o', 'func'], ['o', 'dict'], ['l', ':'], ['l', ':'], ['o', 'load_session_by_id'], ['l', '('], ['o', 'string'], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['o', 'dict'], ['l', ':'], ['l', ':'], ['o', 'load_session_by_id'], ['l', '('], ['o', 'string'], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': '$id = validate_session_id($id)', 'command': '$id', 'args_str': '= validate_session_id($id)', 'args': ['=', 'validate_session_id($id)'], 'file_path': '@web.session', 'line_number': 68, 'strings': [[False, '$id = validate_session_id($id)']], 'eval': [['v', 'id', 'self.get_var("id")'], ['l', '='], ['o', 'validate_session_id'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'validate_session_id'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': "if not os.path.isfile($session_dir + '/' + $id)", 'command': 'if', 'args_str': "not os.path.isfile($session_dir + '/' + $id)", 'args': ['not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id)'], 'file_path': '@web.session', 'line_number': 69, 'strings': [[False, 'if not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id)']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': "mem not (not os.path.isfile($session_dir + '/' + $id))", 'command': 'mem', 'args_str': "not (not os.path.isfile($session_dir + '/' + $id))", 'args': ['not', '(not', 'os.path.isfile($session_dir', '+', "'/'", '+', '$id))'], 'file_path': '<system>', 'line_number': 49, 'strings': [[False, 'mem not (not os.path.isfile($session_dir + '], [True, "'/'"], [False, ' + $id))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'os.path.isfile'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif65_2', 'command': 'gotoif', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 49, 'strings': [[False, 'gotoif tmplabelif65_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif65_2']], 'args_eval': [['o', 'tmplabelif65_2']]}, {'str': 'write_session ($id)', 'command': 'write_session', 'args_str': '($id)', 'args': ['($id)'], 'file_path': '@web.session', 'line_number': 70, 'strings': [[False, 'write_session ($id)']], 'eval': [['o', 'write_session'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 71, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif65_2', 'command': 'label', 'args_str': 'tmplabelif65_2', 'args': ['tmplabelif65_2'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'label tmplabelif65_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif65_2']], 'args_eval': [['o', 'tmplabelif65_2']]}, {'str': 'label tmplabelif65_end', 'command': 'label', 'args_str': 'tmplabelif65_end', 'args': ['tmplabelif65_end'], 'file_path': '<system>', 'line_number': 53, 'strings': [[False, 'label tmplabelif65_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif65_end']], 'args_eval': [['o', 'tmplabelif65_end']]}, {'str': "$f = open($session_dir + '/' + $id, 'rb')", 'command': '$f', 'args_str': "= open($session_dir + '/' + $id, 'rb')", 'args': ['=', 'open($session_dir', '+', "'/'", '+', '$id,', "'rb')"], 'file_path': '@web.session', 'line_number': 72, 'strings': [[False, '$f = open($session_dir + '], [True, "'/'"], [False, ' + $id, '], [True, "'rb'"], [False, ')']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '='], ['o', 'open'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ','], ['s', "'rb'"], ['l', ')']], 'args_eval': [['l', '='], ['o', 'open'], ['l', '('], ['v', 'session_dir', 'self.get_var("session_dir")'], ['l', '+'], ['s', "'/'"], ['l', '+'], ['v', 'id', 'self.get_var("id")'], ['l', ','], ['s', "'rb'"], ['l', ')']]}, {'str': '$content = pickle.load($f)', 'command': '$content', 'args_str': '= pickle.load($f)', 'args': ['=', 'pickle.load($f)'], 'file_path': '@web.session', 'line_number': 73, 'strings': [[False, '$content = pickle.load($f)']], 'eval': [['v', 'content', 'self.get_var("content")'], ['l', '='], ['o', 'pickle.load'], ['l', '('], ['v', 'f', 'self.get_var("f")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'pickle.load'], ['l', '('], ['v', 'f', 'self.get_var("f")'], ['l', ')']]}, {'str': '$f->close ()', 'command': '$f->close', 'args_str': '()', 'args': ['()'], 'file_path': '@web.session', 'line_number': 74, 'strings': [[False, '$f->close ()']], 'eval': [['v', 'f', 'self.get_var("f")'], ['l', '.'], ['n', 'close'], ['l', '('], ['l', ')']], 'args_eval': [['l', '('], ['l', ')']]}, {'str': 'return $content', 'command': 'return', 'args_str': '$content', 'args': ['$content'], 'file_path': '@web.session', 'line_number': 75, 'strings': [[False, 'return $content']], 'eval': [['o', 'return'], ['v', 'content', 'self.get_var("content")']], 'args_eval': [['v', 'content', 'self.get_var("content")']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 76, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "    Starts the session.    "', 'command': '@doc', 'args_str': '"    Starts the session.    "', 'args': ['"', 'Starts', 'the', 'session.', '"'], 'file_path': '@web.session', 'line_number': 77, 'strings': [[False, '@doc '], [True, '"    Starts the session.    "'], [False, '']], 'eval': [['o', '@doc'], ['s', '"    Starts the session.    "']], 'args_eval': [['s', '"    Starts the session.    "']]}, {'str': 'func start_session()', 'command': 'func', 'args_str': 'start_session()', 'args': ['start_session()'], 'file_path': '@web.session', 'line_number': 78, 'strings': [[False, 'func start_session()']], 'eval': [['o', 'func'], ['o', 'start_session'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'start_session'], ['l', '('], ['l', ')']]}, {'str': "if not is_defined('WEB_INITED')", 'command': 'if', 'args_str': "not is_defined('WEB_INITED')", 'args': ['not', "is_defined('WEB_INITED')"], 'file_path': '@web.session', 'line_number': 79, 'strings': [[False, 'if not is_defined('], [True, "'WEB_INITED'"], [False, ')']], 'eval': [['o', 'if'], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_INITED'"], ['l', ')']], 'args_eval': [['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_INITED'"], ['l', ')']]}, {'str': "mem not (not is_defined('WEB_INITED'))", 'command': 'mem', 'args_str': "not (not is_defined('WEB_INITED'))", 'args': ['not', '(not', "is_defined('WEB_INITED'))"], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'mem not (not is_defined('], [True, "'WEB_INITED'"], [False, '))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_INITED'"], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'not'], ['o', 'is_defined'], ['l', '('], ['s', "'WEB_INITED'"], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif66_2', 'command': 'gotoif', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 63, 'strings': [[False, 'gotoif tmplabelif66_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif66_2']], 'args_eval': [['o', 'tmplabelif66_2']]}, {'str': "gset ('web.session', {})", 'command': 'gset', 'args_str': "('web.session', {})", 'args': ["('web.session',", '{})'], 'file_path': '@web.session', 'line_number': 80, 'strings': [[False, 'gset ('], [True, "'web.session'"], [False, ', {})']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.session'"], ['l', ','], ['l', '{'], ['l', '}'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.session'"], ['l', ','], ['l', '{'], ['l', '}'], ['l', ')']]}, {'str': 'return ', 'command': 'return', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 81, 'strings': [[False, 'return']], 'eval': [['o', 'return']], 'args_eval': []}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 82, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif66_2', 'command': 'label', 'args_str': 'tmplabelif66_2', 'args': ['tmplabelif66_2'], 'file_path': '<system>', 'line_number': 68, 'strings': [[False, 'label tmplabelif66_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif66_2']], 'args_eval': [['o', 'tmplabelif66_2']]}, {'str': 'label tmplabelif66_end', 'command': 'label', 'args_str': 'tmplabelif66_end', 'args': ['tmplabelif66_end'], 'file_path': '<system>', 'line_number': 68, 'strings': [[False, 'label tmplabelif66_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif66_end']], 'args_eval': [['o', 'tmplabelif66_end']]}, {'str': "if 'PASHMAK_SESSION' in list($web.cookies->keys())", 'command': 'if', 'args_str': "'PASHMAK_SESSION' in list($web.cookies->keys())", 'args': ["'PASHMAK_SESSION'", 'in', 'list($web.cookies->keys())'], 'file_path': '@web.session', 'line_number': 83, 'strings': [[False, 'if '], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys())']], 'eval': [['o', 'if'], ['s', "'PASHMAK_SESSION'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']], 'args_eval': [['s', "'PASHMAK_SESSION'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')']]}, {'str': "mem not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'command': 'mem', 'args_str': "not ('PASHMAK_SESSION' in list($web.cookies->keys()))", 'args': ['not', "('PASHMAK_SESSION'", 'in', 'list($web.cookies->keys()))'], 'file_path': '<system>', 'line_number': 71, 'strings': [[False, 'mem not ('], [True, "'PASHMAK_SESSION'"], [False, ' in list($web.cookies->keys()))']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['s', "'PASHMAK_SESSION'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['s', "'PASHMAK_SESSION'"], ['o', 'in'], ['o', 'list'], ['l', '('], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '.'], ['n', 'keys'], ['l', '('], ['l', ')'], ['l', ')'], ['l', ')']]}, {'str': 'gotoif tmplabelif67_2', 'command': 'gotoif', 'args_str': 'tmplabelif67_2', 'args': ['tmplabelif67_2'], 'file_path': '<system>', 'line_number': 71, 'strings': [[False, 'gotoif tmplabelif67_2']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif67_2']], 'args_eval': [['o', 'tmplabelif67_2']]}, {'str': "$id = $web.cookies['PASHMAK_SESSION']", 'command': '$id', 'args_str': "= $web.cookies['PASHMAK_SESSION']", 'args': ['=', "$web.cookies['PASHMAK_SESSION']"], 'file_path': '@web.session', 'line_number': 84, 'strings': [[False, '$id = $web.cookies['], [True, "'PASHMAK_SESSION'"], [False, ']']], 'eval': [['v', 'id', 'self.get_var("id")'], ['l', '='], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '['], ['s', "'PASHMAK_SESSION'"], ['l', ']']], 'args_eval': [['l', '='], ['v', 'web.cookies', 'self.get_var("web.cookies")'], ['l', '['], ['s', "'PASHMAK_SESSION'"], ['l', ']']]}, {'str': 'else ', 'command': 'else', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 85, 'strings': [[False, 'else']], 'eval': [['o', 'else']], 'args_eval': []}, {'str': 'goto tmplabelif67_end', 'command': 'goto', 'args_str': 'tmplabelif67_end', 'args': ['tmplabelif67_end'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'goto tmplabelif67_end']], 'eval': [['o', 'goto'], ['o', 'tmplabelif67_end']], 'args_eval': [['o', 'tmplabelif67_end']]}, {'str': 'label tmplabelif67_2', 'command': 'label', 'args_str': 'tmplabelif67_2', 'args': ['tmplabelif67_2'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'label tmplabelif67_2']], 'eval': [['o', 'label'], ['o', 'tmplabelif67_2']], 'args_eval': [['o', 'tmplabelif67_2']]}, {'str': 'mem not (True)', 'command': 'mem', 'args_str': 'not (True)', 'args': ['not', '(True)'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'mem not (True)']], 'eval': [['o', 'mem'], ['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']], 'args_eval': [['o', 'not'], ['l', '('], ['o', 'True'], ['l', ')']]}, {'str': 'gotoif tmplabelif67_3', 'command': 'gotoif', 'args_str': 'tmplabelif67_3', 'args': ['tmplabelif67_3'], 'file_path': '<system>', 'line_number': 75, 'strings': [[False, 'gotoif tmplabelif67_3']], 'eval': [['o', 'gotoif'], ['o', 'tmplabelif67_3']], 'args_eval': [['o', 'tmplabelif67_3']]}, {'str': '$id = write_session()', 'command': '$id', 'args_str': '= write_session()', 'args': ['=', 'write_session()'], 'file_path': '@web.session', 'line_number': 86, 'strings': [[False, '$id = write_session()']], 'eval': [['v', 'id', 'self.get_var("id")'], ['l', '='], ['o', 'write_session'], ['l', '('], ['l', ')']], 'args_eval': [['l', '='], ['o', 'write_session'], ['l', '('], ['l', ')']]}, {'str': "set_cookie ({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'command': 'set_cookie', 'args_str': "({                'name': 'PASHMAK_SESSION',                'value': $id,            })", 'args': ['({', "'name':", "'PASHMAK_SESSION',", "'value':", '$id,', '})'], 'file_path': '@web.session', 'line_number': 90, 'strings': [[False, 'set_cookie ({                '], [True, "'name'"], [False, ': '], [True, "'PASHMAK_SESSION'"], [False, ',                '], [True, "'value'"], [False, ': $id,            })']], 'eval': [['o', 'set_cookie'], ['l', '('], ['l', '{'], ['s', "'name'"], ['l', ':'], ['s', "'PASHMAK_SESSION'"], ['l', ','], ['s', "'value'"], ['l', ':'], ['v', 'id', 'self.get_var("id")'], ['l', ','], ['l', '}'], ['l', ')']], 'args_eval': [['l', '('], ['l', '{'], ['s', "'name'"], ['l', ':'], ['s', "'PASHMAK_SESSION'"], ['l', ','], ['s', "'value'"], ['l', ':'], ['v', 'id', 'self.get_var("id")'], ['l', ','], ['l', '}'], ['l', ')']]}, {'str': 'endif ', 'command': 'endif', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 91, 'strings': [[False, 'endif']], 'eval': [['o', 'endif']], 'args_eval': []}, {'str': 'label tmplabelif67_3', 'command': 'label', 'args_str': 'tmplabelif67_3', 'args': ['tmplabelif67_3'], 'file_path': '<system>', 'line_number': 82, 'strings': [[False, 'label tmplabelif67_3']], 'eval': [['o', 'label'], ['o', 'tmplabelif67_3']], 'args_eval': [['o', 'tmplabelif67_3']]}, {'str': 'label tmplabelif67_end', 'command': 'label', 'args_str': 'tmplabelif67_end', 'args': ['tmplabelif67_end'], 'file_path': '<system>', 'line_number': 82, 'strings': [[False, 'label tmplabelif67_end']], 'eval': [['o', 'label'], ['o', 'tmplabelif67_end']], 'args_eval': [['o', 'tmplabelif67_end']]}, {'str': "define ('WEB_SESSION_ID', $id)", 'command': 'define', 'args_str': "('WEB_SESSION_ID', $id)", 'args': ["('WEB_SESSION_ID',", '$id)'], 'file_path': '@web.session', 'line_number': 92, 'strings': [[False, 'define ('], [True, "'WEB_SESSION_ID'"], [False, ', $id)']], 'eval': [['o', 'define'], ['l', '('], ['s', "'WEB_SESSION_ID'"], ['l', ','], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'WEB_SESSION_ID'"], ['l', ','], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': '$session = load_session_by_id($id)', 'command': '$session', 'args_str': '= load_session_by_id($id)', 'args': ['=', 'load_session_by_id($id)'], 'file_path': '@web.session', 'line_number': 93, 'strings': [[False, '$session = load_session_by_id($id)']], 'eval': [['v', 'session', 'self.get_var("session")'], ['l', '='], ['o', 'load_session_by_id'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']], 'args_eval': [['l', '='], ['o', 'load_session_by_id'], ['l', '('], ['v', 'id', 'self.get_var("id")'], ['l', ')']]}, {'str': "gset ('web.session', $session)", 'command': 'gset', 'args_str': "('web.session', $session)", 'args': ["('web.session',", '$session)'], 'file_path': '@web.session', 'line_number': 94, 'strings': [[False, 'gset ('], [True, "'web.session'"], [False, ', $session)']], 'eval': [['o', 'gset'], ['l', '('], ['s', "'web.session'"], ['l', ','], ['v', 'session', 'self.get_var("session")'], ['l', ')']], 'args_eval': [['l', '('], ['s', "'web.session'"], ['l', ','], ['v', 'session', 'self.get_var("session")'], ['l', ')']]}, {'str': 'register_shutdown (end_session)', 'command': 'register_shutdown', 'args_str': '(end_session)', 'args': ['(end_session)'], 'file_path': '@web.session', 'line_number': 95, 'strings': [[False, 'register_shutdown (end_session)']], 'eval': [['o', 'register_shutdown'], ['l', '('], ['o', 'end_session'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'end_session'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 96, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': '@doc "Re-Write the sessions"', 'command': '@doc', 'args_str': '"Re-Write the sessions"', 'args': ['"Re-Write', 'the', 'sessions"'], 'file_path': '@web.session', 'line_number': 97, 'strings': [[False, '@doc '], [True, '"Re-Write the sessions"'], [False, '']], 'eval': [['o', '@doc'], ['s', '"Re-Write the sessions"']], 'args_eval': [['s', '"Re-Write the sessions"']]}, {'str': 'func end_session()', 'command': 'func', 'args_str': 'end_session()', 'args': ['end_session()'], 'file_path': '@web.session', 'line_number': 98, 'strings': [[False, 'func end_session()']], 'eval': [['o', 'func'], ['o', 'end_session'], ['l', '('], ['l', ')']], 'args_eval': [['o', 'end_session'], ['l', '('], ['l', ')']]}, {'str': "write_session (WEB_SESSION_ID, gget('web.session'))", 'command': 'write_session', 'args_str': "(WEB_SESSION_ID, gget('web.session'))", 'args': ['(WEB_SESSION_ID,', "gget('web.session'))"], 'file_path': '@web.session', 'line_number': 99, 'strings': [[False, 'write_session (WEB_SESSION_ID, gget('], [True, "'web.session'"], [False, '))']], 'eval': [['o', 'write_session'], ['l', '('], ['o', 'WEB_SESSION_ID'], ['l', ','], ['o', 'gget'], ['l', '('], ['s', "'web.session'"], ['l', ')'], ['l', ')']], 'args_eval': [['l', '('], ['o', 'WEB_SESSION_ID'], ['l', ','], ['o', 'gget'], ['l', '('], ['s', "'web.session'"], ['l', ')'], ['l', ')']]}, {'str': 'endfunc ', 'command': 'endfunc', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 100, 'strings': [[False, 'endfunc']], 'eval': [['o', 'endfunc']], 'args_eval': []}, {'str': 'endns ', 'command': 'endns', 'args_str': '', 'args': [], 'file_path': '@web.session', 'line_number': 101, 'strings': [[False, 'endns']], 'eval': [['o', 'endns']], 'args_eval': []}]
module["regex"] = [{}]
